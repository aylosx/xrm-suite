//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Xml.Serialization;

// 
// This source code was auto-generated by xsd, Version=4.8.3928.0.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlRootAttribute("fetch", Namespace="", IsNullable=false)]
public partial class FetchType {
    
    private object[] itemsField;
    
    private string versionField;
    
    private string countField;
    
    private string pageField;
    
    private string pagingcookieField;
    
    private string utcoffsetField;
    
    private bool aggregateField;
    
    private bool aggregateFieldSpecified;
    
    private bool distinctField;
    
    private bool distinctFieldSpecified;
    
    private string topField;
    
    private FetchTypeMapping mappingField;
    
    private bool mappingFieldSpecified;
    
    private bool minactiverowversionField;
    
    private FetchTypeOutputformat outputformatField;
    
    private bool outputformatFieldSpecified;
    
    private bool returntotalrecordcountField;
    
    private bool nolockField;
    
    public FetchType() {
        this.minactiverowversionField = false;
        this.returntotalrecordcountField = false;
        this.nolockField = false;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("entity", typeof(FetchEntityType))]
    [System.Xml.Serialization.XmlElementAttribute("order", typeof(FetchOrderType))]
    public object[] Items {
        get {
            return this.itemsField;
        }
        set {
            this.itemsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
    public string count {
        get {
            return this.countField;
        }
        set {
            this.countField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
    public string page {
        get {
            return this.pageField;
        }
        set {
            this.pageField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("paging-cookie")]
    public string pagingcookie {
        get {
            return this.pagingcookieField;
        }
        set {
            this.pagingcookieField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("utc-offset")]
    public string utcoffset {
        get {
            return this.utcoffsetField;
        }
        set {
            this.utcoffsetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public bool aggregate {
        get {
            return this.aggregateField;
        }
        set {
            this.aggregateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool aggregateSpecified {
        get {
            return this.aggregateFieldSpecified;
        }
        set {
            this.aggregateFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public bool distinct {
        get {
            return this.distinctField;
        }
        set {
            this.distinctField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool distinctSpecified {
        get {
            return this.distinctFieldSpecified;
        }
        set {
            this.distinctFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
    public string top {
        get {
            return this.topField;
        }
        set {
            this.topField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public FetchTypeMapping mapping {
        get {
            return this.mappingField;
        }
        set {
            this.mappingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool mappingSpecified {
        get {
            return this.mappingFieldSpecified;
        }
        set {
            this.mappingFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("min-active-row-version")]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool minactiverowversion {
        get {
            return this.minactiverowversionField;
        }
        set {
            this.minactiverowversionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("output-format")]
    public FetchTypeOutputformat outputformat {
        get {
            return this.outputformatField;
        }
        set {
            this.outputformatField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool outputformatSpecified {
        get {
            return this.outputformatFieldSpecified;
        }
        set {
            this.outputformatFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool returntotalrecordcount {
        get {
            return this.returntotalrecordcountField;
        }
        set {
            this.returntotalrecordcountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("no-lock")]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool nolock {
        get {
            return this.nolockField;
        }
        set {
            this.nolockField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class FetchEntityType {
    
    private object[] itemsField;
    
    private string nameField;
    
    private bool enableprefilteringField;
    
    private bool enableprefilteringFieldSpecified;
    
    private string prefilterparameternameField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("all-attributes", typeof(allattributes))]
    [System.Xml.Serialization.XmlElementAttribute("attribute", typeof(FetchAttributeType))]
    [System.Xml.Serialization.XmlElementAttribute("filter", typeof(filter))]
    [System.Xml.Serialization.XmlElementAttribute("link-entity", typeof(FetchLinkEntityType))]
    [System.Xml.Serialization.XmlElementAttribute("order", typeof(FetchOrderType))]
    public object[] Items {
        get {
            return this.itemsField;
        }
        set {
            this.itemsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public bool enableprefiltering {
        get {
            return this.enableprefilteringField;
        }
        set {
            this.enableprefilteringField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool enableprefilteringSpecified {
        get {
            return this.enableprefilteringFieldSpecified;
        }
        set {
            this.enableprefilteringFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string prefilterparametername {
        get {
            return this.prefilterparameternameField;
        }
        set {
            this.prefilterparameternameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class allattributes {
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class FetchLinkEntityType {
    
    private object[] itemsField;
    
    private string nameField;
    
    private string toField;
    
    private string fromField;
    
    private string aliasField;
    
    private string linktypeField;
    
    private bool visibleField;
    
    private bool visibleFieldSpecified;
    
    private bool intersectField;
    
    private bool intersectFieldSpecified;
    
    private bool enableprefilteringField;
    
    private bool enableprefilteringFieldSpecified;
    
    private string prefilterparameternameField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("all-attributes", typeof(allattributes))]
    [System.Xml.Serialization.XmlElementAttribute("attribute", typeof(FetchAttributeType))]
    [System.Xml.Serialization.XmlElementAttribute("filter", typeof(filter))]
    [System.Xml.Serialization.XmlElementAttribute("link-entity", typeof(FetchLinkEntityType))]
    [System.Xml.Serialization.XmlElementAttribute("order", typeof(FetchOrderType))]
    public object[] Items {
        get {
            return this.itemsField;
        }
        set {
            this.itemsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string to {
        get {
            return this.toField;
        }
        set {
            this.toField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string from {
        get {
            return this.fromField;
        }
        set {
            this.fromField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string alias {
        get {
            return this.aliasField;
        }
        set {
            this.aliasField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("link-type")]
    public string linktype {
        get {
            return this.linktypeField;
        }
        set {
            this.linktypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public bool visible {
        get {
            return this.visibleField;
        }
        set {
            this.visibleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool visibleSpecified {
        get {
            return this.visibleFieldSpecified;
        }
        set {
            this.visibleFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public bool intersect {
        get {
            return this.intersectField;
        }
        set {
            this.intersectField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool intersectSpecified {
        get {
            return this.intersectFieldSpecified;
        }
        set {
            this.intersectFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public bool enableprefiltering {
        get {
            return this.enableprefilteringField;
        }
        set {
            this.enableprefilteringField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool enableprefilteringSpecified {
        get {
            return this.enableprefilteringFieldSpecified;
        }
        set {
            this.enableprefilteringFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string prefilterparametername {
        get {
            return this.prefilterparameternameField;
        }
        set {
            this.prefilterparameternameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class FetchAttributeType {
    
    private string nameField;
    
    private build buildField;
    
    private bool buildFieldSpecified;
    
    private string addedbyField;
    
    private string aliasField;
    
    private AggregateType aggregateField;
    
    private bool aggregateFieldSpecified;
    
    private FetchBoolType groupbyField;
    
    private bool groupbyFieldSpecified;
    
    private DateGroupingType dategroupingField;
    
    private bool dategroupingFieldSpecified;
    
    private FetchBoolType usertimezoneField;
    
    private bool usertimezoneFieldSpecified;
    
    private FetchBoolType distinctField;
    
    private bool distinctFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public build build {
        get {
            return this.buildField;
        }
        set {
            this.buildField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool buildSpecified {
        get {
            return this.buildFieldSpecified;
        }
        set {
            this.buildFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string addedby {
        get {
            return this.addedbyField;
        }
        set {
            this.addedbyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string alias {
        get {
            return this.aliasField;
        }
        set {
            this.aliasField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public AggregateType aggregate {
        get {
            return this.aggregateField;
        }
        set {
            this.aggregateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool aggregateSpecified {
        get {
            return this.aggregateFieldSpecified;
        }
        set {
            this.aggregateFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public FetchBoolType groupby {
        get {
            return this.groupbyField;
        }
        set {
            this.groupbyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool groupbySpecified {
        get {
            return this.groupbyFieldSpecified;
        }
        set {
            this.groupbyFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public DateGroupingType dategrouping {
        get {
            return this.dategroupingField;
        }
        set {
            this.dategroupingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool dategroupingSpecified {
        get {
            return this.dategroupingFieldSpecified;
        }
        set {
            this.dategroupingFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public FetchBoolType usertimezone {
        get {
            return this.usertimezoneField;
        }
        set {
            this.usertimezoneField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool usertimezoneSpecified {
        get {
            return this.usertimezoneFieldSpecified;
        }
        set {
            this.usertimezoneFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public FetchBoolType distinct {
        get {
            return this.distinctField;
        }
        set {
            this.distinctField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool distinctSpecified {
        get {
            return this.distinctFieldSpecified;
        }
        set {
            this.distinctFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
public enum build {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("1.504021")]
    Item1504021,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("1.003017")]
    Item1003017,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
public enum AggregateType {
    
    /// <remarks/>
    count,
    
    /// <remarks/>
    countcolumn,
    
    /// <remarks/>
    sum,
    
    /// <remarks/>
    avg,
    
    /// <remarks/>
    min,
    
    /// <remarks/>
    max,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
public enum FetchBoolType {
    
    /// <remarks/>
    @true,
    
    /// <remarks/>
    @false,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("1")]
    Item1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("0")]
    Item0,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
public enum DateGroupingType {
    
    /// <remarks/>
    day,
    
    /// <remarks/>
    week,
    
    /// <remarks/>
    month,
    
    /// <remarks/>
    quarter,
    
    /// <remarks/>
    year,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("fiscal-period")]
    fiscalperiod,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("fiscal-year")]
    fiscalyear,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class filter {
    
    private object[] itemsField;
    
    private filterType typeField;
    
    private bool isquickfindfieldsField;
    
    private bool isquickfindfieldsFieldSpecified;
    
    public filter() {
        this.typeField = filterType.and;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("condition", typeof(condition))]
    [System.Xml.Serialization.XmlElementAttribute("filter", typeof(filter))]
    public object[] Items {
        get {
            return this.itemsField;
        }
        set {
            this.itemsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(filterType.and)]
    public filterType type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public bool isquickfindfields {
        get {
            return this.isquickfindfieldsField;
        }
        set {
            this.isquickfindfieldsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool isquickfindfieldsSpecified {
        get {
            return this.isquickfindfieldsFieldSpecified;
        }
        set {
            this.isquickfindfieldsFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class condition {
    
    private conditionValue[] itemsField;
    
    private string columnField;
    
    private string attributeField;
    
    private string entitynameField;
    
    private @operator operatorField;
    
    private string valueField;
    
    private AggregateType aggregateField;
    
    private bool aggregateFieldSpecified;
    
    private RowAggregateType rowaggregateField;
    
    private bool rowaggregateFieldSpecified;
    
    private string aliasField;
    
    private string uinameField;
    
    private string uitypeField;
    
    private TrueFalse01Type uihiddenField;
    
    private bool uihiddenFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("value")]
    public conditionValue[] Items {
        get {
            return this.itemsField;
        }
        set {
            this.itemsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string column {
        get {
            return this.columnField;
        }
        set {
            this.columnField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string attribute {
        get {
            return this.attributeField;
        }
        set {
            this.attributeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string entityname {
        get {
            return this.entitynameField;
        }
        set {
            this.entitynameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public @operator @operator {
        get {
            return this.operatorField;
        }
        set {
            this.operatorField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public AggregateType aggregate {
        get {
            return this.aggregateField;
        }
        set {
            this.aggregateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool aggregateSpecified {
        get {
            return this.aggregateFieldSpecified;
        }
        set {
            this.aggregateFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public RowAggregateType rowaggregate {
        get {
            return this.rowaggregateField;
        }
        set {
            this.rowaggregateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool rowaggregateSpecified {
        get {
            return this.rowaggregateFieldSpecified;
        }
        set {
            this.rowaggregateFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string alias {
        get {
            return this.aliasField;
        }
        set {
            this.aliasField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uiname {
        get {
            return this.uinameField;
        }
        set {
            this.uinameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uitype {
        get {
            return this.uitypeField;
        }
        set {
            this.uitypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TrueFalse01Type uihidden {
        get {
            return this.uihiddenField;
        }
        set {
            this.uihiddenField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool uihiddenSpecified {
        get {
            return this.uihiddenFieldSpecified;
        }
        set {
            this.uihiddenFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class conditionValue {
    
    private string uinameField;
    
    private string uitypeField;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uiname {
        get {
            return this.uinameField;
        }
        set {
            this.uinameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uitype {
        get {
            return this.uitypeField;
        }
        set {
            this.uitypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
public enum @operator {
    
    /// <remarks/>
    eq,
    
    /// <remarks/>
    neq,
    
    /// <remarks/>
    ne,
    
    /// <remarks/>
    gt,
    
    /// <remarks/>
    ge,
    
    /// <remarks/>
    le,
    
    /// <remarks/>
    lt,
    
    /// <remarks/>
    like,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("not-like")]
    notlike,
    
    /// <remarks/>
    @in,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("not-in")]
    notin,
    
    /// <remarks/>
    between,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("not-between")]
    notbetween,
    
    /// <remarks/>
    @null,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("not-null")]
    notnull,
    
    /// <remarks/>
    yesterday,
    
    /// <remarks/>
    today,
    
    /// <remarks/>
    tomorrow,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("last-seven-days")]
    lastsevendays,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("next-seven-days")]
    nextsevendays,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("last-week")]
    lastweek,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("this-week")]
    thisweek,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("next-week")]
    nextweek,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("last-month")]
    lastmonth,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("this-month")]
    thismonth,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("next-month")]
    nextmonth,
    
    /// <remarks/>
    on,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("on-or-before")]
    onorbefore,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("on-or-after")]
    onorafter,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("last-year")]
    lastyear,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("this-year")]
    thisyear,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("next-year")]
    nextyear,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("last-x-hours")]
    lastxhours,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("next-x-hours")]
    nextxhours,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("last-x-days")]
    lastxdays,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("next-x-days")]
    nextxdays,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("last-x-weeks")]
    lastxweeks,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("next-x-weeks")]
    nextxweeks,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("last-x-months")]
    lastxmonths,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("next-x-months")]
    nextxmonths,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("olderthan-x-months")]
    olderthanxmonths,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("olderthan-x-years")]
    olderthanxyears,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("olderthan-x-weeks")]
    olderthanxweeks,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("olderthan-x-days")]
    olderthanxdays,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("olderthan-x-hours")]
    olderthanxhours,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("olderthan-x-minutes")]
    olderthanxminutes,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("last-x-years")]
    lastxyears,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("next-x-years")]
    nextxyears,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("eq-userid")]
    equserid,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("ne-userid")]
    neuserid,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("eq-userteams")]
    equserteams,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("eq-useroruserteams")]
    equseroruserteams,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("eq-useroruserhierarchy")]
    equseroruserhierarchy,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("eq-useroruserhierarchyandteams")]
    equseroruserhierarchyandteams,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("eq-businessid")]
    eqbusinessid,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("ne-businessid")]
    nebusinessid,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("eq-userlanguage")]
    equserlanguage,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("this-fiscal-year")]
    thisfiscalyear,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("this-fiscal-period")]
    thisfiscalperiod,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("next-fiscal-year")]
    nextfiscalyear,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("next-fiscal-period")]
    nextfiscalperiod,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("last-fiscal-year")]
    lastfiscalyear,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("last-fiscal-period")]
    lastfiscalperiod,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("last-x-fiscal-years")]
    lastxfiscalyears,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("last-x-fiscal-periods")]
    lastxfiscalperiods,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("next-x-fiscal-years")]
    nextxfiscalyears,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("next-x-fiscal-periods")]
    nextxfiscalperiods,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("in-fiscal-year")]
    infiscalyear,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("in-fiscal-period")]
    infiscalperiod,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("in-fiscal-period-and-year")]
    infiscalperiodandyear,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("in-or-before-fiscal-period-and-year")]
    inorbeforefiscalperiodandyear,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("in-or-after-fiscal-period-and-year")]
    inorafterfiscalperiodandyear,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("begins-with")]
    beginswith,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("not-begin-with")]
    notbeginwith,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("ends-with")]
    endswith,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("not-end-with")]
    notendwith,
    
    /// <remarks/>
    under,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("eq-or-under")]
    eqorunder,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("not-under")]
    notunder,
    
    /// <remarks/>
    above,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("eq-or-above")]
    eqorabove,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("contain-values")]
    containvalues,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("not-contain-values")]
    notcontainvalues,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
public enum RowAggregateType {
    
    /// <remarks/>
    countchildren,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
public enum TrueFalse01Type {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("0")]
    Item0,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("1")]
    Item1,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum filterType {
    
    /// <remarks/>
    and,
    
    /// <remarks/>
    or,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class FetchOrderType {
    
    private object[] itemsField;
    
    private string attributeField;
    
    private string aliasField;
    
    private bool descendingField;
    
    public FetchOrderType() {
        this.descendingField = false;
    }
    
    /// <remarks/>
    public object[] Items {
        get {
            return this.itemsField;
        }
        set {
            this.itemsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string attribute {
        get {
            return this.attributeField;
        }
        set {
            this.attributeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string alias {
        get {
            return this.aliasField;
        }
        set {
            this.aliasField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool descending {
        get {
            return this.descendingField;
        }
        set {
            this.descendingField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum FetchTypeMapping {
    
    /// <remarks/>
    @internal,
    
    /// <remarks/>
    logical,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum FetchTypeOutputformat {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("xml-ado")]
    xmlado,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("xml-auto")]
    xmlauto,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("xml-elements")]
    xmlelements,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("xml-raw")]
    xmlraw,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("xml-platform")]
    xmlplatform,
}
