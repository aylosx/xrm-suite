//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Aylos.Xrm.Sdk.BuildTools.Models.Domain
{
	using Microsoft.Xrm.Sdk;
	using Microsoft.Xrm.Sdk.Client;
	using System;
	using System.CodeDom.Compiler;
	using System.Collections.Generic;
	using System.ComponentModel;
	using System.Linq;
	using System.Runtime.Serialization;
	
	
	/// <summary>
	/// Message that is supported by the SDK.
	/// </summary>
	[DataContractAttribute()]
	[EntityLogicalNameAttribute("sdkmessage")]
	[GeneratedCodeAttribute("CrmSvcUtil", "9.0.0.9479")]
	public partial class SdkMessage : Entity, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public SdkMessage() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "sdkmessage";
		
		public const int EntityTypeCode = 4606;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Information about whether the SDK message is automatically transacted.
		/// </summary>
		[AttributeLogicalNameAttribute("autotransact")]
		public Nullable<bool> AutoTransact
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("autotransact");
			}
			set
			{
				this.OnPropertyChanging("AutoTransact");
				this.SetAttributeValue("autotransact", value);
				this.OnPropertyChanged("AutoTransact");
			}
		}
		
		/// <summary>
		/// Identifies where a method will be exposed. 0 - Server, 1 - Client, 2 - both.
		/// </summary>
		[AttributeLogicalNameAttribute("availability")]
		public Nullable<int> Availability
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("availability");
			}
			set
			{
				this.OnPropertyChanging("Availability");
				this.SetAttributeValue("availability", value);
				this.OnPropertyChanged("Availability");
			}
		}
		
		/// <summary>
		/// If this is a categorized method, this is the name, otherwise None.
		/// </summary>
		[AttributeLogicalNameAttribute("categoryname")]
		public string CategoryName
		{
			get
			{
				return this.GetAttributeValue<string>("categoryname");
			}
			set
			{
				this.OnPropertyChanging("CategoryName");
				this.SetAttributeValue("categoryname", value);
				this.OnPropertyChanged("CategoryName");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[AttributeLogicalNameAttribute("componentstate")]
		public Nullable<GlobalComponentState> ComponentState
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("componentstate");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (GlobalComponentState)(Enum.ToObject(typeof(GlobalComponentState), optionSet.Value));
				}
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the SDK message.
		/// </summary>
		/// <remarks>
		/// The property is read-only and the setter has been added to assist with unit testing only.
		/// </remarks>
		[AttributeLogicalNameAttribute("createdby")]
		public EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("createdby");
			}
			set
			{
				this.OnPropertyChanging("CreatedBy");
				this.SetAttributeValue("createdby", value);
				this.OnPropertyChanged("CreatedBy");
			}
		}
		
		/// <summary>
		/// Date and time when the SDK message was created.
		/// </summary>
		/// <remarks>
		/// The property is read-only and the setter has been added to assist with unit testing only.
		/// </remarks>
		[AttributeLogicalNameAttribute("createdon")]
		public Nullable<DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<Nullable<DateTime>>("createdon");
			}
			set
			{
				this.OnPropertyChanging("CreatedOn");
				this.SetAttributeValue("createdon", value);
				this.OnPropertyChanged("CreatedOn");
			}
		}
		
		/// <summary>
		/// Customization level of the SDK message.
		/// </summary>
		[AttributeLogicalNameAttribute("customizationlevel")]
		public Nullable<int> CustomizationLevel
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("customizationlevel");
			}
		}
		
		/// <summary>
		/// Indicates whether the SDK message should have its requests expanded per primary entity defined in its filters.
		/// </summary>
		[AttributeLogicalNameAttribute("expand")]
		public Nullable<bool> Expand
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("expand");
			}
			set
			{
				this.OnPropertyChanging("Expand");
				this.SetAttributeValue("expand", value);
				this.OnPropertyChanged("Expand");
			}
		}
		
		/// <summary>
		/// Version in which the component is introduced.
		/// </summary>
		[AttributeLogicalNameAttribute("introducedversion")]
		public string IntroducedVersion
		{
			get
			{
				return this.GetAttributeValue<string>("introducedversion");
			}
			set
			{
				this.OnPropertyChanging("IntroducedVersion");
				this.SetAttributeValue("introducedversion", value);
				this.OnPropertyChanged("IntroducedVersion");
			}
		}
		
		/// <summary>
		/// Information about whether the SDK message is active.
		/// </summary>
		[AttributeLogicalNameAttribute("isactive")]
		public Nullable<bool> IsActive
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("isactive");
			}
			set
			{
				this.OnPropertyChanging("IsActive");
				this.SetAttributeValue("isactive", value);
				this.OnPropertyChanged("IsActive");
			}
		}
		
		/// <summary>
		/// Information that specifies whether this component is managed.
		/// </summary>
		[AttributeLogicalNameAttribute("ismanaged")]
		public Nullable<bool> State
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("ismanaged");
			}
		}
		
		/// <summary>
		/// Indicates whether the SDK message is private.
		/// </summary>
		[AttributeLogicalNameAttribute("isprivate")]
		public Nullable<bool> IsPrivate
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("isprivate");
			}
			set
			{
				this.OnPropertyChanging("IsPrivate");
				this.SetAttributeValue("isprivate", value);
				this.OnPropertyChanged("IsPrivate");
			}
		}
		
		/// <summary>
		/// Identifies whether an SDK message will be ReadOnly or Read Write. false - ReadWrite, true - ReadOnly .
		/// </summary>
		[AttributeLogicalNameAttribute("isreadonly")]
		public Nullable<bool> Intent
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("isreadonly");
			}
			set
			{
				this.OnPropertyChanging("Intent");
				this.SetAttributeValue("isreadonly", value);
				this.OnPropertyChanged("Intent");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[AttributeLogicalNameAttribute("isvalidforexecuteasync")]
		public Nullable<bool> IsValidForExecuteAsync
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("isvalidforexecuteasync");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who last modified the SDK message.
		/// </summary>
		/// <remarks>
		/// The property is read-only and the setter has been added to assist with unit testing only.
		/// </remarks>
		[AttributeLogicalNameAttribute("modifiedby")]
		public EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("modifiedby");
			}
			set
			{
				this.OnPropertyChanging("ModifiedBy");
				this.SetAttributeValue("modifiedby", value);
				this.OnPropertyChanged("ModifiedBy");
			}
		}
		
		/// <summary>
		/// Date and time when the SDK message was last modified.
		/// </summary>
		/// <remarks>
		/// The property is read-only and the setter has been added to assist with unit testing only.
		/// </remarks>
		[AttributeLogicalNameAttribute("modifiedon")]
		public Nullable<DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<Nullable<DateTime>>("modifiedon");
			}
			set
			{
				this.OnPropertyChanging("ModifiedOn");
				this.SetAttributeValue("modifiedon", value);
				this.OnPropertyChanged("ModifiedOn");
			}
		}
		
		/// <summary>
		/// Name of the SDK message.
		/// </summary>
		[AttributeLogicalNameAttribute("name")]
		public string Name
		{
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			set
			{
				this.OnPropertyChanging("Name");
				this.SetAttributeValue("name", value);
				this.OnPropertyChanged("Name");
			}
		}
		
		/// <summary>
		/// Unique identifier of the organization with which the SDK message is associated.
		/// </summary>
		[AttributeLogicalNameAttribute("organizationid")]
		public EntityReference OrganizationId
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("organizationid");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[AttributeLogicalNameAttribute("overwritetime")]
		public Nullable<DateTime> RecordOverwriteTime
		{
			get
			{
				return this.GetAttributeValue<Nullable<DateTime>>("overwritetime");
			}
		}
		
		/// <summary>
		/// Unique identifier of the SDK message entity.
		/// </summary>
		[AttributeLogicalNameAttribute("sdkmessageid")]
		public Nullable<Guid> SdkMessageId
		{
			get
			{
				return this.GetAttributeValue<Nullable<Guid>>("sdkmessageid");
			}
			set
			{
				this.OnPropertyChanging("SdkMessageId");
				this.SetAttributeValue("sdkmessageid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = Guid.Empty;
				}
				this.OnPropertyChanged("SdkMessageId");
			}
		}
		
		[AttributeLogicalNameAttribute("sdkmessageid")]
		public override Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.SdkMessageId = value;
			}
		}
		
		/// <summary>
		/// Unique identifier of the SDK message.
		/// </summary>
		[AttributeLogicalNameAttribute("sdkmessageidunique")]
		public Nullable<Guid> SdkMessageIdUnique
		{
			get
			{
				return this.GetAttributeValue<Nullable<Guid>>("sdkmessageidunique");
			}
		}
		
		/// <summary>
		/// Unique identifier of the associated solution.
		/// </summary>
		[AttributeLogicalNameAttribute("solutionid")]
		public Nullable<Guid> Solution
		{
			get
			{
				return this.GetAttributeValue<Nullable<Guid>>("solutionid");
			}
		}
		
		/// <summary>
		/// Indicates whether the SDK message is a template.
		/// </summary>
		[AttributeLogicalNameAttribute("template")]
		public Nullable<bool> Template
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("template");
			}
			set
			{
				this.OnPropertyChanging("Template");
				this.SetAttributeValue("template", value);
				this.OnPropertyChanged("Template");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[AttributeLogicalNameAttribute("throttlesettings")]
		public string ThrottleSettings
		{
			get
			{
				return this.GetAttributeValue<string>("throttlesettings");
			}
		}
		
		/// <summary>
		/// Whether or not the SDK message can be called from a workflow.
		/// </summary>
		[AttributeLogicalNameAttribute("workflowsdkstepenabled")]
		public Nullable<bool> WorkflowSdkStepEnabled
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("workflowsdkstepenabled");
			}
		}
		
		public struct Fields
		{
			
			public static string AutoTransact = "autotransact";
			
			public static string Availability = "availability";
			
			public static string CategoryName = "categoryname";
			
			public static string ComponentState = "componentstate";
			
			public static string CreatedBy = "createdby";
			
			public static string CreatedOn = "createdon";
			
			public static string CustomizationLevel = "customizationlevel";
			
			public static string Expand = "expand";
			
			public static string IntroducedVersion = "introducedversion";
			
			public static string IsActive = "isactive";
			
			public static string State = "ismanaged";
			
			public static string IsPrivate = "isprivate";
			
			public static string Intent = "isreadonly";
			
			public static string IsValidForExecuteAsync = "isvalidforexecuteasync";
			
			public static string ModifiedBy = "modifiedby";
			
			public static string ModifiedOn = "modifiedon";
			
			public static string Name = "name";
			
			public static string OrganizationId = "organizationid";
			
			public static string RecordOverwriteTime = "overwritetime";
			
			public static string SdkMessageId = "sdkmessageid";
			
			public static string Id = "sdkmessageid";
			
			public static string SdkMessageIdUnique = "sdkmessageidunique";
			
			public static string Solution = "solutionid";
			
			public static string Template = "template";
			
			public static string ThrottleSettings = "throttlesettings";
			
			public static string WorkflowSdkStepEnabled = "workflowsdkstepenabled";
		}
	}
}
