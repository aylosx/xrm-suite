//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Aylos.Xrm.Sdk.BuildTools.Models.Domain
{
	using Microsoft.Xrm.Sdk;
	using Microsoft.Xrm.Sdk.Client;
	using System;
	using System.CodeDom.Compiler;
	using System.Collections.Generic;
	using System.ComponentModel;
	using System.Linq;
	using System.Runtime.Serialization;
	
	
	/// <summary>
	/// For internal use only.
	/// </summary>
	[DataContractAttribute()]
	[EntityLogicalNameAttribute("importjob")]
	[GeneratedCodeAttribute("CrmSvcUtil", "9.0.0.9479")]
	public partial class ImportJob : Entity, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public ImportJob() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "importjob";
		
		public const int EntityTypeCode = 9107;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Date and time when the import job was completed.
		/// </summary>
		[AttributeLogicalNameAttribute("completedon")]
		public Nullable<DateTime> CompletedOn
		{
			get
			{
				return this.GetAttributeValue<Nullable<DateTime>>("completedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the importJob.
		/// </summary>
		/// <remarks>
		/// The property is read-only and the setter has been added to assist with unit testing only.
		/// </remarks>
		[AttributeLogicalNameAttribute("createdby")]
		public EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("createdby");
			}
			set
			{
				this.OnPropertyChanging("CreatedBy");
				this.SetAttributeValue("createdby", value);
				this.OnPropertyChanged("CreatedBy");
			}
		}
		
		/// <summary>
		/// Date and time when the import job record was created.
		/// </summary>
		/// <remarks>
		/// The property is read-only and the setter has been added to assist with unit testing only.
		/// </remarks>
		[AttributeLogicalNameAttribute("createdon")]
		public Nullable<DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<Nullable<DateTime>>("createdon");
			}
			set
			{
				this.OnPropertyChanging("CreatedOn");
				this.SetAttributeValue("createdon", value);
				this.OnPropertyChanged("CreatedOn");
			}
		}
		
		/// <summary>
		/// Unstructured data associated with the import job.
		/// </summary>
		[AttributeLogicalNameAttribute("data")]
		public string Data
		{
			get
			{
				return this.GetAttributeValue<string>("data");
			}
			set
			{
				this.OnPropertyChanging("Data");
				this.SetAttributeValue("data", value);
				this.OnPropertyChanged("Data");
			}
		}
		
		/// <summary>
		/// The context of the import
		/// </summary>
		[AttributeLogicalNameAttribute("importcontext")]
		public string ImportContext
		{
			get
			{
				return this.GetAttributeValue<string>("importcontext");
			}
			set
			{
				this.OnPropertyChanging("ImportContext");
				this.SetAttributeValue("importcontext", value);
				this.OnPropertyChanged("ImportContext");
			}
		}
		
		/// <summary>
		/// Unique identifier of the import job.
		/// </summary>
		[AttributeLogicalNameAttribute("importjobid")]
		public Nullable<Guid> ImportJobId
		{
			get
			{
				return this.GetAttributeValue<Nullable<Guid>>("importjobid");
			}
			set
			{
				this.OnPropertyChanging("ImportJobId");
				this.SetAttributeValue("importjobid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = Guid.Empty;
				}
				this.OnPropertyChanged("ImportJobId");
			}
		}
		
		[AttributeLogicalNameAttribute("importjobid")]
		public override Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.ImportJobId = value;
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the importJob.
		/// </summary>
		/// <remarks>
		/// The property is read-only and the setter has been added to assist with unit testing only.
		/// </remarks>
		[AttributeLogicalNameAttribute("modifiedby")]
		public EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("modifiedby");
			}
			set
			{
				this.OnPropertyChanging("ModifiedBy");
				this.SetAttributeValue("modifiedby", value);
				this.OnPropertyChanged("ModifiedBy");
			}
		}
		
		/// <summary>
		/// Date and time when the import job was last modified.
		/// </summary>
		/// <remarks>
		/// The property is read-only and the setter has been added to assist with unit testing only.
		/// </remarks>
		[AttributeLogicalNameAttribute("modifiedon")]
		public Nullable<DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<Nullable<DateTime>>("modifiedon");
			}
			set
			{
				this.OnPropertyChanging("ModifiedOn");
				this.SetAttributeValue("modifiedon", value);
				this.OnPropertyChanged("ModifiedOn");
			}
		}
		
		/// <summary>
		/// Name of the import job.
		/// </summary>
		[AttributeLogicalNameAttribute("name")]
		public string ImportJobName
		{
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			set
			{
				this.OnPropertyChanging("ImportJobName");
				this.SetAttributeValue("name", value);
				this.OnPropertyChanged("ImportJobName");
			}
		}
		
		/// <summary>
		/// The context of the solution operation
		/// </summary>
		[AttributeLogicalNameAttribute("operationcontext")]
		public string SolutionOperationContext
		{
			get
			{
				return this.GetAttributeValue<string>("operationcontext");
			}
			set
			{
				this.OnPropertyChanging("SolutionOperationContext");
				this.SetAttributeValue("operationcontext", value);
				this.OnPropertyChanged("SolutionOperationContext");
			}
		}
		
		/// <summary>
		/// Unique identifier of the organization associated with the importjob.
		/// </summary>
		[AttributeLogicalNameAttribute("organizationid")]
		public EntityReference Organization
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("organizationid");
			}
		}
		
		/// <summary>
		/// Import Progress Percentage.
		/// </summary>
		[AttributeLogicalNameAttribute("progress")]
		public Nullable<double> Progress
		{
			get
			{
				return this.GetAttributeValue<Nullable<double>>("progress");
			}
			set
			{
				this.OnPropertyChanging("Progress");
				this.SetAttributeValue("progress", value);
				this.OnPropertyChanged("Progress");
			}
		}
		
		/// <summary>
		/// Unique identifier of the associated solution.
		/// </summary>
		[AttributeLogicalNameAttribute("solutionid")]
		public Nullable<Guid> Solution
		{
			get
			{
				return this.GetAttributeValue<Nullable<Guid>>("solutionid");
			}
		}
		
		/// <summary>
		/// Unique identifier of the solution.
		/// </summary>
		[AttributeLogicalNameAttribute("solutionname")]
		public string SolutionName
		{
			get
			{
				return this.GetAttributeValue<string>("solutionname");
			}
			set
			{
				this.OnPropertyChanging("SolutionName");
				this.SetAttributeValue("solutionname", value);
				this.OnPropertyChanged("SolutionName");
			}
		}
		
		/// <summary>
		/// Date and time when the import job was started.
		/// </summary>
		[AttributeLogicalNameAttribute("startedon")]
		public Nullable<DateTime> StartedOn
		{
			get
			{
				return this.GetAttributeValue<Nullable<DateTime>>("startedon");
			}
		}
		
		public struct Fields
		{
			
			public static string CompletedOn = "completedon";
			
			public static string CreatedBy = "createdby";
			
			public static string CreatedOn = "createdon";
			
			public static string Data = "data";
			
			public static string ImportContext = "importcontext";
			
			public static string ImportJobId = "importjobid";
			
			public static string Id = "importjobid";
			
			public static string ModifiedBy = "modifiedby";
			
			public static string ModifiedOn = "modifiedon";
			
			public static string ImportJobName = "name";
			
			public static string SolutionOperationContext = "operationcontext";
			
			public static string Organization = "organizationid";
			
			public static string Progress = "progress";
			
			public static string Solution = "solutionid";
			
			public static string SolutionName = "solutionname";
			
			public static string StartedOn = "startedon";
		}
	}
}
