//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Aylos.Xrm.Sdk.BuildTools.Models.Domain
{
	using Microsoft.Xrm.Sdk;
	using Microsoft.Xrm.Sdk.Client;
	using System;
	using System.CodeDom.Compiler;
	using System.Collections.Generic;
	using System.ComponentModel;
	using System.Linq;
	using System.Runtime.Serialization;
	
	
	/// <summary>
	/// Top level of the Microsoft Dynamics 365 business hierarchy. The organization can be a specific business, holding company, or corporation.
	/// </summary>
	[DataContractAttribute()]
	[EntityLogicalNameAttribute("organization")]
	[GeneratedCodeAttribute("CrmSvcUtil", "9.0.0.9479")]
	public partial class Organization : Entity, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public Organization() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "organization";
		
		public const int EntityTypeCode = 1019;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// ACI Web Endpoint URL.
		/// </summary>
		[AttributeLogicalNameAttribute("aciwebendpointurl")]
		public string ACITenantURL
		{
			get
			{
				return this.GetAttributeValue<string>("aciwebendpointurl");
			}
			set
			{
				this.OnPropertyChanging("ACITenantURL");
				this.SetAttributeValue("aciwebendpointurl", value);
				this.OnPropertyChanged("ACITenantURL");
			}
		}
		
		/// <summary>
		/// Unique identifier of the template to be used for acknowledgement when a user unsubscribes.
		/// </summary>
		[AttributeLogicalNameAttribute("acknowledgementtemplateid")]
		public EntityReference AcknowledgementTemplate
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("acknowledgementtemplateid");
			}
			set
			{
				this.OnPropertyChanging("AcknowledgementTemplate");
				this.SetAttributeValue("acknowledgementtemplateid", value);
				this.OnPropertyChanged("AcknowledgementTemplate");
			}
		}
		
		/// <summary>
		/// Indicates whether background address book synchronization in Microsoft Office Outlook is allowed.
		/// </summary>
		[AttributeLogicalNameAttribute("allowaddressbooksyncs")]
		public Nullable<bool> AllowAddressBookSynchronization
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("allowaddressbooksyncs");
			}
			set
			{
				this.OnPropertyChanging("AllowAddressBookSynchronization");
				this.SetAttributeValue("allowaddressbooksyncs", value);
				this.OnPropertyChanged("AllowAddressBookSynchronization");
			}
		}
		
		/// <summary>
		/// Indicates whether automatic response creation is allowed.
		/// </summary>
		[AttributeLogicalNameAttribute("allowautoresponsecreation")]
		public Nullable<bool> AllowAutomaticResponseCreation
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("allowautoresponsecreation");
			}
			set
			{
				this.OnPropertyChanging("AllowAutomaticResponseCreation");
				this.SetAttributeValue("allowautoresponsecreation", value);
				this.OnPropertyChanged("AllowAutomaticResponseCreation");
			}
		}
		
		/// <summary>
		/// Indicates whether automatic unsubscribe is allowed.
		/// </summary>
		[AttributeLogicalNameAttribute("allowautounsubscribe")]
		public Nullable<bool> AllowAutomaticUnsubscribe
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("allowautounsubscribe");
			}
			set
			{
				this.OnPropertyChanging("AllowAutomaticUnsubscribe");
				this.SetAttributeValue("allowautounsubscribe", value);
				this.OnPropertyChanged("AllowAutomaticUnsubscribe");
			}
		}
		
		/// <summary>
		/// Indicates whether automatic unsubscribe acknowledgement email is allowed to send.
		/// </summary>
		[AttributeLogicalNameAttribute("allowautounsubscribeacknowledgement")]
		public Nullable<bool> AllowAutomaticUnsubscribeAcknowledgement
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("allowautounsubscribeacknowledgement");
			}
			set
			{
				this.OnPropertyChanging("AllowAutomaticUnsubscribeAcknowledgement");
				this.SetAttributeValue("allowautounsubscribeacknowledgement", value);
				this.OnPropertyChanged("AllowAutomaticUnsubscribeAcknowledgement");
			}
		}
		
		/// <summary>
		/// Indicates whether Outlook Client message bar advertisement is allowed.
		/// </summary>
		[AttributeLogicalNameAttribute("allowclientmessagebarad")]
		public Nullable<bool> AllowOutlookClientMessageBarAdvertisement
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("allowclientmessagebarad");
			}
			set
			{
				this.OnPropertyChanging("AllowOutlookClientMessageBarAdvertisement");
				this.SetAttributeValue("allowclientmessagebarad", value);
				this.OnPropertyChanged("AllowOutlookClientMessageBarAdvertisement");
			}
		}
		
		/// <summary>
		/// Indicates whether auditing of changes to entity is allowed when no attributes have changed.
		/// </summary>
		[AttributeLogicalNameAttribute("allowentityonlyaudit")]
		public Nullable<bool> AllowEntityLevelAuditing
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("allowentityonlyaudit");
			}
			set
			{
				this.OnPropertyChanging("AllowEntityLevelAuditing");
				this.SetAttributeValue("allowentityonlyaudit", value);
				this.OnPropertyChanged("AllowEntityLevelAuditing");
			}
		}
		
		/// <summary>
		/// Enable access to legacy web client UI
		/// </summary>
		[AttributeLogicalNameAttribute("allowlegacyclientexperience")]
		public Nullable<bool> EnableAccessToLegacyWebClientUI
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("allowlegacyclientexperience");
			}
			set
			{
				this.OnPropertyChanging("EnableAccessToLegacyWebClientUI");
				this.SetAttributeValue("allowlegacyclientexperience", value);
				this.OnPropertyChanged("EnableAccessToLegacyWebClientUI");
			}
		}
		
		/// <summary>
		/// Enable embedding of certain legacy dialogs in Unified Interface browser client
		/// </summary>
		[AttributeLogicalNameAttribute("allowlegacydialogsembedding")]
		public Nullable<bool> EnableEmbeddingOfCertainLegacyDialogsInUnifiedInterfaceBrowserClient
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("allowlegacydialogsembedding");
			}
			set
			{
				this.OnPropertyChanging("EnableEmbeddingOfCertainLegacyDialogsInUnifiedInterfaceBrowserClient");
				this.SetAttributeValue("allowlegacydialogsembedding", value);
				this.OnPropertyChanged("EnableEmbeddingOfCertainLegacyDialogsInUnifiedInterfaceBrowserClient");
			}
		}
		
		/// <summary>
		/// Indicates whether marketing emails execution is allowed.
		/// </summary>
		[AttributeLogicalNameAttribute("allowmarketingemailexecution")]
		public Nullable<bool> AllowMarketingEmailExecution
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("allowmarketingemailexecution");
			}
			set
			{
				this.OnPropertyChanging("AllowMarketingEmailExecution");
				this.SetAttributeValue("allowmarketingemailexecution", value);
				this.OnPropertyChanged("AllowMarketingEmailExecution");
			}
		}
		
		/// <summary>
		/// Indicates whether background offline synchronization in Microsoft Office Outlook is allowed.
		/// </summary>
		[AttributeLogicalNameAttribute("allowofflinescheduledsyncs")]
		public Nullable<bool> AllowOfflineScheduledSynchronization
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("allowofflinescheduledsyncs");
			}
			set
			{
				this.OnPropertyChanging("AllowOfflineScheduledSynchronization");
				this.SetAttributeValue("allowofflinescheduledsyncs", value);
				this.OnPropertyChanged("AllowOfflineScheduledSynchronization");
			}
		}
		
		/// <summary>
		/// Indicates whether scheduled synchronizations to Outlook are allowed.
		/// </summary>
		[AttributeLogicalNameAttribute("allowoutlookscheduledsyncs")]
		public Nullable<bool> AllowScheduledSynchronization
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("allowoutlookscheduledsyncs");
			}
			set
			{
				this.OnPropertyChanging("AllowScheduledSynchronization");
				this.SetAttributeValue("allowoutlookscheduledsyncs", value);
				this.OnPropertyChanged("AllowScheduledSynchronization");
			}
		}
		
		/// <summary>
		/// Indicates whether users are allowed to send email to unresolved parties (parties must still have an email address).
		/// </summary>
		[AttributeLogicalNameAttribute("allowunresolvedpartiesonemailsend")]
		public Nullable<bool> AllowUnresolvedAddressEmailSend
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("allowunresolvedpartiesonemailsend");
			}
			set
			{
				this.OnPropertyChanging("AllowUnresolvedAddressEmailSend");
				this.SetAttributeValue("allowunresolvedpartiesonemailsend", value);
				this.OnPropertyChanged("AllowUnresolvedAddressEmailSend");
			}
		}
		
		/// <summary>
		/// Indicates whether individuals can select their form mode preference in their personal options.
		/// </summary>
		[AttributeLogicalNameAttribute("allowuserformmodepreference")]
		public Nullable<bool> AllowUserFormModePreference
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("allowuserformmodepreference");
			}
			set
			{
				this.OnPropertyChanging("AllowUserFormModePreference");
				this.SetAttributeValue("allowuserformmodepreference", value);
				this.OnPropertyChanged("AllowUserFormModePreference");
			}
		}
		
		/// <summary>
		/// Indicates whether the showing tablet application notification bars in a browser is allowed.
		/// </summary>
		[AttributeLogicalNameAttribute("allowusersseeappdownloadmessage")]
		public Nullable<bool> AllowTheShowingTabletApplicationNotificationBarsInABrowser
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("allowusersseeappdownloadmessage");
			}
			set
			{
				this.OnPropertyChanging("AllowTheShowingTabletApplicationNotificationBarsInABrowser");
				this.SetAttributeValue("allowusersseeappdownloadmessage", value);
				this.OnPropertyChanged("AllowTheShowingTabletApplicationNotificationBarsInABrowser");
			}
		}
		
		/// <summary>
		/// Indicates whether Web-based export of grids to Microsoft Office Excel is allowed.
		/// </summary>
		[AttributeLogicalNameAttribute("allowwebexcelexport")]
		public Nullable<bool> AllowExportToExcel
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("allowwebexcelexport");
			}
			set
			{
				this.OnPropertyChanging("AllowExportToExcel");
				this.SetAttributeValue("allowwebexcelexport", value);
				this.OnPropertyChanged("AllowExportToExcel");
			}
		}
		
		/// <summary>
		/// AM designator to use throughout Microsoft Dynamics CRM.
		/// </summary>
		[AttributeLogicalNameAttribute("amdesignator")]
		public string AMDesignator
		{
			get
			{
				return this.GetAttributeValue<string>("amdesignator");
			}
			set
			{
				this.OnPropertyChanging("AMDesignator");
				this.SetAttributeValue("amdesignator", value);
				this.OnPropertyChanged("AMDesignator");
			}
		}
		
		/// <summary>
		/// Indicates whether the appDesignerExperience is enabled for the organization.
		/// </summary>
		[AttributeLogicalNameAttribute("appdesignerexperienceenabled")]
		public Nullable<bool> EnableAppDesignerExperienceForThisOrganization
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("appdesignerexperienceenabled");
			}
			set
			{
				this.OnPropertyChanging("EnableAppDesignerExperienceForThisOrganization");
				this.SetAttributeValue("appdesignerexperienceenabled", value);
				this.OnPropertyChanged("EnableAppDesignerExperienceForThisOrganization");
			}
		}
		
		/// <summary>
		/// Information on whether rich editing experience for Appointment is enabled.
		/// </summary>
		[AttributeLogicalNameAttribute("appointmentricheditorexperience")]
		public Nullable<bool> EnableRichEditingExperienceForAppointment
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("appointmentricheditorexperience");
			}
			set
			{
				this.OnPropertyChanging("EnableRichEditingExperienceForAppointment");
				this.SetAttributeValue("appointmentricheditorexperience", value);
				this.OnPropertyChanged("EnableRichEditingExperienceForAppointment");
			}
		}
		
		/// <summary>
		/// Select whether to auto apply the default customer entitlement on case creation.
		/// </summary>
		[AttributeLogicalNameAttribute("autoapplydefaultoncasecreate")]
		public Nullable<bool> AutoApplyDefaultEntitlementOnCaseCreate
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("autoapplydefaultoncasecreate");
			}
			set
			{
				this.OnPropertyChanging("AutoApplyDefaultEntitlementOnCaseCreate");
				this.SetAttributeValue("autoapplydefaultoncasecreate", value);
				this.OnPropertyChanged("AutoApplyDefaultEntitlementOnCaseCreate");
			}
		}
		
		/// <summary>
		/// Select whether to auto apply the default customer entitlement on case update.
		/// </summary>
		[AttributeLogicalNameAttribute("autoapplydefaultoncaseupdate")]
		public Nullable<bool> AutoApplyDefaultEntitlementOnCaseUpdate
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("autoapplydefaultoncaseupdate");
			}
			set
			{
				this.OnPropertyChanging("AutoApplyDefaultEntitlementOnCaseUpdate");
				this.SetAttributeValue("autoapplydefaultoncaseupdate", value);
				this.OnPropertyChanged("AutoApplyDefaultEntitlementOnCaseUpdate");
			}
		}
		
		/// <summary>
		/// Indicates whether to Auto-apply SLA on case record update after SLA was manually applied.
		/// </summary>
		[AttributeLogicalNameAttribute("autoapplysla")]
		public Nullable<bool> IsAutoApplySLAAfterManuallyOverRiding
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("autoapplysla");
			}
			set
			{
				this.OnPropertyChanging("IsAutoApplySLAAfterManuallyOverRiding");
				this.SetAttributeValue("autoapplysla", value);
				this.OnPropertyChanged("IsAutoApplySLAAfterManuallyOverRiding");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[AttributeLogicalNameAttribute("azureschedulerjobcollectionname")]
		public string ForInternalUseOnly
		{
			get
			{
				return this.GetAttributeValue<string>("azureschedulerjobcollectionname");
			}
			set
			{
				this.OnPropertyChanging("ForInternalUseOnly");
				this.SetAttributeValue("azureschedulerjobcollectionname", value);
				this.OnPropertyChanged("ForInternalUseOnly");
			}
		}
		
		/// <summary>
		/// Unique identifier of the base currency of the organization.
		/// </summary>
		[AttributeLogicalNameAttribute("basecurrencyid")]
		public EntityReference Currency
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("basecurrencyid");
			}
			set
			{
				this.OnPropertyChanging("Currency");
				this.SetAttributeValue("basecurrencyid", value);
				this.OnPropertyChanged("Currency");
			}
		}
		
		/// <summary>
		/// Number of decimal places that can be used for the base currency.
		/// </summary>
		[AttributeLogicalNameAttribute("basecurrencyprecision")]
		public Nullable<int> BaseCurrencyPrecision
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("basecurrencyprecision");
			}
		}
		
		/// <summary>
		/// Symbol used for the base currency.
		/// </summary>
		[AttributeLogicalNameAttribute("basecurrencysymbol")]
		public string BaseCurrencySymbol
		{
			get
			{
				return this.GetAttributeValue<string>("basecurrencysymbol");
			}
		}
		
		/// <summary>
		/// Api Key to be used in requests to Bing Maps services.
		/// </summary>
		[AttributeLogicalNameAttribute("bingmapsapikey")]
		public string BingMapsAPIKey
		{
			get
			{
				return this.GetAttributeValue<string>("bingmapsapikey");
			}
			set
			{
				this.OnPropertyChanging("BingMapsAPIKey");
				this.SetAttributeValue("bingmapsapikey", value);
				this.OnPropertyChanged("BingMapsAPIKey");
			}
		}
		
		/// <summary>
		/// Prevent upload or download of certain attachment types that are considered dangerous.
		/// </summary>
		[AttributeLogicalNameAttribute("blockedattachments")]
		public string BlockAttachments
		{
			get
			{
				return this.GetAttributeValue<string>("blockedattachments");
			}
			set
			{
				this.OnPropertyChanging("BlockAttachments");
				this.SetAttributeValue("blockedattachments", value);
				this.OnPropertyChanged("BlockAttachments");
			}
		}
		
		/// <summary>
		/// Display cards in expanded state for interactive dashboard
		/// </summary>
		[AttributeLogicalNameAttribute("bounddashboarddefaultcardexpanded")]
		public Nullable<bool> DisplayCardsInExpandedStateForInteractiveDashboard
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("bounddashboarddefaultcardexpanded");
			}
			set
			{
				this.OnPropertyChanging("DisplayCardsInExpandedStateForInteractiveDashboard");
				this.SetAttributeValue("bounddashboarddefaultcardexpanded", value);
				this.OnPropertyChanged("DisplayCardsInExpandedStateForInteractiveDashboard");
			}
		}
		
		/// <summary>
		/// Prefix used for bulk operation numbering.
		/// </summary>
		[AttributeLogicalNameAttribute("bulkoperationprefix")]
		public string BulkOperationPrefix
		{
			get
			{
				return this.GetAttributeValue<string>("bulkoperationprefix");
			}
			set
			{
				this.OnPropertyChanging("BulkOperationPrefix");
				this.SetAttributeValue("bulkoperationprefix", value);
				this.OnPropertyChanged("BulkOperationPrefix");
			}
		}
		
		/// <summary>
		/// Unique identifier of the business closure calendar of organization.
		/// </summary>
		[AttributeLogicalNameAttribute("businessclosurecalendarid")]
		public Nullable<Guid> BusinessClosureCalendar
		{
			get
			{
				return this.GetAttributeValue<Nullable<Guid>>("businessclosurecalendarid");
			}
			set
			{
				this.OnPropertyChanging("BusinessClosureCalendar");
				this.SetAttributeValue("businessclosurecalendarid", value);
				this.OnPropertyChanged("BusinessClosureCalendar");
			}
		}
		
		/// <summary>
		/// Calendar type for the system. Set to Gregorian US by default.
		/// </summary>
		[AttributeLogicalNameAttribute("calendartype")]
		public Nullable<int> CalendarType
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("calendartype");
			}
			set
			{
				this.OnPropertyChanging("CalendarType");
				this.SetAttributeValue("calendartype", value);
				this.OnPropertyChanged("CalendarType");
			}
		}
		
		/// <summary>
		/// Prefix used for campaign numbering.
		/// </summary>
		[AttributeLogicalNameAttribute("campaignprefix")]
		public string CampaignPrefix
		{
			get
			{
				return this.GetAttributeValue<string>("campaignprefix");
			}
			set
			{
				this.OnPropertyChanging("CampaignPrefix");
				this.SetAttributeValue("campaignprefix", value);
				this.OnPropertyChanged("CampaignPrefix");
			}
		}
		
		/// <summary>
		/// Flag to cascade Update on incident.
		/// </summary>
		[AttributeLogicalNameAttribute("cascadestatusupdate")]
		public Nullable<bool> CascadeStatusUpdate
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("cascadestatusupdate");
			}
			set
			{
				this.OnPropertyChanging("CascadeStatusUpdate");
				this.SetAttributeValue("cascadestatusupdate", value);
				this.OnPropertyChanged("CascadeStatusUpdate");
			}
		}
		
		/// <summary>
		/// Prefix to use for all cases throughout Microsoft Dynamics 365.
		/// </summary>
		[AttributeLogicalNameAttribute("caseprefix")]
		public string CasePrefix
		{
			get
			{
				return this.GetAttributeValue<string>("caseprefix");
			}
			set
			{
				this.OnPropertyChanging("CasePrefix");
				this.SetAttributeValue("caseprefix", value);
				this.OnPropertyChanged("CasePrefix");
			}
		}
		
		/// <summary>
		/// Type the prefix to use for all categories in Microsoft Dynamics 365.
		/// </summary>
		[AttributeLogicalNameAttribute("categoryprefix")]
		public string CategoryPrefix
		{
			get
			{
				return this.GetAttributeValue<string>("categoryprefix");
			}
			set
			{
				this.OnPropertyChanging("CategoryPrefix");
				this.SetAttributeValue("categoryprefix", value);
				this.OnPropertyChanged("CategoryPrefix");
			}
		}
		
		/// <summary>
		/// Client Features to be enabled as an XML BLOB.
		/// </summary>
		[AttributeLogicalNameAttribute("clientfeatureset")]
		public string ClientFeatureSet
		{
			get
			{
				return this.GetAttributeValue<string>("clientfeatureset");
			}
			set
			{
				this.OnPropertyChanging("ClientFeatureSet");
				this.SetAttributeValue("clientfeatureset", value);
				this.OnPropertyChanged("ClientFeatureSet");
			}
		}
		
		/// <summary>
		/// Policy configuration for CSP
		/// </summary>
		[AttributeLogicalNameAttribute("contentsecuritypolicyconfiguration")]
		public string ContentSecurityPolicyConfiguration
		{
			get
			{
				return this.GetAttributeValue<string>("contentsecuritypolicyconfiguration");
			}
			set
			{
				this.OnPropertyChanging("ContentSecurityPolicyConfiguration");
				this.SetAttributeValue("contentsecuritypolicyconfiguration", value);
				this.OnPropertyChanged("ContentSecurityPolicyConfiguration");
			}
		}
		
		/// <summary>
		/// Prefix to use for all contracts throughout Microsoft Dynamics 365.
		/// </summary>
		[AttributeLogicalNameAttribute("contractprefix")]
		public string ContractPrefix
		{
			get
			{
				return this.GetAttributeValue<string>("contractprefix");
			}
			set
			{
				this.OnPropertyChanging("ContractPrefix");
				this.SetAttributeValue("contractprefix", value);
				this.OnPropertyChanged("ContractPrefix");
			}
		}
		
		/// <summary>
		/// Indicates whether the feature CortanaProactiveExperience Flow processes should be enabled for the organization.
		/// </summary>
		[AttributeLogicalNameAttribute("cortanaproactiveexperienceenabled")]
		public Nullable<bool> EnableCortanaProactiveExperienceFlowProcessesForThisOrganization
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("cortanaproactiveexperienceenabled");
			}
			set
			{
				this.OnPropertyChanging("EnableCortanaProactiveExperienceFlowProcessesForThisOrganization");
				this.SetAttributeValue("cortanaproactiveexperienceenabled", value);
				this.OnPropertyChanged("EnableCortanaProactiveExperienceFlowProcessesForThisOrganization");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the organization.
		/// </summary>
		/// <remarks>
		/// The property is read-only and the setter has been added to assist with unit testing only.
		/// </remarks>
		[AttributeLogicalNameAttribute("createdby")]
		public EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("createdby");
			}
			set
			{
				this.OnPropertyChanging("CreatedBy");
				this.SetAttributeValue("createdby", value);
				this.OnPropertyChanged("CreatedBy");
			}
		}
		
		/// <summary>
		/// Date and time when the organization was created.
		/// </summary>
		/// <remarks>
		/// The property is read-only and the setter has been added to assist with unit testing only.
		/// </remarks>
		[AttributeLogicalNameAttribute("createdon")]
		public Nullable<DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<Nullable<DateTime>>("createdon");
			}
			set
			{
				this.OnPropertyChanging("CreatedOn");
				this.SetAttributeValue("createdon", value);
				this.OnPropertyChanged("CreatedOn");
			}
		}
		
		/// <summary>
		/// Enable Initial state of newly created products to be Active instead of Draft
		/// </summary>
		[AttributeLogicalNameAttribute("createproductswithoutparentinactivestate")]
		public Nullable<bool> EnableActiveInitialProductState
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("createproductswithoutparentinactivestate");
			}
			set
			{
				this.OnPropertyChanging("EnableActiveInitialProductState");
				this.SetAttributeValue("createproductswithoutparentinactivestate", value);
				this.OnPropertyChanged("EnableActiveInitialProductState");
			}
		}
		
		/// <summary>
		/// Number of decimal places that can be used for currency.
		/// </summary>
		[AttributeLogicalNameAttribute("currencydecimalprecision")]
		public Nullable<int> CurrencyDecimalPrecision
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("currencydecimalprecision");
			}
			set
			{
				this.OnPropertyChanging("CurrencyDecimalPrecision");
				this.SetAttributeValue("currencydecimalprecision", value);
				this.OnPropertyChanged("CurrencyDecimalPrecision");
			}
		}
		
		/// <summary>
		/// Indicates whether to display money fields with currency code or currency symbol.
		/// </summary>
		[AttributeLogicalNameAttribute("currencydisplayoption")]
		public Nullable<OrganizationDisplayCurrenciesUsing> DisplayCurrenciesUsing
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("currencydisplayoption");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (OrganizationDisplayCurrenciesUsing)(Enum.ToObject(typeof(OrganizationDisplayCurrenciesUsing), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("DisplayCurrenciesUsing");
				if (value == null)
				{
					this.SetAttributeValue("currencydisplayoption", null);
				}
				else
				{
					this.SetAttributeValue("currencydisplayoption", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("DisplayCurrenciesUsing");
			}
		}
		
		/// <summary>
		/// Information about how currency symbols are placed throughout Microsoft Dynamics CRM.
		/// </summary>
		[AttributeLogicalNameAttribute("currencyformatcode")]
		public OptionSetValue CurrencyFormatCode
		{
			get
			{
				return this.GetAttributeValue<OptionSetValue>("currencyformatcode");
			}
			set
			{
				this.OnPropertyChanging("CurrencyFormatCode");
				this.SetAttributeValue("currencyformatcode", value);
				this.OnPropertyChanged("CurrencyFormatCode");
			}
		}
		
		/// <summary>
		/// Symbol used for currency throughout Microsoft Dynamics 365.
		/// </summary>
		[AttributeLogicalNameAttribute("currencysymbol")]
		public string CurrencySymbol
		{
			get
			{
				return this.GetAttributeValue<string>("currencysymbol");
			}
			set
			{
				this.OnPropertyChanging("CurrencySymbol");
				this.SetAttributeValue("currencysymbol", value);
				this.OnPropertyChanged("CurrencySymbol");
			}
		}
		
		/// <summary>
		/// Current bulk operation number. Deprecated. Use SetAutoNumberSeed message.
		/// </summary>
		[AttributeLogicalNameAttribute("currentbulkoperationnumber")]
		[System.ObsoleteAttribute()]
		public Nullable<int> CurrentBulkOperationNumber
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("currentbulkoperationnumber");
			}
			set
			{
				this.OnPropertyChanging("CurrentBulkOperationNumber");
				this.SetAttributeValue("currentbulkoperationnumber", value);
				this.OnPropertyChanged("CurrentBulkOperationNumber");
			}
		}
		
		/// <summary>
		/// Current campaign number. Deprecated. Use SetAutoNumberSeed message.
		/// </summary>
		[AttributeLogicalNameAttribute("currentcampaignnumber")]
		[System.ObsoleteAttribute()]
		public Nullable<int> CurrentCampaignNumber
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("currentcampaignnumber");
			}
			set
			{
				this.OnPropertyChanging("CurrentCampaignNumber");
				this.SetAttributeValue("currentcampaignnumber", value);
				this.OnPropertyChanged("CurrentCampaignNumber");
			}
		}
		
		/// <summary>
		/// First case number to use. Deprecated. Use SetAutoNumberSeed message.
		/// </summary>
		[AttributeLogicalNameAttribute("currentcasenumber")]
		[System.ObsoleteAttribute()]
		public Nullable<int> CurrentCaseNumber
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("currentcasenumber");
			}
			set
			{
				this.OnPropertyChanging("CurrentCaseNumber");
				this.SetAttributeValue("currentcasenumber", value);
				this.OnPropertyChanged("CurrentCaseNumber");
			}
		}
		
		/// <summary>
		/// Enter the first number to use for Categories. Deprecated. Use SetAutoNumberSeed message.
		/// </summary>
		[AttributeLogicalNameAttribute("currentcategorynumber")]
		[System.ObsoleteAttribute()]
		public Nullable<int> CurrentCategoryNumber
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("currentcategorynumber");
			}
			set
			{
				this.OnPropertyChanging("CurrentCategoryNumber");
				this.SetAttributeValue("currentcategorynumber", value);
				this.OnPropertyChanged("CurrentCategoryNumber");
			}
		}
		
		/// <summary>
		/// First contract number to use. Deprecated. Use SetAutoNumberSeed message.
		/// </summary>
		[AttributeLogicalNameAttribute("currentcontractnumber")]
		[System.ObsoleteAttribute()]
		public Nullable<int> CurrentContractNumber
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("currentcontractnumber");
			}
			set
			{
				this.OnPropertyChanging("CurrentContractNumber");
				this.SetAttributeValue("currentcontractnumber", value);
				this.OnPropertyChanged("CurrentContractNumber");
			}
		}
		
		/// <summary>
		/// Import sequence to use.
		/// </summary>
		[AttributeLogicalNameAttribute("currentimportsequencenumber")]
		public Nullable<int> CurrentImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("currentimportsequencenumber");
			}
		}
		
		/// <summary>
		/// First invoice number to use. Deprecated. Use SetAutoNumberSeed message.
		/// </summary>
		[AttributeLogicalNameAttribute("currentinvoicenumber")]
		[System.ObsoleteAttribute()]
		public Nullable<int> CurrentInvoiceNumber
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("currentinvoicenumber");
			}
			set
			{
				this.OnPropertyChanging("CurrentInvoiceNumber");
				this.SetAttributeValue("currentinvoicenumber", value);
				this.OnPropertyChanged("CurrentInvoiceNumber");
			}
		}
		
		/// <summary>
		/// Enter the first number to use for knowledge articles. Deprecated. Use SetAutoNumberSeed message.
		/// </summary>
		[AttributeLogicalNameAttribute("currentkanumber")]
		[System.ObsoleteAttribute()]
		public Nullable<int> CurrentKnowledgeArticleNumber
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("currentkanumber");
			}
			set
			{
				this.OnPropertyChanging("CurrentKnowledgeArticleNumber");
				this.SetAttributeValue("currentkanumber", value);
				this.OnPropertyChanged("CurrentKnowledgeArticleNumber");
			}
		}
		
		/// <summary>
		/// First article number to use. Deprecated. Use SetAutoNumberSeed message.
		/// </summary>
		[AttributeLogicalNameAttribute("currentkbnumber")]
		[System.ObsoleteAttribute()]
		public Nullable<int> CurrentArticleNumber
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("currentkbnumber");
			}
			set
			{
				this.OnPropertyChanging("CurrentArticleNumber");
				this.SetAttributeValue("currentkbnumber", value);
				this.OnPropertyChanged("CurrentArticleNumber");
			}
		}
		
		/// <summary>
		/// First order number to use. Deprecated. Use SetAutoNumberSeed message.
		/// </summary>
		[AttributeLogicalNameAttribute("currentordernumber")]
		[System.ObsoleteAttribute()]
		public Nullable<int> CurrentOrderNumber
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("currentordernumber");
			}
			set
			{
				this.OnPropertyChanging("CurrentOrderNumber");
				this.SetAttributeValue("currentordernumber", value);
				this.OnPropertyChanged("CurrentOrderNumber");
			}
		}
		
		/// <summary>
		/// First parsed table number to use.
		/// </summary>
		[AttributeLogicalNameAttribute("currentparsedtablenumber")]
		public Nullable<int> CurrentParsedTableNumber
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("currentparsedtablenumber");
			}
		}
		
		/// <summary>
		/// First quote number to use. Deprecated. Use SetAutoNumberSeed message.
		/// </summary>
		[AttributeLogicalNameAttribute("currentquotenumber")]
		[System.ObsoleteAttribute()]
		public Nullable<int> CurrentQuoteNumber
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("currentquotenumber");
			}
			set
			{
				this.OnPropertyChanging("CurrentQuoteNumber");
				this.SetAttributeValue("currentquotenumber", value);
				this.OnPropertyChanged("CurrentQuoteNumber");
			}
		}
		
		/// <summary>
		/// Information about how the date is displayed throughout Microsoft CRM.
		/// </summary>
		[AttributeLogicalNameAttribute("dateformatcode")]
		public OptionSetValue DateFormatCode
		{
			get
			{
				return this.GetAttributeValue<OptionSetValue>("dateformatcode");
			}
			set
			{
				this.OnPropertyChanging("DateFormatCode");
				this.SetAttributeValue("dateformatcode", value);
				this.OnPropertyChanged("DateFormatCode");
			}
		}
		
		/// <summary>
		/// String showing how the date is displayed throughout Microsoft CRM.
		/// </summary>
		[AttributeLogicalNameAttribute("dateformatstring")]
		public string DateFormatString
		{
			get
			{
				return this.GetAttributeValue<string>("dateformatstring");
			}
			set
			{
				this.OnPropertyChanging("DateFormatString");
				this.SetAttributeValue("dateformatstring", value);
				this.OnPropertyChanged("DateFormatString");
			}
		}
		
		/// <summary>
		/// Character used to separate the month, the day, and the year in dates throughout Microsoft Dynamics 365.
		/// </summary>
		[AttributeLogicalNameAttribute("dateseparator")]
		public string DateSeparator
		{
			get
			{
				return this.GetAttributeValue<string>("dateseparator");
			}
			set
			{
				this.OnPropertyChanging("DateSeparator");
				this.SetAttributeValue("dateseparator", value);
				this.OnPropertyChanged("DateSeparator");
			}
		}
		
		/// <summary>
		/// The maximum value for the Mobile Offline setting Days since record last modified
		/// </summary>
		[AttributeLogicalNameAttribute("dayssincerecordlastmodifiedmaxvalue")]
		public Nullable<int> MaxValueOfDaysSinceRecordLastModified
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("dayssincerecordlastmodifiedmaxvalue");
			}
		}
		
		/// <summary>
		/// Symbol used for decimal in Microsoft Dynamics 365.
		/// </summary>
		[AttributeLogicalNameAttribute("decimalsymbol")]
		public string DecimalSymbol
		{
			get
			{
				return this.GetAttributeValue<string>("decimalsymbol");
			}
			set
			{
				this.OnPropertyChanging("DecimalSymbol");
				this.SetAttributeValue("decimalsymbol", value);
				this.OnPropertyChanged("DecimalSymbol");
			}
		}
		
		/// <summary>
		/// Text area to enter default country code.
		/// </summary>
		[AttributeLogicalNameAttribute("defaultcountrycode")]
		public string DefaultCountryCode
		{
			get
			{
				return this.GetAttributeValue<string>("defaultcountrycode");
			}
			set
			{
				this.OnPropertyChanging("DefaultCountryCode");
				this.SetAttributeValue("defaultcountrycode", value);
				this.OnPropertyChanged("DefaultCountryCode");
			}
		}
		
		/// <summary>
		/// Name of the default crm custom.
		/// </summary>
		[AttributeLogicalNameAttribute("defaultcrmcustomname")]
		public string NameOfTheDefaultApp
		{
			get
			{
				return this.GetAttributeValue<string>("defaultcrmcustomname");
			}
			set
			{
				this.OnPropertyChanging("NameOfTheDefaultApp");
				this.SetAttributeValue("defaultcrmcustomname", value);
				this.OnPropertyChanged("NameOfTheDefaultApp");
			}
		}
		
		/// <summary>
		/// Unique identifier of the default email server profile.
		/// </summary>
		[AttributeLogicalNameAttribute("defaultemailserverprofileid")]
		public EntityReference EmailServerProfile
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("defaultemailserverprofileid");
			}
			set
			{
				this.OnPropertyChanging("EmailServerProfile");
				this.SetAttributeValue("defaultemailserverprofileid", value);
				this.OnPropertyChanged("EmailServerProfile");
			}
		}
		
		/// <summary>
		/// XML string containing the default email settings that are applied when a user or queue is created.
		/// </summary>
		[AttributeLogicalNameAttribute("defaultemailsettings")]
		public string DefaultEmailSettings
		{
			get
			{
				return this.GetAttributeValue<string>("defaultemailsettings");
			}
			set
			{
				this.OnPropertyChanging("DefaultEmailSettings");
				this.SetAttributeValue("defaultemailsettings", value);
				this.OnPropertyChanged("DefaultEmailSettings");
			}
		}
		
		/// <summary>
		/// Unique identifier of the default mobile offline profile.
		/// </summary>
		[AttributeLogicalNameAttribute("defaultmobileofflineprofileid")]
		public EntityReference DefaultMobileOfflineProfile
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("defaultmobileofflineprofileid");
			}
			set
			{
				this.OnPropertyChanging("DefaultMobileOfflineProfile");
				this.SetAttributeValue("defaultmobileofflineprofileid", value);
				this.OnPropertyChanged("DefaultMobileOfflineProfile");
			}
		}
		
		/// <summary>
		/// Type of default recurrence end range date.
		/// </summary>
		[AttributeLogicalNameAttribute("defaultrecurrenceendrangetype")]
		public Nullable<OrganizationDefaultRecurrenceEndRangeType> DefaultRecurrenceEndRangeType
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("defaultrecurrenceendrangetype");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (OrganizationDefaultRecurrenceEndRangeType)(Enum.ToObject(typeof(OrganizationDefaultRecurrenceEndRangeType), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("DefaultRecurrenceEndRangeType");
				if (value == null)
				{
					this.SetAttributeValue("defaultrecurrenceendrangetype", null);
				}
				else
				{
					this.SetAttributeValue("defaultrecurrenceendrangetype", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("DefaultRecurrenceEndRangeType");
			}
		}
		
		/// <summary>
		/// Default theme data for the organization.
		/// </summary>
		[AttributeLogicalNameAttribute("defaultthemedata")]
		public string DefaultThemeData
		{
			get
			{
				return this.GetAttributeValue<string>("defaultthemedata");
			}
			set
			{
				this.OnPropertyChanging("DefaultThemeData");
				this.SetAttributeValue("defaultthemedata", value);
				this.OnPropertyChanged("DefaultThemeData");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegated admin user for the organization.
		/// </summary>
		[AttributeLogicalNameAttribute("delegatedadminuserid")]
		public Nullable<Guid> DelegatedAdmin
		{
			get
			{
				return this.GetAttributeValue<Nullable<Guid>>("delegatedadminuserid");
			}
			set
			{
				this.OnPropertyChanging("DelegatedAdmin");
				this.SetAttributeValue("delegatedadminuserid", value);
				this.OnPropertyChanged("DelegatedAdmin");
			}
		}
		
		/// <summary>
		/// Reason for disabling the organization.
		/// </summary>
		[AttributeLogicalNameAttribute("disabledreason")]
		public string DisabledReason
		{
			get
			{
				return this.GetAttributeValue<string>("disabledreason");
			}
		}
		
		/// <summary>
		/// Indicates whether Social Care is disabled.
		/// </summary>
		[AttributeLogicalNameAttribute("disablesocialcare")]
		public Nullable<bool> IsSocialCareDisabled
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("disablesocialcare");
			}
			set
			{
				this.OnPropertyChanging("IsSocialCareDisabled");
				this.SetAttributeValue("disablesocialcare", value);
				this.OnPropertyChanged("IsSocialCareDisabled");
			}
		}
		
		/// <summary>
		/// Discount calculation method for the QOOI product.
		/// </summary>
		[AttributeLogicalNameAttribute("discountcalculationmethod")]
		public Nullable<OrganizationDiscountCalculationMethod> DiscountCalculationMethod
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("discountcalculationmethod");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (OrganizationDiscountCalculationMethod)(Enum.ToObject(typeof(OrganizationDiscountCalculationMethod), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("DiscountCalculationMethod");
				if (value == null)
				{
					this.SetAttributeValue("discountcalculationmethod", null);
				}
				else
				{
					this.SetAttributeValue("discountcalculationmethod", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("DiscountCalculationMethod");
			}
		}
		
		/// <summary>
		/// Indicates whether or not navigation tour is displayed.
		/// </summary>
		[AttributeLogicalNameAttribute("displaynavigationtour")]
		public Nullable<bool> DisplayNavigationTour
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("displaynavigationtour");
			}
			set
			{
				this.OnPropertyChanging("DisplayNavigationTour");
				this.SetAttributeValue("displaynavigationtour", value);
				this.OnPropertyChanged("DisplayNavigationTour");
			}
		}
		
		/// <summary>
		/// Select if you want to use the Email Router or server-side synchronization for email processing.
		/// </summary>
		[AttributeLogicalNameAttribute("emailconnectionchannel")]
		public OptionSetValue EmailConnectionChannel
		{
			get
			{
				return this.GetAttributeValue<OptionSetValue>("emailconnectionchannel");
			}
			set
			{
				this.OnPropertyChanging("EmailConnectionChannel");
				this.SetAttributeValue("emailconnectionchannel", value);
				this.OnPropertyChanged("EmailConnectionChannel");
			}
		}
		
		/// <summary>
		/// Flag to turn email correlation on or off.
		/// </summary>
		[AttributeLogicalNameAttribute("emailcorrelationenabled")]
		public Nullable<bool> UseEmailCorrelation
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("emailcorrelationenabled");
			}
			set
			{
				this.OnPropertyChanging("UseEmailCorrelation");
				this.SetAttributeValue("emailcorrelationenabled", value);
				this.OnPropertyChanged("UseEmailCorrelation");
			}
		}
		
		/// <summary>
		/// Normal polling frequency used for sending email in Microsoft Office Outlook.
		/// </summary>
		[AttributeLogicalNameAttribute("emailsendpollingperiod")]
		public Nullable<int> EmailSendPollingFrequency
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("emailsendpollingperiod");
			}
			set
			{
				this.OnPropertyChanging("EmailSendPollingFrequency");
				this.SetAttributeValue("emailsendpollingperiod", value);
				this.OnPropertyChanged("EmailSendPollingFrequency");
			}
		}
		
		/// <summary>
		/// Enable Integration with Bing Maps
		/// </summary>
		[AttributeLogicalNameAttribute("enablebingmapsintegration")]
		public Nullable<bool> EnableIntegrationWithBingMaps
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("enablebingmapsintegration");
			}
			set
			{
				this.OnPropertyChanging("EnableIntegrationWithBingMaps");
				this.SetAttributeValue("enablebingmapsintegration", value);
				this.OnPropertyChanged("EnableIntegrationWithBingMaps");
			}
		}
		
		/// <summary>
		/// Enable Integration with Immersive Skype
		/// </summary>
		[AttributeLogicalNameAttribute("enableimmersiveskypeintegration")]
		public Nullable<bool> EnableIntegrationWithImmersiveSkype
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("enableimmersiveskypeintegration");
			}
			set
			{
				this.OnPropertyChanging("EnableIntegrationWithImmersiveSkype");
				this.SetAttributeValue("enableimmersiveskypeintegration", value);
				this.OnPropertyChanged("EnableIntegrationWithImmersiveSkype");
			}
		}
		
		/// <summary>
		/// Indicates whether the user has enabled or disabled Live Persona Card feature in UCI.
		/// </summary>
		[AttributeLogicalNameAttribute("enablelivepersonacarduci")]
		public Nullable<bool> IndicatesWhetherTheUserHasEnabledOrDisabledLivePersonaCardFeatureInUCI
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("enablelivepersonacarduci");
			}
			set
			{
				this.OnPropertyChanging("IndicatesWhetherTheUserHasEnabledOrDisabledLivePersonaCardFeatureInUCI");
				this.SetAttributeValue("enablelivepersonacarduci", value);
				this.OnPropertyChanged("IndicatesWhetherTheUserHasEnabledOrDisabledLivePersonaCardFeatureInUCI");
			}
		}
		
		/// <summary>
		/// Indicates whether the user has enabled or disabled LivePersonCardIntegration in Office.
		/// </summary>
		[AttributeLogicalNameAttribute("enablelivepersoncardintegrationinoffice")]
		public Nullable<bool> IndicatesWhetherTheUserHasEnabledOrDisabledLivePersonCardIntegrationInOffice
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("enablelivepersoncardintegrationinoffice");
			}
			set
			{
				this.OnPropertyChanging("IndicatesWhetherTheUserHasEnabledOrDisabledLivePersonCardIntegrationInOffice");
				this.SetAttributeValue("enablelivepersoncardintegrationinoffice", value);
				this.OnPropertyChanged("IndicatesWhetherTheUserHasEnabledOrDisabledLivePersonCardIntegrationInOffice");
			}
		}
		
		/// <summary>
		/// Select to enable learning path auhtoring.
		/// </summary>
		[AttributeLogicalNameAttribute("enablelpauthoring")]
		public Nullable<bool> EnableLearningPathAuthoring
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("enablelpauthoring");
			}
			set
			{
				this.OnPropertyChanging("EnableLearningPathAuthoring");
				this.SetAttributeValue("enablelpauthoring", value);
				this.OnPropertyChanged("EnableLearningPathAuthoring");
			}
		}
		
		/// <summary>
		/// Enable Integration with Microsoft Flow
		/// </summary>
		[AttributeLogicalNameAttribute("enablemicrosoftflowintegration")]
		public Nullable<bool> EnableIntegrationWithMicrosoftFlow
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("enablemicrosoftflowintegration");
			}
			set
			{
				this.OnPropertyChanging("EnableIntegrationWithMicrosoftFlow");
				this.SetAttributeValue("enablemicrosoftflowintegration", value);
				this.OnPropertyChanged("EnableIntegrationWithMicrosoftFlow");
			}
		}
		
		/// <summary>
		/// Enable pricing calculations on a Create call.
		/// </summary>
		[AttributeLogicalNameAttribute("enablepricingoncreate")]
		public Nullable<bool> EnablePricingOnCreate
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("enablepricingoncreate");
			}
			set
			{
				this.OnPropertyChanging("EnablePricingOnCreate");
				this.SetAttributeValue("enablepricingoncreate", value);
				this.OnPropertyChanged("EnablePricingOnCreate");
			}
		}
		
		/// <summary>
		/// Use Smart Matching.
		/// </summary>
		[AttributeLogicalNameAttribute("enablesmartmatching")]
		public Nullable<bool> EnableSmartMatching
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("enablesmartmatching");
			}
			set
			{
				this.OnPropertyChanging("EnableSmartMatching");
				this.SetAttributeValue("enablesmartmatching", value);
				this.OnPropertyChanged("EnableSmartMatching");
			}
		}
		
		/// <summary>
		/// Enable site map and commanding update
		/// </summary>
		[AttributeLogicalNameAttribute("enableunifiedinterfaceshellrefresh")]
		public Nullable<bool> EnableSiteMapAndCommandingUpdate
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("enableunifiedinterfaceshellrefresh");
			}
			set
			{
				this.OnPropertyChanging("EnableSiteMapAndCommandingUpdate");
				this.SetAttributeValue("enableunifiedinterfaceshellrefresh", value);
				this.OnPropertyChanged("EnableSiteMapAndCommandingUpdate");
			}
		}
		
		/// <summary>
		/// Organization setting to enforce read only plugins.
		/// </summary>
		[AttributeLogicalNameAttribute("enforcereadonlyplugins")]
		public Nullable<bool> OrganizationSettingToEnforceReadOnlyPlugins
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("enforcereadonlyplugins");
			}
			set
			{
				this.OnPropertyChanging("OrganizationSettingToEnforceReadOnlyPlugins");
				this.SetAttributeValue("enforcereadonlyplugins", value);
				this.OnPropertyChanged("OrganizationSettingToEnforceReadOnlyPlugins");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[AttributeLogicalNameAttribute("entityimageid")]
		public Nullable<Guid> EntityImageId
		{
			get
			{
				return this.GetAttributeValue<Nullable<Guid>>("entityimageid");
			}
		}
		
		/// <summary>
		/// Maximum number of days to keep change tracking deleted records
		/// </summary>
		[AttributeLogicalNameAttribute("expirechangetrackingindays")]
		public Nullable<int> DaysToExpireChangeTrackingDeletedRecords
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("expirechangetrackingindays");
			}
			set
			{
				this.OnPropertyChanging("DaysToExpireChangeTrackingDeletedRecords");
				this.SetAttributeValue("expirechangetrackingindays", value);
				this.OnPropertyChanged("DaysToExpireChangeTrackingDeletedRecords");
			}
		}
		
		/// <summary>
		/// Maximum number of days before deleting inactive subscriptions.
		/// </summary>
		[AttributeLogicalNameAttribute("expiresubscriptionsindays")]
		public Nullable<int> DaysToExpireSubscriptions
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("expiresubscriptionsindays");
			}
			set
			{
				this.OnPropertyChanging("DaysToExpireSubscriptions");
				this.SetAttributeValue("expiresubscriptionsindays", value);
				this.OnPropertyChanged("DaysToExpireSubscriptions");
			}
		}
		
		/// <summary>
		/// Specify the base URL to use to look for external document suggestions.
		/// </summary>
		[AttributeLogicalNameAttribute("externalbaseurl")]
		public string ExternalBaseURL
		{
			get
			{
				return this.GetAttributeValue<string>("externalbaseurl");
			}
			set
			{
				this.OnPropertyChanging("ExternalBaseURL");
				this.SetAttributeValue("externalbaseurl", value);
				this.OnPropertyChanged("ExternalBaseURL");
			}
		}
		
		/// <summary>
		/// XML string containing the ExternalPartyEnabled entities correlation keys for association of existing External Party instance entities to newly created IsExternalPartyEnabled entities.For internal use only
		/// </summary>
		[AttributeLogicalNameAttribute("externalpartycorrelationkeys")]
		public string ExternalPartyEnabledEntitiesCorrelationKeys
		{
			get
			{
				return this.GetAttributeValue<string>("externalpartycorrelationkeys");
			}
			set
			{
				this.OnPropertyChanging("ExternalPartyEnabledEntitiesCorrelationKeys");
				this.SetAttributeValue("externalpartycorrelationkeys", value);
				this.OnPropertyChanged("ExternalPartyEnabledEntitiesCorrelationKeys");
			}
		}
		
		/// <summary>
		/// XML string containing the ExternalPartyEnabled entities settings.
		/// </summary>
		[AttributeLogicalNameAttribute("externalpartyentitysettings")]
		public string ExternalPartyEnabledEntitiesSettingsForInternalUseOnly
		{
			get
			{
				return this.GetAttributeValue<string>("externalpartyentitysettings");
			}
			set
			{
				this.OnPropertyChanging("ExternalPartyEnabledEntitiesSettingsForInternalUseOnly");
				this.SetAttributeValue("externalpartyentitysettings", value);
				this.OnPropertyChanged("ExternalPartyEnabledEntitiesSettingsForInternalUseOnly");
			}
		}
		
		/// <summary>
		/// Features to be enabled as an XML BLOB.
		/// </summary>
		[AttributeLogicalNameAttribute("featureset")]
		public string FeatureSet
		{
			get
			{
				return this.GetAttributeValue<string>("featureset");
			}
			set
			{
				this.OnPropertyChanging("FeatureSet");
				this.SetAttributeValue("featureset", value);
				this.OnPropertyChanged("FeatureSet");
			}
		}
		
		/// <summary>
		/// Start date for the fiscal period that is to be used throughout Microsoft CRM.
		/// </summary>
		[AttributeLogicalNameAttribute("fiscalcalendarstart")]
		public Nullable<DateTime> FiscalCalendarStart
		{
			get
			{
				return this.GetAttributeValue<Nullable<DateTime>>("fiscalcalendarstart");
			}
			set
			{
				this.OnPropertyChanging("FiscalCalendarStart");
				this.SetAttributeValue("fiscalcalendarstart", value);
				this.OnPropertyChanged("FiscalCalendarStart");
			}
		}
		
		/// <summary>
		/// Information that specifies how the name of the fiscal period is displayed throughout Microsoft CRM.
		/// </summary>
		[AttributeLogicalNameAttribute("fiscalperiodformat")]
		public string FiscalPeriodFormat
		{
			get
			{
				return this.GetAttributeValue<string>("fiscalperiodformat");
			}
			set
			{
				this.OnPropertyChanging("FiscalPeriodFormat");
				this.SetAttributeValue("fiscalperiodformat", value);
				this.OnPropertyChanged("FiscalPeriodFormat");
			}
		}
		
		/// <summary>
		/// Format in which the fiscal period will be displayed.
		/// </summary>
		[AttributeLogicalNameAttribute("fiscalperiodformatperiod")]
		public Nullable<OrganizationFiscalPeriodFormat> FormatForFiscalPeriod
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("fiscalperiodformatperiod");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (OrganizationFiscalPeriodFormat)(Enum.ToObject(typeof(OrganizationFiscalPeriodFormat), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("FormatForFiscalPeriod");
				if (value == null)
				{
					this.SetAttributeValue("fiscalperiodformatperiod", null);
				}
				else
				{
					this.SetAttributeValue("fiscalperiodformatperiod", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("FormatForFiscalPeriod");
			}
		}
		
		/// <summary>
		/// Type of fiscal period used throughout Microsoft CRM.
		/// </summary>
		[AttributeLogicalNameAttribute("fiscalperiodtype")]
		public Nullable<int> FiscalPeriodType
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("fiscalperiodtype");
			}
			set
			{
				this.OnPropertyChanging("FiscalPeriodType");
				this.SetAttributeValue("fiscalperiodtype", value);
				this.OnPropertyChanged("FiscalPeriodType");
			}
		}
		
		/// <summary>
		/// Information that specifies whether the fiscal settings have been updated.
		/// </summary>
		[AttributeLogicalNameAttribute("fiscalsettingsupdated")]
		[System.ObsoleteAttribute()]
		public Nullable<bool> IsFiscalSettingsUpdated
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("fiscalsettingsupdated");
			}
		}
		
		/// <summary>
		/// Information that specifies whether the fiscal year should be displayed based on the start date or the end date of the fiscal year.
		/// </summary>
		[AttributeLogicalNameAttribute("fiscalyeardisplaycode")]
		public Nullable<int> FiscalYearDisplay
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("fiscalyeardisplaycode");
			}
			set
			{
				this.OnPropertyChanging("FiscalYearDisplay");
				this.SetAttributeValue("fiscalyeardisplaycode", value);
				this.OnPropertyChanged("FiscalYearDisplay");
			}
		}
		
		/// <summary>
		/// Information that specifies how the name of the fiscal year is displayed throughout Microsoft CRM.
		/// </summary>
		[AttributeLogicalNameAttribute("fiscalyearformat")]
		public string FiscalYearFormat
		{
			get
			{
				return this.GetAttributeValue<string>("fiscalyearformat");
			}
			set
			{
				this.OnPropertyChanging("FiscalYearFormat");
				this.SetAttributeValue("fiscalyearformat", value);
				this.OnPropertyChanged("FiscalYearFormat");
			}
		}
		
		/// <summary>
		/// Prefix for the display of the fiscal year.
		/// </summary>
		[AttributeLogicalNameAttribute("fiscalyearformatprefix")]
		public Nullable<OrganizationFiscalYearFormatPrefix> PrefixForFiscalYear
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("fiscalyearformatprefix");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (OrganizationFiscalYearFormatPrefix)(Enum.ToObject(typeof(OrganizationFiscalYearFormatPrefix), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("PrefixForFiscalYear");
				if (value == null)
				{
					this.SetAttributeValue("fiscalyearformatprefix", null);
				}
				else
				{
					this.SetAttributeValue("fiscalyearformatprefix", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("PrefixForFiscalYear");
			}
		}
		
		/// <summary>
		/// Suffix for the display of the fiscal year.
		/// </summary>
		[AttributeLogicalNameAttribute("fiscalyearformatsuffix")]
		public Nullable<OrganizationFiscalYearFormatSuffix> SuffixForFiscalYear
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("fiscalyearformatsuffix");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (OrganizationFiscalYearFormatSuffix)(Enum.ToObject(typeof(OrganizationFiscalYearFormatSuffix), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("SuffixForFiscalYear");
				if (value == null)
				{
					this.SetAttributeValue("fiscalyearformatsuffix", null);
				}
				else
				{
					this.SetAttributeValue("fiscalyearformatsuffix", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("SuffixForFiscalYear");
			}
		}
		
		/// <summary>
		/// Format for the year.
		/// </summary>
		[AttributeLogicalNameAttribute("fiscalyearformatyear")]
		public Nullable<OrganizationFiscalYearFormat> FiscalYearFormatYear
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("fiscalyearformatyear");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (OrganizationFiscalYearFormat)(Enum.ToObject(typeof(OrganizationFiscalYearFormat), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("FiscalYearFormatYear");
				if (value == null)
				{
					this.SetAttributeValue("fiscalyearformatyear", null);
				}
				else
				{
					this.SetAttributeValue("fiscalyearformatyear", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("FiscalYearFormatYear");
			}
		}
		
		/// <summary>
		/// Information that specifies how the names of the fiscal year and the fiscal period should be connected when displayed together.
		/// </summary>
		[AttributeLogicalNameAttribute("fiscalyearperiodconnect")]
		public string FiscalYearPeriodConnector
		{
			get
			{
				return this.GetAttributeValue<string>("fiscalyearperiodconnect");
			}
			set
			{
				this.OnPropertyChanging("FiscalYearPeriodConnector");
				this.SetAttributeValue("fiscalyearperiodconnect", value);
				this.OnPropertyChanged("FiscalYearPeriodConnector");
			}
		}
		
		/// <summary>
		/// Order in which names are to be displayed throughout Microsoft CRM.
		/// </summary>
		[AttributeLogicalNameAttribute("fullnameconventioncode")]
		public OptionSetValue FullNameDisplayOrder
		{
			get
			{
				return this.GetAttributeValue<OptionSetValue>("fullnameconventioncode");
			}
			set
			{
				this.OnPropertyChanging("FullNameDisplayOrder");
				this.SetAttributeValue("fullnameconventioncode", value);
				this.OnPropertyChanged("FullNameDisplayOrder");
			}
		}
		
		/// <summary>
		/// Specifies the maximum number of months in future for which the recurring activities can be created.
		/// </summary>
		[AttributeLogicalNameAttribute("futureexpansionwindow")]
		public Nullable<int> FutureExpansionWindow
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("futureexpansionwindow");
			}
			set
			{
				this.OnPropertyChanging("FutureExpansionWindow");
				this.SetAttributeValue("futureexpansionwindow", value);
				this.OnPropertyChanged("FutureExpansionWindow");
			}
		}
		
		/// <summary>
		/// Indicates whether alerts will be generated for errors.
		/// </summary>
		[AttributeLogicalNameAttribute("generatealertsforerrors")]
		public Nullable<bool> GenerateAlertsForErrors
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("generatealertsforerrors");
			}
			set
			{
				this.OnPropertyChanging("GenerateAlertsForErrors");
				this.SetAttributeValue("generatealertsforerrors", value);
				this.OnPropertyChanged("GenerateAlertsForErrors");
			}
		}
		
		/// <summary>
		/// Indicates whether alerts will be generated for information.
		/// </summary>
		[AttributeLogicalNameAttribute("generatealertsforinformation")]
		public Nullable<bool> GenerateAlertsForInformation
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("generatealertsforinformation");
			}
			set
			{
				this.OnPropertyChanging("GenerateAlertsForInformation");
				this.SetAttributeValue("generatealertsforinformation", value);
				this.OnPropertyChanged("GenerateAlertsForInformation");
			}
		}
		
		/// <summary>
		/// Indicates whether alerts will be generated for warnings.
		/// </summary>
		[AttributeLogicalNameAttribute("generatealertsforwarnings")]
		public Nullable<bool> GenerateAlertsForWarnings
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("generatealertsforwarnings");
			}
			set
			{
				this.OnPropertyChanging("GenerateAlertsForWarnings");
				this.SetAttributeValue("generatealertsforwarnings", value);
				this.OnPropertyChanged("GenerateAlertsForWarnings");
			}
		}
		
		/// <summary>
		/// Indicates whether Get Started content is enabled for this organization.
		/// </summary>
		[AttributeLogicalNameAttribute("getstartedpanecontentenabled")]
		public Nullable<bool> IsGetStartedPaneContentEnabled
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("getstartedpanecontentenabled");
			}
			set
			{
				this.OnPropertyChanging("IsGetStartedPaneContentEnabled");
				this.SetAttributeValue("getstartedpanecontentenabled", value);
				this.OnPropertyChanged("IsGetStartedPaneContentEnabled");
			}
		}
		
		/// <summary>
		/// Indicates whether the append URL parameters is enabled.
		/// </summary>
		[AttributeLogicalNameAttribute("globalappendurlparametersenabled")]
		public Nullable<bool> IsAppendUrlParametersEnabled
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("globalappendurlparametersenabled");
			}
			set
			{
				this.OnPropertyChanging("IsAppendUrlParametersEnabled");
				this.SetAttributeValue("globalappendurlparametersenabled", value);
				this.OnPropertyChanged("IsAppendUrlParametersEnabled");
			}
		}
		
		/// <summary>
		/// URL for the web page global help.
		/// </summary>
		[AttributeLogicalNameAttribute("globalhelpurl")]
		public string GlobalHelpURL
		{
			get
			{
				return this.GetAttributeValue<string>("globalhelpurl");
			}
			set
			{
				this.OnPropertyChanging("GlobalHelpURL");
				this.SetAttributeValue("globalhelpurl", value);
				this.OnPropertyChanged("GlobalHelpURL");
			}
		}
		
		/// <summary>
		/// Indicates whether the customizable global help is enabled.
		/// </summary>
		[AttributeLogicalNameAttribute("globalhelpurlenabled")]
		public Nullable<bool> IsCustomizableGlobalHelpEnabled
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("globalhelpurlenabled");
			}
			set
			{
				this.OnPropertyChanging("IsCustomizableGlobalHelpEnabled");
				this.SetAttributeValue("globalhelpurlenabled", value);
				this.OnPropertyChanged("IsCustomizableGlobalHelpEnabled");
			}
		}
		
		/// <summary>
		/// Number of days after the goal's end date after which the rollup of the goal stops automatically.
		/// </summary>
		[AttributeLogicalNameAttribute("goalrollupexpirytime")]
		public Nullable<int> RollupExpirationTimeForGoal
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("goalrollupexpirytime");
			}
			set
			{
				this.OnPropertyChanging("RollupExpirationTimeForGoal");
				this.SetAttributeValue("goalrollupexpirytime", value);
				this.OnPropertyChanged("RollupExpirationTimeForGoal");
			}
		}
		
		/// <summary>
		/// Number of hours between automatic rollup jobs .
		/// </summary>
		[AttributeLogicalNameAttribute("goalrollupfrequency")]
		public Nullable<int> AutomaticRollupFrequencyForGoal
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("goalrollupfrequency");
			}
			set
			{
				this.OnPropertyChanging("AutomaticRollupFrequencyForGoal");
				this.SetAttributeValue("goalrollupfrequency", value);
				this.OnPropertyChanged("AutomaticRollupFrequencyForGoal");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[AttributeLogicalNameAttribute("grantaccesstonetworkservice")]
		public Nullable<bool> GrantAccessToNetworkService
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("grantaccesstonetworkservice");
			}
			set
			{
				this.OnPropertyChanging("GrantAccessToNetworkService");
				this.SetAttributeValue("grantaccesstonetworkservice", value);
				this.OnPropertyChanged("GrantAccessToNetworkService");
			}
		}
		
		/// <summary>
		/// Maximum difference allowed between subject keywords count of the email messaged to be correlated
		/// </summary>
		[AttributeLogicalNameAttribute("hashdeltasubjectcount")]
		public Nullable<int> HashDeltaSubjectCount
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("hashdeltasubjectcount");
			}
			set
			{
				this.OnPropertyChanging("HashDeltaSubjectCount");
				this.SetAttributeValue("hashdeltasubjectcount", value);
				this.OnPropertyChanged("HashDeltaSubjectCount");
			}
		}
		
		/// <summary>
		/// Filter Subject Keywords
		/// </summary>
		[AttributeLogicalNameAttribute("hashfilterkeywords")]
		public string HashFilterKeywords
		{
			get
			{
				return this.GetAttributeValue<string>("hashfilterkeywords");
			}
			set
			{
				this.OnPropertyChanging("HashFilterKeywords");
				this.SetAttributeValue("hashfilterkeywords", value);
				this.OnPropertyChanged("HashFilterKeywords");
			}
		}
		
		/// <summary>
		/// Maximum number of subject keywords or recipients used for correlation
		/// </summary>
		[AttributeLogicalNameAttribute("hashmaxcount")]
		public Nullable<int> HashMaxCount
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("hashmaxcount");
			}
			set
			{
				this.OnPropertyChanging("HashMaxCount");
				this.SetAttributeValue("hashmaxcount", value);
				this.OnPropertyChanged("HashMaxCount");
			}
		}
		
		/// <summary>
		/// Minimum number of recipients required to match for email messaged to be correlated
		/// </summary>
		[AttributeLogicalNameAttribute("hashminaddresscount")]
		public Nullable<int> HashMinAddressCount
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("hashminaddresscount");
			}
			set
			{
				this.OnPropertyChanging("HashMinAddressCount");
				this.SetAttributeValue("hashminaddresscount", value);
				this.OnPropertyChanged("HashMinAddressCount");
			}
		}
		
		/// <summary>
		/// High contrast theme data for the organization.
		/// </summary>
		[AttributeLogicalNameAttribute("highcontrastthemedata")]
		public string HighContrastThemeData
		{
			get
			{
				return this.GetAttributeValue<string>("highcontrastthemedata");
			}
			set
			{
				this.OnPropertyChanging("HighContrastThemeData");
				this.SetAttributeValue("highcontrastthemedata", value);
				this.OnPropertyChanged("HighContrastThemeData");
			}
		}
		
		/// <summary>
		/// Indicates whether incoming email sent by internal Microsoft Dynamics 365 users or queues should be tracked.
		/// </summary>
		[AttributeLogicalNameAttribute("ignoreinternalemail")]
		public Nullable<bool> IgnoreInternalEmail
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("ignoreinternalemail");
			}
			set
			{
				this.OnPropertyChanging("IgnoreInternalEmail");
				this.SetAttributeValue("ignoreinternalemail", value);
				this.OnPropertyChanged("IgnoreInternalEmail");
			}
		}
		
		/// <summary>
		/// Information that specifies whether Inactivity timeout is enabled
		/// </summary>
		[AttributeLogicalNameAttribute("inactivitytimeoutenabled")]
		public Nullable<bool> InactivityTimeoutEnabled
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("inactivitytimeoutenabled");
			}
			set
			{
				this.OnPropertyChanging("InactivityTimeoutEnabled");
				this.SetAttributeValue("inactivitytimeoutenabled", value);
				this.OnPropertyChanged("InactivityTimeoutEnabled");
			}
		}
		
		/// <summary>
		/// Inactivity timeout in minutes
		/// </summary>
		[AttributeLogicalNameAttribute("inactivitytimeoutinmins")]
		public Nullable<int> InactivityTimeoutInMinutes
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("inactivitytimeoutinmins");
			}
			set
			{
				this.OnPropertyChanging("InactivityTimeoutInMinutes");
				this.SetAttributeValue("inactivitytimeoutinmins", value);
				this.OnPropertyChanged("InactivityTimeoutInMinutes");
			}
		}
		
		/// <summary>
		/// Inactivity timeout reminder in minutes
		/// </summary>
		[AttributeLogicalNameAttribute("inactivitytimeoutreminderinmins")]
		public Nullable<int> InactivityTimeoutReminderInMinutes
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("inactivitytimeoutreminderinmins");
			}
			set
			{
				this.OnPropertyChanging("InactivityTimeoutReminderInMinutes");
				this.SetAttributeValue("inactivitytimeoutreminderinmins", value);
				this.OnPropertyChanged("InactivityTimeoutReminderInMinutes");
			}
		}
		
		/// <summary>
		/// Setting for the Async Service Mailbox Queue. Defines the retrieval batch size of exchange server.
		/// </summary>
		[AttributeLogicalNameAttribute("incomingemailexchangeemailretrievalbatchsize")]
		public Nullable<int> ExchangeEmailRetrievalBatchSize
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("incomingemailexchangeemailretrievalbatchsize");
			}
			set
			{
				this.OnPropertyChanging("ExchangeEmailRetrievalBatchSize");
				this.SetAttributeValue("incomingemailexchangeemailretrievalbatchsize", value);
				this.OnPropertyChanged("ExchangeEmailRetrievalBatchSize");
			}
		}
		
		/// <summary>
		/// Initial version of the organization.
		/// </summary>
		[AttributeLogicalNameAttribute("initialversion")]
		public string InitialVersion
		{
			get
			{
				return this.GetAttributeValue<string>("initialversion");
			}
			set
			{
				this.OnPropertyChanging("InitialVersion");
				this.SetAttributeValue("initialversion", value);
				this.OnPropertyChanged("InitialVersion");
			}
		}
		
		/// <summary>
		/// Unique identifier of the integration user for the organization.
		/// </summary>
		[AttributeLogicalNameAttribute("integrationuserid")]
		public Nullable<Guid> IntegrationUser
		{
			get
			{
				return this.GetAttributeValue<Nullable<Guid>>("integrationuserid");
			}
			set
			{
				this.OnPropertyChanging("IntegrationUser");
				this.SetAttributeValue("integrationuserid", value);
				this.OnPropertyChanged("IntegrationUser");
			}
		}
		
		/// <summary>
		/// Prefix to use for all invoice numbers throughout Microsoft Dynamics 365.
		/// </summary>
		[AttributeLogicalNameAttribute("invoiceprefix")]
		public string InvoicePrefix
		{
			get
			{
				return this.GetAttributeValue<string>("invoiceprefix");
			}
			set
			{
				this.OnPropertyChanging("InvoicePrefix");
				this.SetAttributeValue("invoiceprefix", value);
				this.OnPropertyChanged("InvoicePrefix");
			}
		}
		
		/// <summary>
		/// Indicates whether the feature Action Card should be enabled for the organization.
		/// </summary>
		[AttributeLogicalNameAttribute("isactioncardenabled")]
		public Nullable<bool> EnableActionCardForThisOrganization
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("isactioncardenabled");
			}
			set
			{
				this.OnPropertyChanging("EnableActionCardForThisOrganization");
				this.SetAttributeValue("isactioncardenabled", value);
				this.OnPropertyChanged("EnableActionCardForThisOrganization");
			}
		}
		
		/// <summary>
		/// Information that specifies whether Action Support Feature is enabled
		/// </summary>
		[AttributeLogicalNameAttribute("isactionsupportfeatureenabled")]
		public Nullable<bool> ActionSupportFeatureEnabled
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("isactionsupportfeatureenabled");
			}
			set
			{
				this.OnPropertyChanging("ActionSupportFeatureEnabled");
				this.SetAttributeValue("isactionsupportfeatureenabled", value);
				this.OnPropertyChanged("ActionSupportFeatureEnabled");
			}
		}
		
		/// <summary>
		/// Indicates whether the feature Relationship Analytics should be enabled for the organization.
		/// </summary>
		[AttributeLogicalNameAttribute("isactivityanalysisenabled")]
		public Nullable<bool> EnableRelationshipAnalyticsForThisOrganization
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("isactivityanalysisenabled");
			}
			set
			{
				this.OnPropertyChanging("EnableRelationshipAnalyticsForThisOrganization");
				this.SetAttributeValue("isactivityanalysisenabled", value);
				this.OnPropertyChanged("EnableRelationshipAnalyticsForThisOrganization");
			}
		}
		
		/// <summary>
		/// Indicates whether loading of Microsoft Dynamics 365 in a browser window that does not have address, tool, and menu bars is enabled.
		/// </summary>
		[AttributeLogicalNameAttribute("isappmode")]
		public Nullable<bool> IsApplicationModeEnabled
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("isappmode");
			}
			set
			{
				this.OnPropertyChanging("IsApplicationModeEnabled");
				this.SetAttributeValue("isappmode", value);
				this.OnPropertyChanged("IsApplicationModeEnabled");
			}
		}
		
		/// <summary>
		/// Enable or disable attachments sync for outlook and exchange.
		/// </summary>
		[AttributeLogicalNameAttribute("isappointmentattachmentsyncenabled")]
		public Nullable<bool> IsAttachmentSyncEnabled
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("isappointmentattachmentsyncenabled");
			}
			set
			{
				this.OnPropertyChanging("IsAttachmentSyncEnabled");
				this.SetAttributeValue("isappointmentattachmentsyncenabled", value);
				this.OnPropertyChanged("IsAttachmentSyncEnabled");
			}
		}
		
		/// <summary>
		/// Enable or disable assigned tasks sync for outlook and exchange.
		/// </summary>
		[AttributeLogicalNameAttribute("isassignedtaskssyncenabled")]
		public Nullable<bool> IsAssignedTasksSyncEnabled
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("isassignedtaskssyncenabled");
			}
			set
			{
				this.OnPropertyChanging("IsAssignedTasksSyncEnabled");
				this.SetAttributeValue("isassignedtaskssyncenabled", value);
				this.OnPropertyChanged("IsAssignedTasksSyncEnabled");
			}
		}
		
		/// <summary>
		/// Enable or disable auditing of changes.
		/// </summary>
		[AttributeLogicalNameAttribute("isauditenabled")]
		public Nullable<bool> IsAuditingEnabled
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("isauditenabled");
			}
			set
			{
				this.OnPropertyChanging("IsAuditingEnabled");
				this.SetAttributeValue("isauditenabled", value);
				this.OnPropertyChanged("IsAuditingEnabled");
			}
		}
		
		/// <summary>
		/// Indicates whether the feature Auto Capture should be enabled for the organization.
		/// </summary>
		[AttributeLogicalNameAttribute("isautodatacaptureenabled")]
		public Nullable<bool> EnableAutoCaptureForThisOrganization
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("isautodatacaptureenabled");
			}
			set
			{
				this.OnPropertyChanging("EnableAutoCaptureForThisOrganization");
				this.SetAttributeValue("isautodatacaptureenabled", value);
				this.OnPropertyChanged("EnableAutoCaptureForThisOrganization");
			}
		}
		
		/// <summary>
		/// Information on whether auto save is enabled.
		/// </summary>
		[AttributeLogicalNameAttribute("isautosaveenabled")]
		public Nullable<bool> AutoSaveEnabled
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("isautosaveenabled");
			}
			set
			{
				this.OnPropertyChanging("AutoSaveEnabled");
				this.SetAttributeValue("isautosaveenabled", value);
				this.OnPropertyChanged("AutoSaveEnabled");
			}
		}
		
		/// <summary>
		/// Information that specifies whether BPF Entity Customization Feature is enabled
		/// </summary>
		[AttributeLogicalNameAttribute("isbpfentitycustomizationfeatureenabled")]
		public Nullable<bool> BPFEntityCustomizationFeatureEnabled
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("isbpfentitycustomizationfeatureenabled");
			}
			set
			{
				this.OnPropertyChanging("BPFEntityCustomizationFeatureEnabled");
				this.SetAttributeValue("isbpfentitycustomizationfeatureenabled", value);
				this.OnPropertyChanged("BPFEntityCustomizationFeatureEnabled");
			}
		}
		
		/// <summary>
		/// Information that specifies whether conflict detection for mobile client is enabled.
		/// </summary>
		[AttributeLogicalNameAttribute("isconflictdetectionenabledformobileclient")]
		public Nullable<bool> IsConflictDetectionForMobileClientEnabled
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("isconflictdetectionenabledformobileclient");
			}
			set
			{
				this.OnPropertyChanging("IsConflictDetectionForMobileClientEnabled");
				this.SetAttributeValue("isconflictdetectionenabledformobileclient", value);
				this.OnPropertyChanged("IsConflictDetectionForMobileClientEnabled");
			}
		}
		
		/// <summary>
		/// Enable or disable mailing address sync for outlook and exchange.
		/// </summary>
		[AttributeLogicalNameAttribute("iscontactmailingaddresssyncenabled")]
		public Nullable<bool> IsMailingAddressSyncEnabled
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("iscontactmailingaddresssyncenabled");
			}
			set
			{
				this.OnPropertyChanging("IsMailingAddressSyncEnabled");
				this.SetAttributeValue("iscontactmailingaddresssyncenabled", value);
				this.OnPropertyChanged("IsMailingAddressSyncEnabled");
			}
		}
		
		/// <summary>
		/// Indicates whether Content Security Policy has been enabled for the organization.
		/// </summary>
		[AttributeLogicalNameAttribute("iscontentsecuritypolicyenabled")]
		public Nullable<bool> EnableContentSecurityPolicyForThisOrganization
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("iscontentsecuritypolicyenabled");
			}
			set
			{
				this.OnPropertyChanging("EnableContentSecurityPolicyForThisOrganization");
				this.SetAttributeValue("iscontentsecuritypolicyenabled", value);
				this.OnPropertyChanged("EnableContentSecurityPolicyForThisOrganization");
			}
		}
		
		/// <summary>
		/// Indicates whether Contextual email experience is enabled on this organization
		/// </summary>
		[AttributeLogicalNameAttribute("iscontextualemailenabled")]
		public Nullable<bool> IndicatesWhetherContextualEmailExperienceIsEnabledOnThisOrganization
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("iscontextualemailenabled");
			}
			set
			{
				this.OnPropertyChanging("IndicatesWhetherContextualEmailExperienceIsEnabledOnThisOrganization");
				this.SetAttributeValue("iscontextualemailenabled", value);
				this.OnPropertyChanged("IndicatesWhetherContextualEmailExperienceIsEnabledOnThisOrganization");
			}
		}
		
		/// <summary>
		/// Indicates whether Custom Controls in canvas PowerApps feature has been enabled for the organization.
		/// </summary>
		[AttributeLogicalNameAttribute("iscustomcontrolsincanvasappsenabled")]
		public Nullable<bool> EnableCustomControlsInCanvasPowerAppsFeatureForThisOrganization
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("iscustomcontrolsincanvasappsenabled");
			}
			set
			{
				this.OnPropertyChanging("EnableCustomControlsInCanvasPowerAppsFeatureForThisOrganization");
				this.SetAttributeValue("iscustomcontrolsincanvasappsenabled", value);
				this.OnPropertyChanged("EnableCustomControlsInCanvasPowerAppsFeatureForThisOrganization");
			}
		}
		
		/// <summary>
		/// Enable or disable country code selection.
		/// </summary>
		[AttributeLogicalNameAttribute("isdefaultcountrycodecheckenabled")]
		public Nullable<bool> EnableOrDisableCountryCodeSelection
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("isdefaultcountrycodecheckenabled");
			}
			set
			{
				this.OnPropertyChanging("EnableOrDisableCountryCodeSelection");
				this.SetAttributeValue("isdefaultcountrycodecheckenabled", value);
				this.OnPropertyChanged("EnableOrDisableCountryCodeSelection");
			}
		}
		
		/// <summary>
		/// Enable Delegation Access content
		/// </summary>
		[AttributeLogicalNameAttribute("isdelegateaccessenabled")]
		public Nullable<bool> IsDelegationAccessEnabled
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("isdelegateaccessenabled");
			}
			set
			{
				this.OnPropertyChanging("IsDelegationAccessEnabled");
				this.SetAttributeValue("isdelegateaccessenabled", value);
				this.OnPropertyChanged("IsDelegationAccessEnabled");
			}
		}
		
		/// <summary>
		/// Indicates whether the feature Action Hub should be enabled for the organization.
		/// </summary>
		[AttributeLogicalNameAttribute("isdelveactionhubintegrationenabled")]
		public Nullable<bool> EnableActionHubForThisOrganization
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("isdelveactionhubintegrationenabled");
			}
			set
			{
				this.OnPropertyChanging("EnableActionHubForThisOrganization");
				this.SetAttributeValue("isdelveactionhubintegrationenabled", value);
				this.OnPropertyChanged("EnableActionHubForThisOrganization");
			}
		}
		
		/// <summary>
		/// Information that specifies whether the organization is disabled.
		/// </summary>
		[AttributeLogicalNameAttribute("isdisabled")]
		public Nullable<bool> IsOrganizationDisabled
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("isdisabled");
			}
		}
		
		/// <summary>
		/// Indicates whether duplicate detection of records is enabled.
		/// </summary>
		[AttributeLogicalNameAttribute("isduplicatedetectionenabled")]
		public Nullable<bool> IsDuplicateDetectionEnabled
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("isduplicatedetectionenabled");
			}
			set
			{
				this.OnPropertyChanging("IsDuplicateDetectionEnabled");
				this.SetAttributeValue("isduplicatedetectionenabled", value);
				this.OnPropertyChanged("IsDuplicateDetectionEnabled");
			}
		}
		
		/// <summary>
		/// Indicates whether duplicate detection of records during import is enabled.
		/// </summary>
		[AttributeLogicalNameAttribute("isduplicatedetectionenabledforimport")]
		public Nullable<bool> IsDuplicateDetectionEnabledForImport
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("isduplicatedetectionenabledforimport");
			}
			set
			{
				this.OnPropertyChanging("IsDuplicateDetectionEnabledForImport");
				this.SetAttributeValue("isduplicatedetectionenabledforimport", value);
				this.OnPropertyChanged("IsDuplicateDetectionEnabledForImport");
			}
		}
		
		/// <summary>
		/// Indicates whether duplicate detection of records during offline synchronization is enabled.
		/// </summary>
		[AttributeLogicalNameAttribute("isduplicatedetectionenabledforofflinesync")]
		public Nullable<bool> IsDuplicateDetectionEnabledForOfflineSynchronization
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("isduplicatedetectionenabledforofflinesync");
			}
			set
			{
				this.OnPropertyChanging("IsDuplicateDetectionEnabledForOfflineSynchronization");
				this.SetAttributeValue("isduplicatedetectionenabledforofflinesync", value);
				this.OnPropertyChanged("IsDuplicateDetectionEnabledForOfflineSynchronization");
			}
		}
		
		/// <summary>
		/// Indicates whether duplicate detection during online create or update is enabled.
		/// </summary>
		[AttributeLogicalNameAttribute("isduplicatedetectionenabledforonlinecreateupdate")]
		public Nullable<bool> IsDuplicateDetectionEnabledForOnlineCreateUpdate
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("isduplicatedetectionenabledforonlinecreateupdate");
			}
			set
			{
				this.OnPropertyChanging("IsDuplicateDetectionEnabledForOnlineCreateUpdate");
				this.SetAttributeValue("isduplicatedetectionenabledforonlinecreateupdate", value);
				this.OnPropertyChanged("IsDuplicateDetectionEnabledForOnlineCreateUpdate");
			}
		}
		
		/// <summary>
		/// Allow tracking recipient activity on sent emails.
		/// </summary>
		[AttributeLogicalNameAttribute("isemailmonitoringallowed")]
		public Nullable<bool> AllowTrackingRecipientActivityOnSentEmails
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("isemailmonitoringallowed");
			}
			set
			{
				this.OnPropertyChanging("AllowTrackingRecipientActivityOnSentEmails");
				this.SetAttributeValue("isemailmonitoringallowed", value);
				this.OnPropertyChanged("AllowTrackingRecipientActivityOnSentEmails");
			}
		}
		
		/// <summary>
		/// Enable Email Server Profile content filtering
		/// </summary>
		[AttributeLogicalNameAttribute("isemailserverprofilecontentfilteringenabled")]
		public Nullable<bool> IsEmailServerProfileContentFilteringEnabled
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("isemailserverprofilecontentfilteringenabled");
			}
			set
			{
				this.OnPropertyChanging("IsEmailServerProfileContentFilteringEnabled");
				this.SetAttributeValue("isemailserverprofilecontentfilteringenabled", value);
				this.OnPropertyChanged("IsEmailServerProfileContentFilteringEnabled");
			}
		}
		
		/// <summary>
		/// Indicates whether appmodule is enabled for all roles
		/// </summary>
		[AttributeLogicalNameAttribute("isenabledforallroles")]
		public Nullable<bool> OptionSetValuesForIsenabledforallroles
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("isenabledforallroles");
			}
			set
			{
				this.OnPropertyChanging("OptionSetValuesForIsenabledforallroles");
				this.SetAttributeValue("isenabledforallroles", value);
				this.OnPropertyChanged("OptionSetValuesForIsenabledforallroles");
			}
		}
		
		/// <summary>
		/// Indicates whether the organization's files are being stored in Azure.
		/// </summary>
		[AttributeLogicalNameAttribute("isexternalfilestorageenabled")]
		public Nullable<bool> EnableExternalFileStorage
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("isexternalfilestorageenabled");
			}
			set
			{
				this.OnPropertyChanging("EnableExternalFileStorage");
				this.SetAttributeValue("isexternalfilestorageenabled", value);
				this.OnPropertyChanged("EnableExternalFileStorage");
			}
		}
		
		/// <summary>
		/// Select whether data can be synchronized with an external search index.
		/// </summary>
		[AttributeLogicalNameAttribute("isexternalsearchindexenabled")]
		public Nullable<bool> EnableExternalSearchDataSyncing
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("isexternalsearchindexenabled");
			}
			set
			{
				this.OnPropertyChanging("EnableExternalSearchDataSyncing");
				this.SetAttributeValue("isexternalsearchindexenabled", value);
				this.OnPropertyChanged("EnableExternalSearchDataSyncing");
			}
		}
		
		/// <summary>
		/// Indicates whether the fiscal period is displayed as the month number.
		/// </summary>
		[AttributeLogicalNameAttribute("isfiscalperiodmonthbased")]
		public Nullable<bool> IsFiscalPeriodMonthly
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("isfiscalperiodmonthbased");
			}
			set
			{
				this.OnPropertyChanging("IsFiscalPeriodMonthly");
				this.SetAttributeValue("isfiscalperiodmonthbased", value);
				this.OnPropertyChanged("IsFiscalPeriodMonthly");
			}
		}
		
		/// <summary>
		/// Select whether folders should be automatically created on SharePoint.
		/// </summary>
		[AttributeLogicalNameAttribute("isfolderautocreatedonsp")]
		public Nullable<bool> AutomaticallyCreateFolders
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("isfolderautocreatedonsp");
			}
			set
			{
				this.OnPropertyChanging("AutomaticallyCreateFolders");
				this.SetAttributeValue("isfolderautocreatedonsp", value);
				this.OnPropertyChanged("AutomaticallyCreateFolders");
			}
		}
		
		/// <summary>
		/// Enable or disable folder based tracking for Server Side Sync.
		/// </summary>
		[AttributeLogicalNameAttribute("isfolderbasedtrackingenabled")]
		public Nullable<bool> IsFolderBasedTrackingEnabled
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("isfolderbasedtrackingenabled");
			}
			set
			{
				this.OnPropertyChanging("IsFolderBasedTrackingEnabled");
				this.SetAttributeValue("isfolderbasedtrackingenabled", value);
				this.OnPropertyChanged("IsFolderBasedTrackingEnabled");
			}
		}
		
		/// <summary>
		/// Indicates whether full-text search for Quick Find entities should be enabled for the organization.
		/// </summary>
		[AttributeLogicalNameAttribute("isfulltextsearchenabled")]
		public Nullable<bool> EnableFullTextSearchForQuickFind
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("isfulltextsearchenabled");
			}
			set
			{
				this.OnPropertyChanging("EnableFullTextSearchForQuickFind");
				this.SetAttributeValue("isfulltextsearchenabled", value);
				this.OnPropertyChanged("EnableFullTextSearchForQuickFind");
			}
		}
		
		/// <summary>
		/// Enable Hierarchical Security Model
		/// </summary>
		[AttributeLogicalNameAttribute("ishierarchicalsecuritymodelenabled")]
		public Nullable<bool> EnableHierarchicalSecurityModel
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("ishierarchicalsecuritymodelenabled");
			}
			set
			{
				this.OnPropertyChanging("EnableHierarchicalSecurityModel");
				this.SetAttributeValue("ishierarchicalsecuritymodelenabled", value);
				this.OnPropertyChanged("EnableHierarchicalSecurityModel");
			}
		}
		
		/// <summary>
		/// Give Consent to use LUIS in Dynamics 365 Bot
		/// </summary>
		[AttributeLogicalNameAttribute("isluisenabledford365bot")]
		public Nullable<bool> LUISConsentForDynamicsThreeHundredAndSixtyFiveBot
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("isluisenabledford365bot");
			}
			set
			{
				this.OnPropertyChanging("LUISConsentForDynamicsThreeHundredAndSixtyFiveBot");
				this.SetAttributeValue("isluisenabledford365bot", value);
				this.OnPropertyChanged("LUISConsentForDynamicsThreeHundredAndSixtyFiveBot");
			}
		}
		
		/// <summary>
		/// Enable or disable forced unlocking for Server Side Sync mailboxes.
		/// </summary>
		[AttributeLogicalNameAttribute("ismailboxforcedunlockingenabled")]
		public Nullable<bool> IsMailboxForcedUnlockingEnabled
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("ismailboxforcedunlockingenabled");
			}
			set
			{
				this.OnPropertyChanging("IsMailboxForcedUnlockingEnabled");
				this.SetAttributeValue("ismailboxforcedunlockingenabled", value);
				this.OnPropertyChanged("IsMailboxForcedUnlockingEnabled");
			}
		}
		
		/// <summary>
		/// Enable or disable mailbox keep alive for Server Side Sync.
		/// </summary>
		[AttributeLogicalNameAttribute("ismailboxinactivebackoffenabled")]
		public Nullable<bool> IsMailboxKeepAliveEnabled
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("ismailboxinactivebackoffenabled");
			}
			set
			{
				this.OnPropertyChanging("IsMailboxKeepAliveEnabled");
				this.SetAttributeValue("ismailboxinactivebackoffenabled", value);
				this.OnPropertyChanged("IsMailboxKeepAliveEnabled");
			}
		}
		
		/// <summary>
		/// Indicates whether Manual Sales Forecasting feature has been enabled for the organization.
		/// </summary>
		[AttributeLogicalNameAttribute("ismanualsalesforecastingenabled")]
		public Nullable<bool> EnableManualSalesForecastingFeatureForThisOrganization
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("ismanualsalesforecastingenabled");
			}
			set
			{
				this.OnPropertyChanging("EnableManualSalesForecastingFeatureForThisOrganization");
				this.SetAttributeValue("ismanualsalesforecastingenabled", value);
				this.OnPropertyChanged("EnableManualSalesForecastingFeatureForThisOrganization");
			}
		}
		
		/// <summary>
		/// Information that specifies whether mobile client on demand sync is enabled.
		/// </summary>
		[AttributeLogicalNameAttribute("ismobileclientondemandsyncenabled")]
		public Nullable<bool> IsMobileClientOnDemandSyncEnabled
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("ismobileclientondemandsyncenabled");
			}
			set
			{
				this.OnPropertyChanging("IsMobileClientOnDemandSyncEnabled");
				this.SetAttributeValue("ismobileclientondemandsyncenabled", value);
				this.OnPropertyChanged("IsMobileClientOnDemandSyncEnabled");
			}
		}
		
		/// <summary>
		/// Indicates whether the feature MobileOffline should be enabled for the organization.
		/// </summary>
		[AttributeLogicalNameAttribute("ismobileofflineenabled")]
		public Nullable<bool> EnableMobileOfflineForThisOrganization
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("ismobileofflineenabled");
			}
			set
			{
				this.OnPropertyChanging("EnableMobileOfflineForThisOrganization");
				this.SetAttributeValue("ismobileofflineenabled", value);
				this.OnPropertyChanged("EnableMobileOfflineForThisOrganization");
			}
		}
		
		/// <summary>
		/// Indicates whether Microsoft Teams Collaboration feature has been enabled for the organization.
		/// </summary>
		[AttributeLogicalNameAttribute("ismsteamscollaborationenabled")]
		public Nullable<bool> EnableMicrosoftTeamsCollaborationForThisOrganization
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("ismsteamscollaborationenabled");
			}
			set
			{
				this.OnPropertyChanging("EnableMicrosoftTeamsCollaborationForThisOrganization");
				this.SetAttributeValue("ismsteamscollaborationenabled", value);
				this.OnPropertyChanged("EnableMicrosoftTeamsCollaborationForThisOrganization");
			}
		}
		
		/// <summary>
		/// Indicates whether Microsoft Teams integration has been enabled for the organization.
		/// </summary>
		[AttributeLogicalNameAttribute("ismsteamsenabled")]
		public Nullable<bool> EnableMicrosoftTeamsIntegration
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("ismsteamsenabled");
			}
			set
			{
				this.OnPropertyChanging("EnableMicrosoftTeamsIntegration");
				this.SetAttributeValue("ismsteamsenabled", value);
				this.OnPropertyChanged("EnableMicrosoftTeamsIntegration");
			}
		}
		
		/// <summary>
		/// Indicates whether the user has enabled or disabled Microsoft Teams integration.
		/// </summary>
		[AttributeLogicalNameAttribute("ismsteamssettingchangedbyuser")]
		public Nullable<bool> MicrosoftTeamsIntegrationChangedByUser
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("ismsteamssettingchangedbyuser");
			}
			set
			{
				this.OnPropertyChanging("MicrosoftTeamsIntegrationChangedByUser");
				this.SetAttributeValue("ismsteamssettingchangedbyuser", value);
				this.OnPropertyChanged("MicrosoftTeamsIntegrationChangedByUser");
			}
		}
		
		/// <summary>
		/// Indicates whether Microsoft Teams User Sync feature has been enabled for the organization.
		/// </summary>
		[AttributeLogicalNameAttribute("ismsteamsusersyncenabled")]
		public Nullable<bool> EnableMicrosoftTeamsUserSyncForThisOrganization
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("ismsteamsusersyncenabled");
			}
			set
			{
				this.OnPropertyChanging("EnableMicrosoftTeamsUserSyncForThisOrganization");
				this.SetAttributeValue("ismsteamsusersyncenabled", value);
				this.OnPropertyChanged("EnableMicrosoftTeamsUserSyncForThisOrganization");
			}
		}
		
		/// <summary>
		/// Indicates whether the feature Notes Analysis should be enabled for the organization.
		/// </summary>
		[AttributeLogicalNameAttribute("isnotesanalysisenabled")]
		public Nullable<bool> EnableNotesAnalysisForThisOrganization
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("isnotesanalysisenabled");
			}
			set
			{
				this.OnPropertyChanging("EnableNotesAnalysisForThisOrganization");
				this.SetAttributeValue("isnotesanalysisenabled", value);
				this.OnPropertyChanged("EnableNotesAnalysisForThisOrganization");
			}
		}
		
		/// <summary>
		/// Indicates whether the feature OfficeGraph should be enabled for the organization.
		/// </summary>
		[AttributeLogicalNameAttribute("isofficegraphenabled")]
		public Nullable<bool> EnableOfficeGraphForThisOrganization
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("isofficegraphenabled");
			}
			set
			{
				this.OnPropertyChanging("EnableOfficeGraphForThisOrganization");
				this.SetAttributeValue("isofficegraphenabled", value);
				this.OnPropertyChanged("EnableOfficeGraphForThisOrganization");
			}
		}
		
		/// <summary>
		/// Indicates whether the feature One Drive should be enabled for the organization.
		/// </summary>
		[AttributeLogicalNameAttribute("isonedriveenabled")]
		public Nullable<bool> EnableOneDriveForThisOrganization
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("isonedriveenabled");
			}
			set
			{
				this.OnPropertyChanging("EnableOneDriveForThisOrganization");
				this.SetAttributeValue("isonedriveenabled", value);
				this.OnPropertyChanged("EnableOneDriveForThisOrganization");
			}
		}
		
		/// <summary>
		/// Indicates whether PAI feature has been enabled for the organization.
		/// </summary>
		[AttributeLogicalNameAttribute("ispaienabled")]
		public Nullable<bool> EnablePAIFeatureForThisOrganization
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("ispaienabled");
			}
			set
			{
				this.OnPropertyChanging("EnablePAIFeatureForThisOrganization");
				this.SetAttributeValue("ispaienabled", value);
				this.OnPropertyChanged("EnablePAIFeatureForThisOrganization");
			}
		}
		
		/// <summary>
		/// Indicates whether PDF Generation feature has been enabled for the organization.
		/// </summary>
		[AttributeLogicalNameAttribute("ispdfgenerationenabled")]
		public string EnablePDFGenerationFeatureForThisOrganization
		{
			get
			{
				return this.GetAttributeValue<string>("ispdfgenerationenabled");
			}
			set
			{
				this.OnPropertyChanging("EnablePDFGenerationFeatureForThisOrganization");
				this.SetAttributeValue("ispdfgenerationenabled", value);
				this.OnPropertyChanged("EnablePDFGenerationFeatureForThisOrganization");
			}
		}
		
		/// <summary>
		/// Information on whether IM presence is enabled.
		/// </summary>
		[AttributeLogicalNameAttribute("ispresenceenabled")]
		public Nullable<bool> PresenceEnabled
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("ispresenceenabled");
			}
			set
			{
				this.OnPropertyChanging("PresenceEnabled");
				this.SetAttributeValue("ispresenceenabled", value);
				this.OnPropertyChanged("PresenceEnabled");
			}
		}
		
		/// <summary>
		/// Indicates whether the Preview feature for Action Card should be enabled for the organization.
		/// </summary>
		[AttributeLogicalNameAttribute("ispreviewenabledforactioncard")]
		public Nullable<bool> EnablePreviewActionCardFeatureForThisOrganization
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("ispreviewenabledforactioncard");
			}
			set
			{
				this.OnPropertyChanging("EnablePreviewActionCardFeatureForThisOrganization");
				this.SetAttributeValue("ispreviewenabledforactioncard", value);
				this.OnPropertyChanged("EnablePreviewActionCardFeatureForThisOrganization");
			}
		}
		
		/// <summary>
		/// Indicates whether the feature Auto Capture should be enabled for the organization at Preview Settings.
		/// </summary>
		[AttributeLogicalNameAttribute("ispreviewforautocaptureenabled")]
		public Nullable<bool> EnableAutoCaptureForThisOrganizationAtPreviewSettings
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("ispreviewforautocaptureenabled");
			}
			set
			{
				this.OnPropertyChanging("EnableAutoCaptureForThisOrganizationAtPreviewSettings");
				this.SetAttributeValue("ispreviewforautocaptureenabled", value);
				this.OnPropertyChanged("EnableAutoCaptureForThisOrganizationAtPreviewSettings");
			}
		}
		
		/// <summary>
		/// Is Preview For Email Monitoring Allowed.
		/// </summary>
		[AttributeLogicalNameAttribute("ispreviewforemailmonitoringallowed")]
		public Nullable<bool> AllowsPreviewForEmailMonitoring
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("ispreviewforemailmonitoringallowed");
			}
			set
			{
				this.OnPropertyChanging("AllowsPreviewForEmailMonitoring");
				this.SetAttributeValue("ispreviewforemailmonitoringallowed", value);
				this.OnPropertyChanged("AllowsPreviewForEmailMonitoring");
			}
		}
		
		/// <summary>
		/// Indicates whether PriceList is mandatory for adding existing products to sales entities.
		/// </summary>
		[AttributeLogicalNameAttribute("ispricelistmandatory")]
		public Nullable<bool> IndicatesWhetherPriceListIsMandatoryForAddingExistingProductsToSalesEntities
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("ispricelistmandatory");
			}
			set
			{
				this.OnPropertyChanging("IndicatesWhetherPriceListIsMandatoryForAddingExistingProductsToSalesEntities");
				this.SetAttributeValue("ispricelistmandatory", value);
				this.OnPropertyChanged("IndicatesWhetherPriceListIsMandatoryForAddingExistingProductsToSalesEntities");
			}
		}
		
		/// <summary>
		/// Select whether to use the standard Out-of-box Opportunity Close experience or opt to for a customized experience.
		/// </summary>
		[AttributeLogicalNameAttribute("isquickcreateenabledforopportunityclose")]
		public Nullable<bool> EnableQuickCreateFormForOpportunityCloseFeatureForThisOrganization
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("isquickcreateenabledforopportunityclose");
			}
			set
			{
				this.OnPropertyChanging("EnableQuickCreateFormForOpportunityCloseFeatureForThisOrganization");
				this.SetAttributeValue("isquickcreateenabledforopportunityclose", value);
				this.OnPropertyChanged("EnableQuickCreateFormForOpportunityCloseFeatureForThisOrganization");
			}
		}
		
		/// <summary>
		/// Enable or disable auditing of read operations.
		/// </summary>
		[AttributeLogicalNameAttribute("isreadauditenabled")]
		public Nullable<bool> IsReadAuditingEnabled
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("isreadauditenabled");
			}
			set
			{
				this.OnPropertyChanging("IsReadAuditingEnabled");
				this.SetAttributeValue("isreadauditenabled", value);
				this.OnPropertyChanged("IsReadAuditingEnabled");
			}
		}
		
		/// <summary>
		/// Indicates whether the feature Relationship Insights should be enabled for the organization.
		/// </summary>
		[AttributeLogicalNameAttribute("isrelationshipinsightsenabled")]
		public Nullable<bool> EnableRelationshipInsightsForThisOrganization
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("isrelationshipinsightsenabled");
			}
			set
			{
				this.OnPropertyChanging("EnableRelationshipInsightsForThisOrganization");
				this.SetAttributeValue("isrelationshipinsightsenabled", value);
				this.OnPropertyChanged("EnableRelationshipInsightsForThisOrganization");
			}
		}
		
		/// <summary>
		/// Indicates if the synchronization of user resource booking with Exchange is enabled at organization level.
		/// </summary>
		[AttributeLogicalNameAttribute("isresourcebookingexchangesyncenabled")]
		public Nullable<bool> ResourceBookingSynchronizationEnabled
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("isresourcebookingexchangesyncenabled");
			}
			set
			{
				this.OnPropertyChanging("ResourceBookingSynchronizationEnabled");
				this.SetAttributeValue("isresourcebookingexchangesyncenabled", value);
				this.OnPropertyChanged("ResourceBookingSynchronizationEnabled");
			}
		}
		
		/// <summary>
		/// Enable sales order processing integration.
		/// </summary>
		[AttributeLogicalNameAttribute("issopintegrationenabled")]
		public Nullable<bool> IsSalesOrderIntegrationEnabled
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("issopintegrationenabled");
			}
			set
			{
				this.OnPropertyChanging("IsSalesOrderIntegrationEnabled");
				this.SetAttributeValue("issopintegrationenabled", value);
				this.OnPropertyChanged("IsSalesOrderIntegrationEnabled");
			}
		}
		
		/// <summary>
		/// Information on whether text wrap is enabled.
		/// </summary>
		[AttributeLogicalNameAttribute("istextwrapenabled")]
		public Nullable<bool> EnableTextWrap
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("istextwrapenabled");
			}
			set
			{
				this.OnPropertyChanging("EnableTextWrap");
				this.SetAttributeValue("istextwrapenabled", value);
				this.OnPropertyChanged("EnableTextWrap");
			}
		}
		
		/// <summary>
		/// Enable or disable auditing of user access.
		/// </summary>
		[AttributeLogicalNameAttribute("isuseraccessauditenabled")]
		public Nullable<bool> IsUserAccessAuditingEnabled
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("isuseraccessauditenabled");
			}
			set
			{
				this.OnPropertyChanging("IsUserAccessAuditingEnabled");
				this.SetAttributeValue("isuseraccessauditenabled", value);
				this.OnPropertyChanged("IsUserAccessAuditingEnabled");
			}
		}
		
		/// <summary>
		/// Indicates whether loading of Microsoft Dynamics 365 in a browser window that does not have address, tool, and menu bars is enabled.
		/// </summary>
		[AttributeLogicalNameAttribute("isvintegrationcode")]
		[System.ObsoleteAttribute()]
		public OptionSetValue ISVIntegrationMode
		{
			get
			{
				return this.GetAttributeValue<OptionSetValue>("isvintegrationcode");
			}
			set
			{
				this.OnPropertyChanging("ISVIntegrationMode");
				this.SetAttributeValue("isvintegrationcode", value);
				this.OnPropertyChanged("ISVIntegrationMode");
			}
		}
		
		/// <summary>
		/// Type the prefix to use for all knowledge articles in Microsoft Dynamics 365.
		/// </summary>
		[AttributeLogicalNameAttribute("kaprefix")]
		public string KnowledgeArticlePrefix
		{
			get
			{
				return this.GetAttributeValue<string>("kaprefix");
			}
			set
			{
				this.OnPropertyChanging("KnowledgeArticlePrefix");
				this.SetAttributeValue("kaprefix", value);
				this.OnPropertyChanged("KnowledgeArticlePrefix");
			}
		}
		
		/// <summary>
		/// Prefix to use for all articles in Microsoft Dynamics 365.
		/// </summary>
		[AttributeLogicalNameAttribute("kbprefix")]
		public string ArticlePrefix
		{
			get
			{
				return this.GetAttributeValue<string>("kbprefix");
			}
			set
			{
				this.OnPropertyChanging("ArticlePrefix");
				this.SetAttributeValue("kbprefix", value);
				this.OnPropertyChanged("ArticlePrefix");
			}
		}
		
		/// <summary>
		/// XML string containing the Knowledge Management settings that are applied in Knowledge Management Wizard.
		/// </summary>
		[AttributeLogicalNameAttribute("kmsettings")]
		public string KnowledgeManagementSettings
		{
			get
			{
				return this.GetAttributeValue<string>("kmsettings");
			}
			set
			{
				this.OnPropertyChanging("KnowledgeManagementSettings");
				this.SetAttributeValue("kmsettings", value);
				this.OnPropertyChanged("KnowledgeManagementSettings");
			}
		}
		
		/// <summary>
		/// Preferred language for the organization.
		/// </summary>
		[AttributeLogicalNameAttribute("languagecode")]
		public Nullable<int> Language
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("languagecode");
			}
			set
			{
				this.OnPropertyChanging("Language");
				this.SetAttributeValue("languagecode", value);
				this.OnPropertyChanged("Language");
			}
		}
		
		/// <summary>
		/// Unique identifier of the locale of the organization.
		/// </summary>
		[AttributeLogicalNameAttribute("localeid")]
		public Nullable<int> Locale
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("localeid");
			}
			set
			{
				this.OnPropertyChanging("Locale");
				this.SetAttributeValue("localeid", value);
				this.OnPropertyChanged("Locale");
			}
		}
		
		/// <summary>
		/// Information that specifies how the Long Date format is displayed in Microsoft Dynamics 365.
		/// </summary>
		[AttributeLogicalNameAttribute("longdateformatcode")]
		public Nullable<int> LongDateFormat
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("longdateformatcode");
			}
			set
			{
				this.OnPropertyChanging("LongDateFormat");
				this.SetAttributeValue("longdateformatcode", value);
				this.OnPropertyChanged("LongDateFormat");
			}
		}
		
		/// <summary>
		/// Lower Threshold For Mailbox Intermittent Issue.
		/// </summary>
		[AttributeLogicalNameAttribute("mailboxintermittentissueminrange")]
		public Nullable<int> LowerThresholdForMailboxIntermittentIssue
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("mailboxintermittentissueminrange");
			}
			set
			{
				this.OnPropertyChanging("LowerThresholdForMailboxIntermittentIssue");
				this.SetAttributeValue("mailboxintermittentissueminrange", value);
				this.OnPropertyChanged("LowerThresholdForMailboxIntermittentIssue");
			}
		}
		
		/// <summary>
		/// Lower Threshold For Mailbox Permanent Issue.
		/// </summary>
		[AttributeLogicalNameAttribute("mailboxpermanentissueminrange")]
		public Nullable<int> LowerThresholdForMailboxPermanentIssue
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("mailboxpermanentissueminrange");
			}
			set
			{
				this.OnPropertyChanging("LowerThresholdForMailboxPermanentIssue");
				this.SetAttributeValue("mailboxpermanentissueminrange", value);
				this.OnPropertyChanged("LowerThresholdForMailboxPermanentIssue");
			}
		}
		
		/// <summary>
		/// Maximum number of actionsteps allowed in a BPF
		/// </summary>
		[AttributeLogicalNameAttribute("maxactionstepsinbpf")]
		public Nullable<int> MaximumNumberOfActionstepsAllowedInABPF
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("maxactionstepsinbpf");
			}
			set
			{
				this.OnPropertyChanging("MaximumNumberOfActionstepsAllowedInABPF");
				this.SetAttributeValue("maxactionstepsinbpf", value);
				this.OnPropertyChanged("MaximumNumberOfActionstepsAllowedInABPF");
			}
		}
		
		/// <summary>
		/// Maximum number of days an appointment can last.
		/// </summary>
		[AttributeLogicalNameAttribute("maxappointmentdurationdays")]
		public Nullable<int> MaxAppointmentDuration
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("maxappointmentdurationdays");
			}
			set
			{
				this.OnPropertyChanging("MaxAppointmentDuration");
				this.SetAttributeValue("maxappointmentdurationdays", value);
				this.OnPropertyChanged("MaxAppointmentDuration");
			}
		}
		
		/// <summary>
		/// Maximum number of conditions allowed for mobile offline filters
		/// </summary>
		[AttributeLogicalNameAttribute("maxconditionsformobileofflinefilters")]
		public Nullable<int> MaximumNumberOfConditionsAllowedForMobileOfflineFilters
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("maxconditionsformobileofflinefilters");
			}
			set
			{
				this.OnPropertyChanging("MaximumNumberOfConditionsAllowedForMobileOfflineFilters");
				this.SetAttributeValue("maxconditionsformobileofflinefilters", value);
				this.OnPropertyChanged("MaximumNumberOfConditionsAllowedForMobileOfflineFilters");
			}
		}
		
		/// <summary>
		/// Maximum depth for hierarchy security propagation.
		/// </summary>
		[AttributeLogicalNameAttribute("maxdepthforhierarchicalsecuritymodel")]
		public Nullable<int> MaximumDepthForHierarchySecurityPropagation
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("maxdepthforhierarchicalsecuritymodel");
			}
			set
			{
				this.OnPropertyChanging("MaximumDepthForHierarchySecurityPropagation");
				this.SetAttributeValue("maxdepthforhierarchicalsecuritymodel", value);
				this.OnPropertyChanged("MaximumDepthForHierarchySecurityPropagation");
			}
		}
		
		/// <summary>
		/// Maximum number of Folder Based Tracking mappings user can add
		/// </summary>
		[AttributeLogicalNameAttribute("maxfolderbasedtrackingmappings")]
		public Nullable<int> MaxFolderBasedTrackingMappings
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("maxfolderbasedtrackingmappings");
			}
			set
			{
				this.OnPropertyChanging("MaxFolderBasedTrackingMappings");
				this.SetAttributeValue("maxfolderbasedtrackingmappings", value);
				this.OnPropertyChanged("MaxFolderBasedTrackingMappings");
			}
		}
		
		/// <summary>
		/// Maximum number of active business process flows allowed per entity
		/// </summary>
		[AttributeLogicalNameAttribute("maximumactivebusinessprocessflowsallowedperentity")]
		public Nullable<int> MaximumActiveBusinessProcessFlowsPerEntity
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("maximumactivebusinessprocessflowsallowedperentity");
			}
			set
			{
				this.OnPropertyChanging("MaximumActiveBusinessProcessFlowsPerEntity");
				this.SetAttributeValue("maximumactivebusinessprocessflowsallowedperentity", value);
				this.OnPropertyChanged("MaximumActiveBusinessProcessFlowsPerEntity");
			}
		}
		
		/// <summary>
		/// Restrict the maximum number of product properties for a product family/bundle
		/// </summary>
		[AttributeLogicalNameAttribute("maximumdynamicpropertiesallowed")]
		public Nullable<int> ProductPropertiesItemLimit
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("maximumdynamicpropertiesallowed");
			}
			set
			{
				this.OnPropertyChanging("ProductPropertiesItemLimit");
				this.SetAttributeValue("maximumdynamicpropertiesallowed", value);
				this.OnPropertyChanged("ProductPropertiesItemLimit");
			}
		}
		
		/// <summary>
		/// Maximum number of active SLA allowed per entity in online
		/// </summary>
		[AttributeLogicalNameAttribute("maximumentitieswithactivesla")]
		public Nullable<int> MaximumNumberOfActiveSLAAllowedPerEntityInOnline
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("maximumentitieswithactivesla");
			}
			set
			{
				this.OnPropertyChanging("MaximumNumberOfActiveSLAAllowedPerEntityInOnline");
				this.SetAttributeValue("maximumentitieswithactivesla", value);
				this.OnPropertyChanged("MaximumNumberOfActiveSLAAllowedPerEntityInOnline");
			}
		}
		
		/// <summary>
		/// Maximum number of SLA KPI per active SLA allowed for entity in online
		/// </summary>
		[AttributeLogicalNameAttribute("maximumslakpiperentitywithactivesla")]
		public Nullable<int> MaximumNumberOfActiveSLAKPIAllowedPerEntityInOnline
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("maximumslakpiperentitywithactivesla");
			}
			set
			{
				this.OnPropertyChanging("MaximumNumberOfActiveSLAKPIAllowedPerEntityInOnline");
				this.SetAttributeValue("maximumslakpiperentitywithactivesla", value);
				this.OnPropertyChanged("MaximumNumberOfActiveSLAKPIAllowedPerEntityInOnline");
			}
		}
		
		/// <summary>
		/// Maximum tracking number before recycling takes place.
		/// </summary>
		[AttributeLogicalNameAttribute("maximumtrackingnumber")]
		public Nullable<int> MaxTrackingNumber
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("maximumtrackingnumber");
			}
			set
			{
				this.OnPropertyChanging("MaxTrackingNumber");
				this.SetAttributeValue("maximumtrackingnumber", value);
				this.OnPropertyChanged("MaxTrackingNumber");
			}
		}
		
		/// <summary>
		/// Restrict the maximum no of items in a bundle
		/// </summary>
		[AttributeLogicalNameAttribute("maxproductsinbundle")]
		public Nullable<int> BundleItemLimit
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("maxproductsinbundle");
			}
			set
			{
				this.OnPropertyChanging("BundleItemLimit");
				this.SetAttributeValue("maxproductsinbundle", value);
				this.OnPropertyChanged("BundleItemLimit");
			}
		}
		
		/// <summary>
		/// Maximum number of records that will be exported to a static Microsoft Office Excel worksheet when exporting from the grid.
		/// </summary>
		[AttributeLogicalNameAttribute("maxrecordsforexporttoexcel")]
		public Nullable<int> MaxRecordsForExcelExport
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("maxrecordsforexporttoexcel");
			}
			set
			{
				this.OnPropertyChanging("MaxRecordsForExcelExport");
				this.SetAttributeValue("maxrecordsforexporttoexcel", value);
				this.OnPropertyChanged("MaxRecordsForExcelExport");
			}
		}
		
		/// <summary>
		/// Maximum number of lookup and picklist records that can be selected by user for filtering.
		/// </summary>
		[AttributeLogicalNameAttribute("maxrecordsforlookupfilters")]
		public Nullable<int> MaxRecordsFilterSelection
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("maxrecordsforlookupfilters");
			}
			set
			{
				this.OnPropertyChanging("MaxRecordsFilterSelection");
				this.SetAttributeValue("maxrecordsforlookupfilters", value);
				this.OnPropertyChanged("MaxRecordsFilterSelection");
			}
		}
		
		/// <summary>
		/// The maximum version of IE to run browser emulation for in Outlook client
		/// </summary>
		[AttributeLogicalNameAttribute("maxsupportedinternetexplorerversion")]
		public Nullable<int> MaxSupportedIEVersion
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("maxsupportedinternetexplorerversion");
			}
		}
		
		/// <summary>
		/// Maximum allowed size of an attachment.
		/// </summary>
		[AttributeLogicalNameAttribute("maxuploadfilesize")]
		public Nullable<int> MaxUploadFileSize
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("maxuploadfilesize");
			}
			set
			{
				this.OnPropertyChanging("MaxUploadFileSize");
				this.SetAttributeValue("maxuploadfilesize", value);
				this.OnPropertyChanged("MaxUploadFileSize");
			}
		}
		
		/// <summary>
		/// Maximum number of mailboxes that can be toggled for verbose logging
		/// </summary>
		[AttributeLogicalNameAttribute("maxverboseloggingmailbox")]
		public Nullable<int> MaxNoOfMailboxesToEnableForVerboseLogging
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("maxverboseloggingmailbox");
			}
		}
		
		/// <summary>
		/// Maximum number of sync cycles for which verbose logging will be enabled by default
		/// </summary>
		[AttributeLogicalNameAttribute("maxverboseloggingsynccycles")]
		public Nullable<int> MaximumNumberOfSyncCyclesForWhichVerboseLoggingWillBeEnabledByDefault
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("maxverboseloggingsynccycles");
			}
		}
		
		/// <summary>
		/// Environment selected for Integration with Microsoft Flow
		/// </summary>
		[AttributeLogicalNameAttribute("microsoftflowenvironment")]
		public string EnvironmentSelectedForIntegrationWithMicrosoftFlow
		{
			get
			{
				return this.GetAttributeValue<string>("microsoftflowenvironment");
			}
			set
			{
				this.OnPropertyChanging("EnvironmentSelectedForIntegrationWithMicrosoftFlow");
				this.SetAttributeValue("microsoftflowenvironment", value);
				this.OnPropertyChanged("EnvironmentSelectedForIntegrationWithMicrosoftFlow");
			}
		}
		
		/// <summary>
		/// Normal polling frequency used for address book synchronization in Microsoft Office Outlook.
		/// </summary>
		[AttributeLogicalNameAttribute("minaddressbooksyncinterval")]
		public Nullable<int> MinAddressSynchronizationFrequency
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("minaddressbooksyncinterval");
			}
			set
			{
				this.OnPropertyChanging("MinAddressSynchronizationFrequency");
				this.SetAttributeValue("minaddressbooksyncinterval", value);
				this.OnPropertyChanged("MinAddressSynchronizationFrequency");
			}
		}
		
		/// <summary>
		/// Normal polling frequency used for background offline synchronization in Microsoft Office Outlook.
		/// </summary>
		[AttributeLogicalNameAttribute("minofflinesyncinterval")]
		public Nullable<int> MinOfflineSynchronizationFrequency
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("minofflinesyncinterval");
			}
			set
			{
				this.OnPropertyChanging("MinOfflineSynchronizationFrequency");
				this.SetAttributeValue("minofflinesyncinterval", value);
				this.OnPropertyChanged("MinOfflineSynchronizationFrequency");
			}
		}
		
		/// <summary>
		/// Minimum allowed time between scheduled Outlook synchronizations.
		/// </summary>
		[AttributeLogicalNameAttribute("minoutlooksyncinterval")]
		public Nullable<int> MinSynchronizationFrequency
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("minoutlooksyncinterval");
			}
			set
			{
				this.OnPropertyChanging("MinSynchronizationFrequency");
				this.SetAttributeValue("minoutlooksyncinterval", value);
				this.OnPropertyChanged("MinSynchronizationFrequency");
			}
		}
		
		/// <summary>
		/// Minimum number of user license required for mobile offline service by production/preview organization
		/// </summary>
		[AttributeLogicalNameAttribute("mobileofflineminlicenseprod")]
		public Nullable<int> MinimumNumberOfUserLicenseRequiredForMobileOfflineServiceByProductionPreviewOrganization
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("mobileofflineminlicenseprod");
			}
		}
		
		/// <summary>
		/// Minimum number of user license required for mobile offline service by trial organization
		/// </summary>
		[AttributeLogicalNameAttribute("mobileofflineminlicensetrial")]
		public Nullable<int> MinimumNumberOfUserLicenseRequiredForMobileOfflineServiceByTrialOrganization
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("mobileofflineminlicensetrial");
			}
		}
		
		/// <summary>
		/// Sync interval for mobile offline.
		/// </summary>
		[AttributeLogicalNameAttribute("mobileofflinesyncinterval")]
		public Nullable<int> SyncIntervalForMobileOffline
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("mobileofflinesyncinterval");
			}
			set
			{
				this.OnPropertyChanging("SyncIntervalForMobileOffline");
				this.SetAttributeValue("mobileofflinesyncinterval", value);
				this.OnPropertyChanged("SyncIntervalForMobileOffline");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who last modified the organization.
		/// </summary>
		/// <remarks>
		/// The property is read-only and the setter has been added to assist with unit testing only.
		/// </remarks>
		[AttributeLogicalNameAttribute("modifiedby")]
		public EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("modifiedby");
			}
			set
			{
				this.OnPropertyChanging("ModifiedBy");
				this.SetAttributeValue("modifiedby", value);
				this.OnPropertyChanged("ModifiedBy");
			}
		}
		
		/// <summary>
		/// Date and time when the organization was last modified.
		/// </summary>
		/// <remarks>
		/// The property is read-only and the setter has been added to assist with unit testing only.
		/// </remarks>
		[AttributeLogicalNameAttribute("modifiedon")]
		public Nullable<DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<Nullable<DateTime>>("modifiedon");
			}
			set
			{
				this.OnPropertyChanging("ModifiedOn");
				this.SetAttributeValue("modifiedon", value);
				this.OnPropertyChanged("ModifiedOn");
			}
		}
		
		/// <summary>
		/// Name of the organization. The name is set when Microsoft CRM is installed and should not be changed.
		/// </summary>
		[AttributeLogicalNameAttribute("name")]
		public string OrganizationName
		{
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			set
			{
				this.OnPropertyChanging("OrganizationName");
				this.SetAttributeValue("name", value);
				this.OnPropertyChanged("OrganizationName");
			}
		}
		
		/// <summary>
		/// Information that specifies how negative currency numbers are displayed throughout Microsoft Dynamics 365.
		/// </summary>
		[AttributeLogicalNameAttribute("negativecurrencyformatcode")]
		public Nullable<int> NegativeCurrencyFormat
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("negativecurrencyformatcode");
			}
			set
			{
				this.OnPropertyChanging("NegativeCurrencyFormat");
				this.SetAttributeValue("negativecurrencyformatcode", value);
				this.OnPropertyChanged("NegativeCurrencyFormat");
			}
		}
		
		/// <summary>
		/// Information that specifies how negative numbers are displayed throughout Microsoft CRM.
		/// </summary>
		[AttributeLogicalNameAttribute("negativeformatcode")]
		public OptionSetValue NegativeFormat
		{
			get
			{
				return this.GetAttributeValue<OptionSetValue>("negativeformatcode");
			}
			set
			{
				this.OnPropertyChanging("NegativeFormat");
				this.SetAttributeValue("negativeformatcode", value);
				this.OnPropertyChanged("NegativeFormat");
			}
		}
		
		/// <summary>
		/// Next token to be placed on the subject line of an email message.
		/// </summary>
		[AttributeLogicalNameAttribute("nexttrackingnumber")]
		public Nullable<int> NextTrackingNumber
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("nexttrackingnumber");
			}
			set
			{
				this.OnPropertyChanging("NextTrackingNumber");
				this.SetAttributeValue("nexttrackingnumber", value);
				this.OnPropertyChanged("NextTrackingNumber");
			}
		}
		
		/// <summary>
		/// Indicates whether mailbox owners will be notified of email server profile level alerts.
		/// </summary>
		[AttributeLogicalNameAttribute("notifymailboxownerofemailserverlevelalerts")]
		public Nullable<bool> NotifyMailboxOwnerOfEmailServerLevelAlerts
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("notifymailboxownerofemailserverlevelalerts");
			}
			set
			{
				this.OnPropertyChanging("NotifyMailboxOwnerOfEmailServerLevelAlerts");
				this.SetAttributeValue("notifymailboxownerofemailserverlevelalerts", value);
				this.OnPropertyChanged("NotifyMailboxOwnerOfEmailServerLevelAlerts");
			}
		}
		
		/// <summary>
		/// Specification of how numbers are displayed throughout Microsoft CRM.
		/// </summary>
		[AttributeLogicalNameAttribute("numberformat")]
		public string NumberFormat
		{
			get
			{
				return this.GetAttributeValue<string>("numberformat");
			}
			set
			{
				this.OnPropertyChanging("NumberFormat");
				this.SetAttributeValue("numberformat", value);
				this.OnPropertyChanged("NumberFormat");
			}
		}
		
		/// <summary>
		/// Specifies how numbers are grouped in Microsoft Dynamics 365.
		/// </summary>
		[AttributeLogicalNameAttribute("numbergroupformat")]
		public string NumberGroupingFormat
		{
			get
			{
				return this.GetAttributeValue<string>("numbergroupformat");
			}
			set
			{
				this.OnPropertyChanging("NumberGroupingFormat");
				this.SetAttributeValue("numbergroupformat", value);
				this.OnPropertyChanged("NumberGroupingFormat");
			}
		}
		
		/// <summary>
		/// Symbol used for number separation in Microsoft Dynamics 365.
		/// </summary>
		[AttributeLogicalNameAttribute("numberseparator")]
		public string NumberSeparator
		{
			get
			{
				return this.GetAttributeValue<string>("numberseparator");
			}
			set
			{
				this.OnPropertyChanging("NumberSeparator");
				this.SetAttributeValue("numberseparator", value);
				this.OnPropertyChanged("NumberSeparator");
			}
		}
		
		/// <summary>
		/// Indicates whether the Office Apps auto deployment is enabled for the organization.
		/// </summary>
		[AttributeLogicalNameAttribute("officeappsautodeploymentenabled")]
		public Nullable<bool> EnableOfficeAppsAutoDeploymentForThisOrganization
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("officeappsautodeploymentenabled");
			}
			set
			{
				this.OnPropertyChanging("EnableOfficeAppsAutoDeploymentForThisOrganization");
				this.SetAttributeValue("officeappsautodeploymentenabled", value);
				this.OnPropertyChanged("EnableOfficeAppsAutoDeploymentForThisOrganization");
			}
		}
		
		/// <summary>
		/// The url to open the Delve for the organization.
		/// </summary>
		[AttributeLogicalNameAttribute("officegraphdelveurl")]
		public string TheUrlToOpenTheDelve
		{
			get
			{
				return this.GetAttributeValue<string>("officegraphdelveurl");
			}
			set
			{
				this.OnPropertyChanging("TheUrlToOpenTheDelve");
				this.SetAttributeValue("officegraphdelveurl", value);
				this.OnPropertyChanged("TheUrlToOpenTheDelve");
			}
		}
		
		/// <summary>
		/// Enable OOB pricing calculation logic for Opportunity, Quote, Order and Invoice entities.
		/// </summary>
		[AttributeLogicalNameAttribute("oobpricecalculationenabled")]
		public Nullable<bool> EnableOOBPriceCalculation
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("oobpricecalculationenabled");
			}
			set
			{
				this.OnPropertyChanging("EnableOOBPriceCalculation");
				this.SetAttributeValue("oobpricecalculationenabled", value);
				this.OnPropertyChanged("EnableOOBPriceCalculation");
			}
		}
		
		/// <summary>
		/// Prefix to use for all orders throughout Microsoft Dynamics 365.
		/// </summary>
		[AttributeLogicalNameAttribute("orderprefix")]
		public string OrderPrefix
		{
			get
			{
				return this.GetAttributeValue<string>("orderprefix");
			}
			set
			{
				this.OnPropertyChanging("OrderPrefix");
				this.SetAttributeValue("orderprefix", value);
				this.OnPropertyChanged("OrderPrefix");
			}
		}
		
		/// <summary>
		/// Unique identifier of the organization.
		/// </summary>
		[AttributeLogicalNameAttribute("organizationid")]
		public Nullable<Guid> OrganizationId
		{
			get
			{
				return this.GetAttributeValue<Nullable<Guid>>("organizationid");
			}
		}
		
		[AttributeLogicalNameAttribute("organizationid")]
		public override Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				base.Id = value;
			}
		}
		
		/// <summary>
		/// Indicates the organization lifecycle state
		/// </summary>
		[AttributeLogicalNameAttribute("organizationstate")]
		public Nullable<OrganizationOrganizationState> OrganizationState
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("organizationstate");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (OrganizationOrganizationState)(Enum.ToObject(typeof(OrganizationOrganizationState), optionSet.Value));
				}
			}
		}
		
		/// <summary>
		/// Organization settings stored in Organization Database.
		/// </summary>
		[AttributeLogicalNameAttribute("orgdborgsettings")]
		public string OrganizationDatabaseOrganizationSettings
		{
			get
			{
				return this.GetAttributeValue<string>("orgdborgsettings");
			}
			set
			{
				this.OnPropertyChanging("OrganizationDatabaseOrganizationSettings");
				this.SetAttributeValue("orgdborgsettings", value);
				this.OnPropertyChanged("OrganizationDatabaseOrganizationSettings");
			}
		}
		
		/// <summary>
		/// Select whether to turn on OrgInsights for the organization.
		/// </summary>
		[AttributeLogicalNameAttribute("orginsightsenabled")]
		public Nullable<bool> EnableOrgInsightsForThisOrganization
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("orginsightsenabled");
			}
			set
			{
				this.OnPropertyChanging("EnableOrgInsightsForThisOrganization");
				this.SetAttributeValue("orginsightsenabled", value);
				this.OnPropertyChanged("EnableOrgInsightsForThisOrganization");
			}
		}
		
		/// <summary>
		/// Prefix used for parsed table columns.
		/// </summary>
		[AttributeLogicalNameAttribute("parsedtablecolumnprefix")]
		public string ParsedTableColumnPrefix
		{
			get
			{
				return this.GetAttributeValue<string>("parsedtablecolumnprefix");
			}
		}
		
		/// <summary>
		/// Prefix used for parsed tables.
		/// </summary>
		[AttributeLogicalNameAttribute("parsedtableprefix")]
		public string ParsedTablePrefix
		{
			get
			{
				return this.GetAttributeValue<string>("parsedtableprefix");
			}
		}
		
		/// <summary>
		/// Specifies the maximum number of months in past for which the recurring activities can be created.
		/// </summary>
		[AttributeLogicalNameAttribute("pastexpansionwindow")]
		public Nullable<int> PastExpansionWindow
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("pastexpansionwindow");
			}
			set
			{
				this.OnPropertyChanging("PastExpansionWindow");
				this.SetAttributeValue("pastexpansionwindow", value);
				this.OnPropertyChanged("PastExpansionWindow");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[AttributeLogicalNameAttribute("picture")]
		public string Picture
		{
			get
			{
				return this.GetAttributeValue<string>("picture");
			}
			set
			{
				this.OnPropertyChanging("Picture");
				this.SetAttributeValue("picture", value);
				this.OnPropertyChanged("Picture");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[AttributeLogicalNameAttribute("pinpointlanguagecode")]
		public Nullable<int> PinpointLanguageCode
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("pinpointlanguagecode");
			}
			set
			{
				this.OnPropertyChanging("PinpointLanguageCode");
				this.SetAttributeValue("pinpointlanguagecode", value);
				this.OnPropertyChanged("PinpointLanguageCode");
			}
		}
		
		/// <summary>
		/// Plug-in Trace Log Setting for the Organization.
		/// </summary>
		[AttributeLogicalNameAttribute("plugintracelogsetting")]
		public OptionSetValue PlugInTraceLogSetting
		{
			get
			{
				return this.GetAttributeValue<OptionSetValue>("plugintracelogsetting");
			}
			set
			{
				this.OnPropertyChanging("PlugInTraceLogSetting");
				this.SetAttributeValue("plugintracelogsetting", value);
				this.OnPropertyChanged("PlugInTraceLogSetting");
			}
		}
		
		/// <summary>
		/// PM designator to use throughout Microsoft Dynamics 365.
		/// </summary>
		[AttributeLogicalNameAttribute("pmdesignator")]
		public string PMDesignator
		{
			get
			{
				return this.GetAttributeValue<string>("pmdesignator");
			}
			set
			{
				this.OnPropertyChanging("PMDesignator");
				this.SetAttributeValue("pmdesignator", value);
				this.OnPropertyChanged("PMDesignator");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[AttributeLogicalNameAttribute("postmessagewhitelistdomains")]
		public string PostMessageWhitelistDomains
		{
			get
			{
				return this.GetAttributeValue<string>("postmessagewhitelistdomains");
			}
			set
			{
				this.OnPropertyChanging("PostMessageWhitelistDomains");
				this.SetAttributeValue("postmessagewhitelistdomains", value);
				this.OnPropertyChanged("PostMessageWhitelistDomains");
			}
		}
		
		/// <summary>
		/// Indicates whether the Power BI feature should be enabled for the organization.
		/// </summary>
		[AttributeLogicalNameAttribute("powerbifeatureenabled")]
		public Nullable<bool> EnablePowerBIFeatureForThisOrganization
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("powerbifeatureenabled");
			}
			set
			{
				this.OnPropertyChanging("EnablePowerBIFeatureForThisOrganization");
				this.SetAttributeValue("powerbifeatureenabled", value);
				this.OnPropertyChanged("EnablePowerBIFeatureForThisOrganization");
			}
		}
		
		/// <summary>
		/// Number of decimal places that can be used for prices.
		/// </summary>
		[AttributeLogicalNameAttribute("pricingdecimalprecision")]
		public Nullable<int> PricingDecimalPrecision
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("pricingdecimalprecision");
			}
			set
			{
				this.OnPropertyChanging("PricingDecimalPrecision");
				this.SetAttributeValue("pricingdecimalprecision", value);
				this.OnPropertyChanged("PricingDecimalPrecision");
			}
		}
		
		/// <summary>
		/// Privacy Statement URL
		/// </summary>
		[AttributeLogicalNameAttribute("privacystatementurl")]
		public string PrivacyStatementURL
		{
			get
			{
				return this.GetAttributeValue<string>("privacystatementurl");
			}
			set
			{
				this.OnPropertyChanging("PrivacyStatementURL");
				this.SetAttributeValue("privacystatementurl", value);
				this.OnPropertyChanged("PrivacyStatementURL");
			}
		}
		
		/// <summary>
		/// Unique identifier of the default privilege for users in the organization.
		/// </summary>
		[AttributeLogicalNameAttribute("privilegeusergroupid")]
		public Nullable<Guid> PrivilegeUserGroup
		{
			get
			{
				return this.GetAttributeValue<Nullable<Guid>>("privilegeusergroupid");
			}
			set
			{
				this.OnPropertyChanging("PrivilegeUserGroup");
				this.SetAttributeValue("privilegeusergroupid", value);
				this.OnPropertyChanged("PrivilegeUserGroup");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[AttributeLogicalNameAttribute("privreportinggroupid")]
		public Nullable<Guid> PrivilegeReportingGroup
		{
			get
			{
				return this.GetAttributeValue<Nullable<Guid>>("privreportinggroupid");
			}
			set
			{
				this.OnPropertyChanging("PrivilegeReportingGroup");
				this.SetAttributeValue("privreportinggroupid", value);
				this.OnPropertyChanged("PrivilegeReportingGroup");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[AttributeLogicalNameAttribute("privreportinggroupname")]
		public string PrivilegeReportingGroupName
		{
			get
			{
				return this.GetAttributeValue<string>("privreportinggroupname");
			}
			set
			{
				this.OnPropertyChanging("PrivilegeReportingGroupName");
				this.SetAttributeValue("privreportinggroupname", value);
				this.OnPropertyChanged("PrivilegeReportingGroupName");
			}
		}
		
		/// <summary>
		/// Select whether to turn on product recommendations for the organization.
		/// </summary>
		[AttributeLogicalNameAttribute("productrecommendationsenabled")]
		public Nullable<bool> EnableProductRecommendationsForThisOrganization
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("productrecommendationsenabled");
			}
			set
			{
				this.OnPropertyChanging("EnableProductRecommendationsForThisOrganization");
				this.SetAttributeValue("productrecommendationsenabled", value);
				this.OnPropertyChanged("EnableProductRecommendationsForThisOrganization");
			}
		}
		
		/// <summary>
		/// Indicates whether a quick find record limit should be enabled for this organization (allows for faster Quick Find queries but prevents overly broad searches).
		/// </summary>
		[AttributeLogicalNameAttribute("quickfindrecordlimitenabled")]
		public Nullable<bool> QuickFindRecordLimitEnabled
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("quickfindrecordlimitenabled");
			}
			set
			{
				this.OnPropertyChanging("QuickFindRecordLimitEnabled");
				this.SetAttributeValue("quickfindrecordlimitenabled", value);
				this.OnPropertyChanged("QuickFindRecordLimitEnabled");
			}
		}
		
		/// <summary>
		/// Prefix to use for all quotes throughout Microsoft Dynamics 365.
		/// </summary>
		[AttributeLogicalNameAttribute("quoteprefix")]
		public string QuotePrefix
		{
			get
			{
				return this.GetAttributeValue<string>("quoteprefix");
			}
			set
			{
				this.OnPropertyChanging("QuotePrefix");
				this.SetAttributeValue("quoteprefix", value);
				this.OnPropertyChanged("QuotePrefix");
			}
		}
		
		/// <summary>
		/// Specifies the default value for number of occurrences field in the recurrence dialog.
		/// </summary>
		[AttributeLogicalNameAttribute("recurrencedefaultnumberofoccurrences")]
		public Nullable<int> RecurrenceDefaultNumberOfOccurrences
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("recurrencedefaultnumberofoccurrences");
			}
			set
			{
				this.OnPropertyChanging("RecurrenceDefaultNumberOfOccurrences");
				this.SetAttributeValue("recurrencedefaultnumberofoccurrences", value);
				this.OnPropertyChanged("RecurrenceDefaultNumberOfOccurrences");
			}
		}
		
		/// <summary>
		/// Specifies the interval (in seconds) for pausing expansion job.
		/// </summary>
		[AttributeLogicalNameAttribute("recurrenceexpansionjobbatchinterval")]
		public Nullable<int> RecurrenceExpansionJobBatchInterval
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("recurrenceexpansionjobbatchinterval");
			}
			set
			{
				this.OnPropertyChanging("RecurrenceExpansionJobBatchInterval");
				this.SetAttributeValue("recurrenceexpansionjobbatchinterval", value);
				this.OnPropertyChanged("RecurrenceExpansionJobBatchInterval");
			}
		}
		
		/// <summary>
		/// Specifies the value for number of instances created in on demand job in one shot.
		/// </summary>
		[AttributeLogicalNameAttribute("recurrenceexpansionjobbatchsize")]
		public Nullable<int> RecurrenceExpansionOnDemandJobBatchSize
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("recurrenceexpansionjobbatchsize");
			}
			set
			{
				this.OnPropertyChanging("RecurrenceExpansionOnDemandJobBatchSize");
				this.SetAttributeValue("recurrenceexpansionjobbatchsize", value);
				this.OnPropertyChanged("RecurrenceExpansionOnDemandJobBatchSize");
			}
		}
		
		/// <summary>
		/// Specifies the maximum number of instances to be created synchronously after creating a recurring appointment.
		/// </summary>
		[AttributeLogicalNameAttribute("recurrenceexpansionsynchcreatemax")]
		public Nullable<int> RecurrenceExpansionSynchronizationCreateMaximum
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("recurrenceexpansionsynchcreatemax");
			}
			set
			{
				this.OnPropertyChanging("RecurrenceExpansionSynchronizationCreateMaximum");
				this.SetAttributeValue("recurrenceexpansionsynchcreatemax", value);
				this.OnPropertyChanged("RecurrenceExpansionSynchronizationCreateMaximum");
			}
		}
		
		/// <summary>
		/// XML string that defines the navigation structure for the application. This is the site map from the previously upgraded build and is used in a 3-way merge during upgrade.
		/// </summary>
		[AttributeLogicalNameAttribute("referencesitemapxml")]
		[System.ObsoleteAttribute()]
		public string ReferenceSiteMapXML
		{
			get
			{
				return this.GetAttributeValue<string>("referencesitemapxml");
			}
			set
			{
				this.OnPropertyChanging("ReferenceSiteMapXML");
				this.SetAttributeValue("referencesitemapxml", value);
				this.OnPropertyChanged("ReferenceSiteMapXML");
			}
		}
		
		/// <summary>
		/// Flag to render the body of email in the Web form in an IFRAME with the security='restricted' attribute set. This is additional security but can cause a credentials prompt.
		/// </summary>
		[AttributeLogicalNameAttribute("rendersecureiframeforemail")]
		public Nullable<bool> RenderSecureFrameForEmail
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("rendersecureiframeforemail");
			}
			set
			{
				this.OnPropertyChanging("RenderSecureFrameForEmail");
				this.SetAttributeValue("rendersecureiframeforemail", value);
				this.OnPropertyChanged("RenderSecureFrameForEmail");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[AttributeLogicalNameAttribute("reportinggroupid")]
		public Nullable<Guid> ReportingGroup
		{
			get
			{
				return this.GetAttributeValue<Nullable<Guid>>("reportinggroupid");
			}
			set
			{
				this.OnPropertyChanging("ReportingGroup");
				this.SetAttributeValue("reportinggroupid", value);
				this.OnPropertyChanged("ReportingGroup");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[AttributeLogicalNameAttribute("reportinggroupname")]
		public string ReportingGroupName
		{
			get
			{
				return this.GetAttributeValue<string>("reportinggroupname");
			}
			set
			{
				this.OnPropertyChanging("ReportingGroupName");
				this.SetAttributeValue("reportinggroupname", value);
				this.OnPropertyChanged("ReportingGroupName");
			}
		}
		
		/// <summary>
		/// Picklist for selecting the organization preference for reporting scripting errors.
		/// </summary>
		[AttributeLogicalNameAttribute("reportscripterrors")]
		public Nullable<OrganizationReportScriptErrors> ReportScriptErrors
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("reportscripterrors");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (OrganizationReportScriptErrors)(Enum.ToObject(typeof(OrganizationReportScriptErrors), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("ReportScriptErrors");
				if (value == null)
				{
					this.SetAttributeValue("reportscripterrors", null);
				}
				else
				{
					this.SetAttributeValue("reportscripterrors", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("ReportScriptErrors");
			}
		}
		
		/// <summary>
		/// Indicates whether Send As Other User privilege is enabled.
		/// </summary>
		[AttributeLogicalNameAttribute("requireapprovalforqueueemail")]
		public Nullable<bool> IsApprovalForQueueEmailRequired
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("requireapprovalforqueueemail");
			}
			set
			{
				this.OnPropertyChanging("IsApprovalForQueueEmailRequired");
				this.SetAttributeValue("requireapprovalforqueueemail", value);
				this.OnPropertyChanged("IsApprovalForQueueEmailRequired");
			}
		}
		
		/// <summary>
		/// Indicates whether Send As Other User privilege is enabled.
		/// </summary>
		[AttributeLogicalNameAttribute("requireapprovalforuseremail")]
		public Nullable<bool> IsApprovalForUserEmailRequired
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("requireapprovalforuseremail");
			}
			set
			{
				this.OnPropertyChanging("IsApprovalForUserEmailRequired");
				this.SetAttributeValue("requireapprovalforuseremail", value);
				this.OnPropertyChanged("IsApprovalForUserEmailRequired");
			}
		}
		
		/// <summary>
		/// Apply same email address to all unresolved matches when you manually resolve it for one
		/// </summary>
		[AttributeLogicalNameAttribute("resolvesimilarunresolvedemailaddress")]
		public Nullable<bool> ApplySameEmailAddressToAllUnresolvedMatchesWhenYouManuallyResolveItForOne
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("resolvesimilarunresolvedemailaddress");
			}
			set
			{
				this.OnPropertyChanging("ApplySameEmailAddressToAllUnresolvedMatchesWhenYouManuallyResolveItForOne");
				this.SetAttributeValue("resolvesimilarunresolvedemailaddress", value);
				this.OnPropertyChanged("ApplySameEmailAddressToAllUnresolvedMatchesWhenYouManuallyResolveItForOne");
			}
		}
		
		/// <summary>
		/// Flag to restrict Update on incident.
		/// </summary>
		[AttributeLogicalNameAttribute("restrictstatusupdate")]
		public Nullable<bool> RestrictStatusUpdate
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("restrictstatusupdate");
			}
			set
			{
				this.OnPropertyChanging("RestrictStatusUpdate");
				this.SetAttributeValue("restrictstatusupdate", value);
				this.OnPropertyChanged("RestrictStatusUpdate");
			}
		}
		
		/// <summary>
		/// Error status of Relationship Insights provisioning.
		/// </summary>
		[AttributeLogicalNameAttribute("rierrorstatus")]
		public Nullable<int> ErrorStatusOfRelationshipInsightsProvisioning
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("rierrorstatus");
			}
			set
			{
				this.OnPropertyChanging("ErrorStatusOfRelationshipInsightsProvisioning");
				this.SetAttributeValue("rierrorstatus", value);
				this.OnPropertyChanged("ErrorStatusOfRelationshipInsightsProvisioning");
			}
		}
		
		/// <summary>
		/// Unique identifier of the sample data import job.
		/// </summary>
		[AttributeLogicalNameAttribute("sampledataimportid")]
		public Nullable<Guid> SampleDataImport
		{
			get
			{
				return this.GetAttributeValue<Nullable<Guid>>("sampledataimportid");
			}
			set
			{
				this.OnPropertyChanging("SampleDataImport");
				this.SetAttributeValue("sampledataimportid", value);
				this.OnPropertyChanged("SampleDataImport");
			}
		}
		
		/// <summary>
		/// Scheduling engine for Appointments and Service Activities
		/// </summary>
		[AttributeLogicalNameAttribute("schedulingengine")]
		public Nullable<OrganizationSchedulingEngineForAppointmentsAndServiceActivities> SchedulingEngineForAppointmentsAndServiceActivities
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("schedulingengine");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (OrganizationSchedulingEngineForAppointmentsAndServiceActivities)(Enum.ToObject(typeof(OrganizationSchedulingEngineForAppointmentsAndServiceActivities), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("SchedulingEngineForAppointmentsAndServiceActivities");
				if (value == null)
				{
					this.SetAttributeValue("schedulingengine", null);
				}
				else
				{
					this.SetAttributeValue("schedulingengine", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("SchedulingEngineForAppointmentsAndServiceActivities");
			}
		}
		
		/// <summary>
		/// Prefix used for custom entities and attributes.
		/// </summary>
		[AttributeLogicalNameAttribute("schemanameprefix")]
		public string CustomizationNamePrefix
		{
			get
			{
				return this.GetAttributeValue<string>("schemanameprefix");
			}
			set
			{
				this.OnPropertyChanging("CustomizationNamePrefix");
				this.SetAttributeValue("schemanameprefix", value);
				this.OnPropertyChanged("CustomizationNamePrefix");
			}
		}
		
		/// <summary>
		/// Serve Static Content From CDN
		/// </summary>
		[AttributeLogicalNameAttribute("servestaticresourcesfromazurecdn")]
		public Nullable<bool> ServeStaticContentFromCDN
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("servestaticresourcesfromazurecdn");
			}
			set
			{
				this.OnPropertyChanging("ServeStaticContentFromCDN");
				this.SetAttributeValue("servestaticresourcesfromazurecdn", value);
				this.OnPropertyChanged("ServeStaticContentFromCDN");
			}
		}
		
		/// <summary>
		/// Information that specifies whether session timeout is enabled
		/// </summary>
		[AttributeLogicalNameAttribute("sessiontimeoutenabled")]
		public Nullable<bool> SessionTimeoutEnabled
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("sessiontimeoutenabled");
			}
			set
			{
				this.OnPropertyChanging("SessionTimeoutEnabled");
				this.SetAttributeValue("sessiontimeoutenabled", value);
				this.OnPropertyChanged("SessionTimeoutEnabled");
			}
		}
		
		/// <summary>
		/// Session timeout in minutes
		/// </summary>
		[AttributeLogicalNameAttribute("sessiontimeoutinmins")]
		public Nullable<int> SessionTimeoutInMinutes
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("sessiontimeoutinmins");
			}
			set
			{
				this.OnPropertyChanging("SessionTimeoutInMinutes");
				this.SetAttributeValue("sessiontimeoutinmins", value);
				this.OnPropertyChanged("SessionTimeoutInMinutes");
			}
		}
		
		/// <summary>
		/// Session timeout reminder in minutes
		/// </summary>
		[AttributeLogicalNameAttribute("sessiontimeoutreminderinmins")]
		public Nullable<int> SessionTimeoutReminderInMinutes
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("sessiontimeoutreminderinmins");
			}
			set
			{
				this.OnPropertyChanging("SessionTimeoutReminderInMinutes");
				this.SetAttributeValue("sessiontimeoutreminderinmins", value);
				this.OnPropertyChanged("SessionTimeoutReminderInMinutes");
			}
		}
		
		/// <summary>
		/// Indicates which SharePoint deployment type is configured for Server to Server. (Online or On-Premises)
		/// </summary>
		[AttributeLogicalNameAttribute("sharepointdeploymenttype")]
		public OptionSetValue ChooseSharePointDeploymentType
		{
			get
			{
				return this.GetAttributeValue<OptionSetValue>("sharepointdeploymenttype");
			}
			set
			{
				this.OnPropertyChanging("ChooseSharePointDeploymentType");
				this.SetAttributeValue("sharepointdeploymenttype", value);
				this.OnPropertyChanged("ChooseSharePointDeploymentType");
			}
		}
		
		/// <summary>
		/// Information that specifies whether to share to previous owner on assign.
		/// </summary>
		[AttributeLogicalNameAttribute("sharetopreviousowneronassign")]
		public Nullable<bool> ShareToPreviousOwnerOnAssign
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("sharetopreviousowneronassign");
			}
			set
			{
				this.OnPropertyChanging("ShareToPreviousOwnerOnAssign");
				this.SetAttributeValue("sharetopreviousowneronassign", value);
				this.OnPropertyChanged("ShareToPreviousOwnerOnAssign");
			}
		}
		
		/// <summary>
		/// Select whether to display a KB article deprecation notification to the user.
		/// </summary>
		[AttributeLogicalNameAttribute("showkbarticledeprecationnotification")]
		public Nullable<bool> ShowKBArticleDeprecationMessageToUser
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("showkbarticledeprecationnotification");
			}
			set
			{
				this.OnPropertyChanging("ShowKBArticleDeprecationMessageToUser");
				this.SetAttributeValue("showkbarticledeprecationnotification", value);
				this.OnPropertyChanged("ShowKBArticleDeprecationMessageToUser");
			}
		}
		
		/// <summary>
		/// Information that specifies whether to display the week number in calendar displays throughout Microsoft CRM.
		/// </summary>
		[AttributeLogicalNameAttribute("showweeknumber")]
		public Nullable<bool> ShowWeekNumber
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("showweeknumber");
			}
			set
			{
				this.OnPropertyChanging("ShowWeekNumber");
				this.SetAttributeValue("showweeknumber", value);
				this.OnPropertyChanged("ShowWeekNumber");
			}
		}
		
		/// <summary>
		/// CRM for Outlook Download URL
		/// </summary>
		[AttributeLogicalNameAttribute("signupoutlookdownloadfwlink")]
		public string CRMForOutlookDownloadURL
		{
			get
			{
				return this.GetAttributeValue<string>("signupoutlookdownloadfwlink");
			}
			set
			{
				this.OnPropertyChanging("CRMForOutlookDownloadURL");
				this.SetAttributeValue("signupoutlookdownloadfwlink", value);
				this.OnPropertyChanged("CRMForOutlookDownloadURL");
			}
		}
		
		/// <summary>
		/// XML string that defines the navigation structure for the application.
		/// </summary>
		[AttributeLogicalNameAttribute("sitemapxml")]
		[System.ObsoleteAttribute()]
		public string SiteMapXML
		{
			get
			{
				return this.GetAttributeValue<string>("sitemapxml");
			}
			set
			{
				this.OnPropertyChanging("SiteMapXML");
				this.SetAttributeValue("sitemapxml", value);
				this.OnPropertyChanged("SiteMapXML");
			}
		}
		
		/// <summary>
		/// Contains the on hold case status values.
		/// </summary>
		[AttributeLogicalNameAttribute("slapausestates")]
		public string SLAPauseStates
		{
			get
			{
				return this.GetAttributeValue<string>("slapausestates");
			}
			set
			{
				this.OnPropertyChanging("SLAPauseStates");
				this.SetAttributeValue("slapausestates", value);
				this.OnPropertyChanged("SLAPauseStates");
			}
		}
		
		/// <summary>
		/// Flag for whether the organization is using Social Insights.
		/// </summary>
		[AttributeLogicalNameAttribute("socialinsightsenabled")]
		public Nullable<bool> SocialInsightsEnabled
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("socialinsightsenabled");
			}
			set
			{
				this.OnPropertyChanging("SocialInsightsEnabled");
				this.SetAttributeValue("socialinsightsenabled", value);
				this.OnPropertyChanged("SocialInsightsEnabled");
			}
		}
		
		/// <summary>
		/// Identifier for the Social Insights instance for the organization.
		/// </summary>
		[AttributeLogicalNameAttribute("socialinsightsinstance")]
		public string SocialInsightsInstanceIdentifier
		{
			get
			{
				return this.GetAttributeValue<string>("socialinsightsinstance");
			}
			set
			{
				this.OnPropertyChanging("SocialInsightsInstanceIdentifier");
				this.SetAttributeValue("socialinsightsinstance", value);
				this.OnPropertyChanged("SocialInsightsInstanceIdentifier");
			}
		}
		
		/// <summary>
		/// Flag for whether the organization has accepted the Social Insights terms of use.
		/// </summary>
		[AttributeLogicalNameAttribute("socialinsightstermsaccepted")]
		public Nullable<bool> SocialInsightsTermsOfUse
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("socialinsightstermsaccepted");
			}
			set
			{
				this.OnPropertyChanging("SocialInsightsTermsOfUse");
				this.SetAttributeValue("socialinsightstermsaccepted", value);
				this.OnPropertyChanged("SocialInsightsTermsOfUse");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[AttributeLogicalNameAttribute("sortid")]
		public Nullable<int> Sort
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("sortid");
			}
			set
			{
				this.OnPropertyChanging("Sort");
				this.SetAttributeValue("sortid", value);
				this.OnPropertyChanged("Sort");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[AttributeLogicalNameAttribute("sqlaccessgroupid")]
		public Nullable<Guid> SQLAccessGroup
		{
			get
			{
				return this.GetAttributeValue<Nullable<Guid>>("sqlaccessgroupid");
			}
			set
			{
				this.OnPropertyChanging("SQLAccessGroup");
				this.SetAttributeValue("sqlaccessgroupid", value);
				this.OnPropertyChanged("SQLAccessGroup");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[AttributeLogicalNameAttribute("sqlaccessgroupname")]
		public string SQLAccessGroupName
		{
			get
			{
				return this.GetAttributeValue<string>("sqlaccessgroupname");
			}
			set
			{
				this.OnPropertyChanging("SQLAccessGroupName");
				this.SetAttributeValue("sqlaccessgroupname", value);
				this.OnPropertyChanged("SQLAccessGroupName");
			}
		}
		
		/// <summary>
		/// Setting for SQM data collection, 0 no, 1 yes enabled
		/// </summary>
		[AttributeLogicalNameAttribute("sqmenabled")]
		public Nullable<bool> IsSQMEnabled
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("sqmenabled");
			}
			set
			{
				this.OnPropertyChanging("IsSQMEnabled");
				this.SetAttributeValue("sqmenabled", value);
				this.OnPropertyChanged("IsSQMEnabled");
			}
		}
		
		/// <summary>
		/// Unique identifier of the support user for the organization.
		/// </summary>
		[AttributeLogicalNameAttribute("supportuserid")]
		public Nullable<Guid> SupportUser
		{
			get
			{
				return this.GetAttributeValue<Nullable<Guid>>("supportuserid");
			}
			set
			{
				this.OnPropertyChanging("SupportUser");
				this.SetAttributeValue("supportuserid", value);
				this.OnPropertyChanged("SupportUser");
			}
		}
		
		/// <summary>
		/// Indicates whether SLA is suppressed.
		/// </summary>
		[AttributeLogicalNameAttribute("suppresssla")]
		public Nullable<bool> IsSLASuppressed
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("suppresssla");
			}
			set
			{
				this.OnPropertyChanging("IsSLASuppressed");
				this.SetAttributeValue("suppresssla", value);
				this.OnPropertyChanged("IsSLASuppressed");
			}
		}
		
		/// <summary>
		/// Number of records to update per operation in Sync Bulk Pause/Resume/Cancel
		/// </summary>
		[AttributeLogicalNameAttribute("syncbulkoperationbatchsize")]
		public Nullable<int> NumberOfRecordsToUpdatePerOperationInSyncBulkPauseResumeCancel
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("syncbulkoperationbatchsize");
			}
			set
			{
				this.OnPropertyChanging("NumberOfRecordsToUpdatePerOperationInSyncBulkPauseResumeCancel");
				this.SetAttributeValue("syncbulkoperationbatchsize", value);
				this.OnPropertyChanged("NumberOfRecordsToUpdatePerOperationInSyncBulkPauseResumeCancel");
			}
		}
		
		/// <summary>
		/// Max total number of records to update in database for Sync Bulk Pause/Resume/Cancel
		/// </summary>
		[AttributeLogicalNameAttribute("syncbulkoperationmaxlimit")]
		public Nullable<int> MaxTotalNumberOfRecordsToUpdateInDatabaseForSyncBulkPauseResumeCancel
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("syncbulkoperationmaxlimit");
			}
			set
			{
				this.OnPropertyChanging("MaxTotalNumberOfRecordsToUpdateInDatabaseForSyncBulkPauseResumeCancel");
				this.SetAttributeValue("syncbulkoperationmaxlimit", value);
				this.OnPropertyChanged("MaxTotalNumberOfRecordsToUpdateInDatabaseForSyncBulkPauseResumeCancel");
			}
		}
		
		/// <summary>
		/// Indicates the selection to use the dynamics 365 azure sync framework or server side sync.
		/// </summary>
		[AttributeLogicalNameAttribute("syncoptinselection")]
		public Nullable<bool> EnableDynamicsThreeHundredAndSixtyFiveAzureSyncFrameworkForThisOrganization
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("syncoptinselection");
			}
			set
			{
				this.OnPropertyChanging("EnableDynamicsThreeHundredAndSixtyFiveAzureSyncFrameworkForThisOrganization");
				this.SetAttributeValue("syncoptinselection", value);
				this.OnPropertyChanged("EnableDynamicsThreeHundredAndSixtyFiveAzureSyncFrameworkForThisOrganization");
			}
		}
		
		/// <summary>
		/// Indicates the status of the opt-in or opt-out operation for dynamics 365 azure sync.
		/// </summary>
		[AttributeLogicalNameAttribute("syncoptinselectionstatus")]
		public OptionSetValue StatusOfOptInOrOptOutOperationForDynamicsThreeHundredAndSixtyFiveAzureSync
		{
			get
			{
				return this.GetAttributeValue<OptionSetValue>("syncoptinselectionstatus");
			}
			set
			{
				this.OnPropertyChanging("StatusOfOptInOrOptOutOperationForDynamicsThreeHundredAndSixtyFiveAzureSync");
				this.SetAttributeValue("syncoptinselectionstatus", value);
				this.OnPropertyChanged("StatusOfOptInOrOptOutOperationForDynamicsThreeHundredAndSixtyFiveAzureSync");
			}
		}
		
		/// <summary>
		/// Unique identifier of the system user for the organization.
		/// </summary>
		[AttributeLogicalNameAttribute("systemuserid")]
		public Nullable<Guid> SystemUser
		{
			get
			{
				return this.GetAttributeValue<Nullable<Guid>>("systemuserid");
			}
			set
			{
				this.OnPropertyChanging("SystemUser");
				this.SetAttributeValue("systemuserid", value);
				this.OnPropertyChanged("SystemUser");
			}
		}
		
		/// <summary>
		/// Maximum number of aggressive polling cycles executed for email auto-tagging when a new email is received.
		/// </summary>
		[AttributeLogicalNameAttribute("tagmaxaggressivecycles")]
		public Nullable<int> AutoTagMaxCycles
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("tagmaxaggressivecycles");
			}
			set
			{
				this.OnPropertyChanging("AutoTagMaxCycles");
				this.SetAttributeValue("tagmaxaggressivecycles", value);
				this.OnPropertyChanged("AutoTagMaxCycles");
			}
		}
		
		/// <summary>
		/// Normal polling frequency used for email receive auto-tagging in outlook.
		/// </summary>
		[AttributeLogicalNameAttribute("tagpollingperiod")]
		public Nullable<int> AutoTagInterval
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("tagpollingperiod");
			}
			set
			{
				this.OnPropertyChanging("AutoTagInterval");
				this.SetAttributeValue("tagpollingperiod", value);
				this.OnPropertyChanged("AutoTagInterval");
			}
		}
		
		/// <summary>
		/// Select whether to turn on task flows for the organization.
		/// </summary>
		[AttributeLogicalNameAttribute("taskbasedflowenabled")]
		public Nullable<bool> EnableTaskFlowProcessesForThisOrganization
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("taskbasedflowenabled");
			}
			set
			{
				this.OnPropertyChanging("EnableTaskFlowProcessesForThisOrganization");
				this.SetAttributeValue("taskbasedflowenabled", value);
				this.OnPropertyChanged("EnableTaskFlowProcessesForThisOrganization");
			}
		}
		
		/// <summary>
		/// Select whether to turn on text analytics for the organization.
		/// </summary>
		[AttributeLogicalNameAttribute("textanalyticsenabled")]
		public Nullable<bool> EnableTextAnalyticsForThisOrganization
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("textanalyticsenabled");
			}
			set
			{
				this.OnPropertyChanging("EnableTextAnalyticsForThisOrganization");
				this.SetAttributeValue("textanalyticsenabled", value);
				this.OnPropertyChanged("EnableTextAnalyticsForThisOrganization");
			}
		}
		
		/// <summary>
		/// Information that specifies how the time is displayed throughout Microsoft CRM.
		/// </summary>
		[AttributeLogicalNameAttribute("timeformatcode")]
		public OptionSetValue TimeFormatCode
		{
			get
			{
				return this.GetAttributeValue<OptionSetValue>("timeformatcode");
			}
			set
			{
				this.OnPropertyChanging("TimeFormatCode");
				this.SetAttributeValue("timeformatcode", value);
				this.OnPropertyChanged("TimeFormatCode");
			}
		}
		
		/// <summary>
		/// Text for how time is displayed in Microsoft Dynamics 365.
		/// </summary>
		[AttributeLogicalNameAttribute("timeformatstring")]
		public string TimeFormatString
		{
			get
			{
				return this.GetAttributeValue<string>("timeformatstring");
			}
			set
			{
				this.OnPropertyChanging("TimeFormatString");
				this.SetAttributeValue("timeformatstring", value);
				this.OnPropertyChanged("TimeFormatString");
			}
		}
		
		/// <summary>
		/// Text for how the time separator is displayed throughout Microsoft Dynamics 365.
		/// </summary>
		[AttributeLogicalNameAttribute("timeseparator")]
		public string TimeSeparator
		{
			get
			{
				return this.GetAttributeValue<string>("timeseparator");
			}
			set
			{
				this.OnPropertyChanging("TimeSeparator");
				this.SetAttributeValue("timeseparator", value);
				this.OnPropertyChanged("TimeSeparator");
			}
		}
		
		/// <summary>
		/// Duration used for token expiration.
		/// </summary>
		[AttributeLogicalNameAttribute("tokenexpiry")]
		public Nullable<int> TokenExpirationDuration
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("tokenexpiry");
			}
			set
			{
				this.OnPropertyChanging("TokenExpirationDuration");
				this.SetAttributeValue("tokenexpiry", value);
				this.OnPropertyChanged("TokenExpirationDuration");
			}
		}
		
		/// <summary>
		/// History list of tracking token prefixes.
		/// </summary>
		[AttributeLogicalNameAttribute("trackingprefix")]
		public string TrackingPrefix
		{
			get
			{
				return this.GetAttributeValue<string>("trackingprefix");
			}
			set
			{
				this.OnPropertyChanging("TrackingPrefix");
				this.SetAttributeValue("trackingprefix", value);
				this.OnPropertyChanged("TrackingPrefix");
			}
		}
		
		/// <summary>
		/// Base number used to provide separate tracking token identifiers to users belonging to different deployments.
		/// </summary>
		[AttributeLogicalNameAttribute("trackingtokenidbase")]
		public Nullable<int> TrackingTokenBase
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("trackingtokenidbase");
			}
			set
			{
				this.OnPropertyChanging("TrackingTokenBase");
				this.SetAttributeValue("trackingtokenidbase", value);
				this.OnPropertyChanged("TrackingTokenBase");
			}
		}
		
		/// <summary>
		/// Number of digits used to represent a tracking token identifier.
		/// </summary>
		[AttributeLogicalNameAttribute("trackingtokeniddigits")]
		public Nullable<int> TrackingTokenDigits
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("trackingtokeniddigits");
			}
			set
			{
				this.OnPropertyChanging("TrackingTokenDigits");
				this.SetAttributeValue("trackingtokeniddigits", value);
				this.OnPropertyChanged("TrackingTokenDigits");
			}
		}
		
		/// <summary>
		/// Number of characters appended to invoice, quote, and order numbers.
		/// </summary>
		[AttributeLogicalNameAttribute("uniquespecifierlength")]
		public Nullable<int> UniqueStringLength
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("uniquespecifierlength");
			}
			set
			{
				this.OnPropertyChanging("UniqueStringLength");
				this.SetAttributeValue("uniquespecifierlength", value);
				this.OnPropertyChanged("UniqueStringLength");
			}
		}
		
		/// <summary>
		/// Indicates whether email address should be unresolved if multiple matches are found
		/// </summary>
		[AttributeLogicalNameAttribute("unresolveemailaddressifmultiplematch")]
		public Nullable<bool> SetToCcBccFieldsAsUnresolvedIfMultipleMatchesAreFound
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("unresolveemailaddressifmultiplematch");
			}
			set
			{
				this.OnPropertyChanging("SetToCcBccFieldsAsUnresolvedIfMultipleMatchesAreFound");
				this.SetAttributeValue("unresolveemailaddressifmultiplematch", value);
				this.OnPropertyChanged("SetToCcBccFieldsAsUnresolvedIfMultipleMatchesAreFound");
			}
		}
		
		/// <summary>
		/// Flag indicates whether to Use Inbuilt Rule For DefaultPricelist.
		/// </summary>
		[AttributeLogicalNameAttribute("useinbuiltrulefordefaultpricelistselection")]
		public Nullable<bool> UseInbuiltRuleForDefaultPricelistSelection
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("useinbuiltrulefordefaultpricelistselection");
			}
			set
			{
				this.OnPropertyChanging("UseInbuiltRuleForDefaultPricelistSelection");
				this.SetAttributeValue("useinbuiltrulefordefaultpricelistselection", value);
				this.OnPropertyChanged("UseInbuiltRuleForDefaultPricelistSelection");
			}
		}
		
		/// <summary>
		/// Select whether to use legacy form rendering.
		/// </summary>
		[AttributeLogicalNameAttribute("uselegacyrendering")]
		public Nullable<bool> LegacyFormRendering
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("uselegacyrendering");
			}
			set
			{
				this.OnPropertyChanging("LegacyFormRendering");
				this.SetAttributeValue("uselegacyrendering", value);
				this.OnPropertyChanged("LegacyFormRendering");
			}
		}
		
		/// <summary>
		/// Use position hierarchy
		/// </summary>
		[AttributeLogicalNameAttribute("usepositionhierarchy")]
		public Nullable<bool> UsePositionHierarchy
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("usepositionhierarchy");
			}
			set
			{
				this.OnPropertyChanging("UsePositionHierarchy");
				this.SetAttributeValue("usepositionhierarchy", value);
				this.OnPropertyChanged("UsePositionHierarchy");
			}
		}
		
		/// <summary>
		/// The interval at which user access is checked for auditing.
		/// </summary>
		[AttributeLogicalNameAttribute("useraccessauditinginterval")]
		public Nullable<int> UserAuthenticationAuditingInterval
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("useraccessauditinginterval");
			}
			set
			{
				this.OnPropertyChanging("UserAuthenticationAuditingInterval");
				this.SetAttributeValue("useraccessauditinginterval", value);
				this.OnPropertyChanged("UserAuthenticationAuditingInterval");
			}
		}
		
		/// <summary>
		/// Indicates whether the read-optimized form should be enabled for this organization.
		/// </summary>
		[AttributeLogicalNameAttribute("usereadform")]
		public Nullable<bool> UseReadOptimizedForm
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("usereadform");
			}
			set
			{
				this.OnPropertyChanging("UseReadOptimizedForm");
				this.SetAttributeValue("usereadform", value);
				this.OnPropertyChanged("UseReadOptimizedForm");
			}
		}
		
		/// <summary>
		/// Unique identifier of the default group of users in the organization.
		/// </summary>
		[AttributeLogicalNameAttribute("usergroupid")]
		public Nullable<Guid> UserGroup
		{
			get
			{
				return this.GetAttributeValue<Nullable<Guid>>("usergroupid");
			}
			set
			{
				this.OnPropertyChanging("UserGroup");
				this.SetAttributeValue("usergroupid", value);
				this.OnPropertyChanged("UserGroup");
			}
		}
		
		/// <summary>
		/// Indicates default protocol selected for organization.
		/// </summary>
		[AttributeLogicalNameAttribute("useskypeprotocol")]
		public Nullable<bool> UserSkypeProtocol
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("useskypeprotocol");
			}
			set
			{
				this.OnPropertyChanging("UserSkypeProtocol");
				this.SetAttributeValue("useskypeprotocol", value);
				this.OnPropertyChanged("UserSkypeProtocol");
			}
		}
		
		/// <summary>
		/// Hash of the V3 callout configuration file.
		/// </summary>
		[AttributeLogicalNameAttribute("v3calloutconfighash")]
		public string VThreeCalloutHash
		{
			get
			{
				return this.GetAttributeValue<string>("v3calloutconfighash");
			}
		}
		
		/// <summary>
		/// Hash value of web resources.
		/// </summary>
		[AttributeLogicalNameAttribute("webresourcehash")]
		public string WebResourceHash
		{
			get
			{
				return this.GetAttributeValue<string>("webresourcehash");
			}
			set
			{
				this.OnPropertyChanging("WebResourceHash");
				this.SetAttributeValue("webresourcehash", value);
				this.OnPropertyChanged("WebResourceHash");
			}
		}
		
		/// <summary>
		/// Designated first day of the week throughout Microsoft Dynamics 365.
		/// </summary>
		[AttributeLogicalNameAttribute("weekstartdaycode")]
		public OptionSetValue WeekStartDayCode
		{
			get
			{
				return this.GetAttributeValue<OptionSetValue>("weekstartdaycode");
			}
			set
			{
				this.OnPropertyChanging("WeekStartDayCode");
				this.SetAttributeValue("weekstartdaycode", value);
				this.OnPropertyChanged("WeekStartDayCode");
			}
		}
		
		/// <summary>
		/// For Internal use only.
		/// </summary>
		[AttributeLogicalNameAttribute("widgetproperties")]
		public string WidgetProperties
		{
			get
			{
				return this.GetAttributeValue<string>("widgetproperties");
			}
			set
			{
				this.OnPropertyChanging("WidgetProperties");
				this.SetAttributeValue("widgetproperties", value);
				this.OnPropertyChanged("WidgetProperties");
			}
		}
		
		/// <summary>
		/// Denotes the Yammer group ID
		/// </summary>
		[AttributeLogicalNameAttribute("yammergroupid")]
		public Nullable<int> YammerGroupId
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("yammergroupid");
			}
			set
			{
				this.OnPropertyChanging("YammerGroupId");
				this.SetAttributeValue("yammergroupid", value);
				this.OnPropertyChanged("YammerGroupId");
			}
		}
		
		/// <summary>
		/// Denotes the Yammer network permalink
		/// </summary>
		[AttributeLogicalNameAttribute("yammernetworkpermalink")]
		public string YammerNetworkPermalink
		{
			get
			{
				return this.GetAttributeValue<string>("yammernetworkpermalink");
			}
			set
			{
				this.OnPropertyChanging("YammerNetworkPermalink");
				this.SetAttributeValue("yammernetworkpermalink", value);
				this.OnPropertyChanged("YammerNetworkPermalink");
			}
		}
		
		/// <summary>
		/// Denotes whether the OAuth access token for Yammer network has expired
		/// </summary>
		[AttributeLogicalNameAttribute("yammeroauthaccesstokenexpired")]
		public Nullable<bool> YammerOAuthAccessTokenExpired
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("yammeroauthaccesstokenexpired");
			}
			set
			{
				this.OnPropertyChanging("YammerOAuthAccessTokenExpired");
				this.SetAttributeValue("yammeroauthaccesstokenexpired", value);
				this.OnPropertyChanged("YammerOAuthAccessTokenExpired");
			}
		}
		
		/// <summary>
		/// Internal Use Only
		/// </summary>
		[AttributeLogicalNameAttribute("yammerpostmethod")]
		public OptionSetValue InternalUseOnly
		{
			get
			{
				return this.GetAttributeValue<OptionSetValue>("yammerpostmethod");
			}
			set
			{
				this.OnPropertyChanging("InternalUseOnly");
				this.SetAttributeValue("yammerpostmethod", value);
				this.OnPropertyChanged("InternalUseOnly");
			}
		}
		
		/// <summary>
		/// Information that specifies how the first week of the year is specified in Microsoft Dynamics 365.
		/// </summary>
		[AttributeLogicalNameAttribute("yearstartweekcode")]
		public Nullable<int> YearStartWeekCode
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("yearstartweekcode");
			}
			set
			{
				this.OnPropertyChanging("YearStartWeekCode");
				this.SetAttributeValue("yearstartweekcode", value);
				this.OnPropertyChanged("YearStartWeekCode");
			}
		}
		
		public struct Fields
		{
			
			public static string ACITenantURL = "aciwebendpointurl";
			
			public static string AcknowledgementTemplate = "acknowledgementtemplateid";
			
			public static string AllowAddressBookSynchronization = "allowaddressbooksyncs";
			
			public static string AllowAutomaticResponseCreation = "allowautoresponsecreation";
			
			public static string AllowAutomaticUnsubscribe = "allowautounsubscribe";
			
			public static string AllowAutomaticUnsubscribeAcknowledgement = "allowautounsubscribeacknowledgement";
			
			public static string AllowOutlookClientMessageBarAdvertisement = "allowclientmessagebarad";
			
			public static string AllowEntityLevelAuditing = "allowentityonlyaudit";
			
			public static string EnableAccessToLegacyWebClientUI = "allowlegacyclientexperience";
			
			public static string EnableEmbeddingOfCertainLegacyDialogsInUnifiedInterfaceBrowserClient = "allowlegacydialogsembedding";
			
			public static string AllowMarketingEmailExecution = "allowmarketingemailexecution";
			
			public static string AllowOfflineScheduledSynchronization = "allowofflinescheduledsyncs";
			
			public static string AllowScheduledSynchronization = "allowoutlookscheduledsyncs";
			
			public static string AllowUnresolvedAddressEmailSend = "allowunresolvedpartiesonemailsend";
			
			public static string AllowUserFormModePreference = "allowuserformmodepreference";
			
			public static string AllowTheShowingTabletApplicationNotificationBarsInABrowser = "allowusersseeappdownloadmessage";
			
			public static string AllowExportToExcel = "allowwebexcelexport";
			
			public static string AMDesignator = "amdesignator";
			
			public static string EnableAppDesignerExperienceForThisOrganization = "appdesignerexperienceenabled";
			
			public static string EnableRichEditingExperienceForAppointment = "appointmentricheditorexperience";
			
			public static string AutoApplyDefaultEntitlementOnCaseCreate = "autoapplydefaultoncasecreate";
			
			public static string AutoApplyDefaultEntitlementOnCaseUpdate = "autoapplydefaultoncaseupdate";
			
			public static string IsAutoApplySLAAfterManuallyOverRiding = "autoapplysla";
			
			public static string ForInternalUseOnly = "azureschedulerjobcollectionname";
			
			public static string Currency = "basecurrencyid";
			
			public static string BaseCurrencyPrecision = "basecurrencyprecision";
			
			public static string BaseCurrencySymbol = "basecurrencysymbol";
			
			public static string BingMapsAPIKey = "bingmapsapikey";
			
			public static string BlockAttachments = "blockedattachments";
			
			public static string DisplayCardsInExpandedStateForInteractiveDashboard = "bounddashboarddefaultcardexpanded";
			
			public static string BulkOperationPrefix = "bulkoperationprefix";
			
			public static string BusinessClosureCalendar = "businessclosurecalendarid";
			
			public static string CalendarType = "calendartype";
			
			public static string CampaignPrefix = "campaignprefix";
			
			public static string CascadeStatusUpdate = "cascadestatusupdate";
			
			public static string CasePrefix = "caseprefix";
			
			public static string CategoryPrefix = "categoryprefix";
			
			public static string ClientFeatureSet = "clientfeatureset";
			
			public static string ContentSecurityPolicyConfiguration = "contentsecuritypolicyconfiguration";
			
			public static string ContractPrefix = "contractprefix";
			
			public static string EnableCortanaProactiveExperienceFlowProcessesForThisOrganization = "cortanaproactiveexperienceenabled";
			
			public static string CreatedBy = "createdby";
			
			public static string CreatedOn = "createdon";
			
			public static string EnableActiveInitialProductState = "createproductswithoutparentinactivestate";
			
			public static string CurrencyDecimalPrecision = "currencydecimalprecision";
			
			public static string DisplayCurrenciesUsing = "currencydisplayoption";
			
			public static string CurrencyFormatCode = "currencyformatcode";
			
			public static string CurrencySymbol = "currencysymbol";
			
			public static string CurrentBulkOperationNumber = "currentbulkoperationnumber";
			
			public static string CurrentCampaignNumber = "currentcampaignnumber";
			
			public static string CurrentCaseNumber = "currentcasenumber";
			
			public static string CurrentCategoryNumber = "currentcategorynumber";
			
			public static string CurrentContractNumber = "currentcontractnumber";
			
			public static string CurrentImportSequenceNumber = "currentimportsequencenumber";
			
			public static string CurrentInvoiceNumber = "currentinvoicenumber";
			
			public static string CurrentKnowledgeArticleNumber = "currentkanumber";
			
			public static string CurrentArticleNumber = "currentkbnumber";
			
			public static string CurrentOrderNumber = "currentordernumber";
			
			public static string CurrentParsedTableNumber = "currentparsedtablenumber";
			
			public static string CurrentQuoteNumber = "currentquotenumber";
			
			public static string DateFormatCode = "dateformatcode";
			
			public static string DateFormatString = "dateformatstring";
			
			public static string DateSeparator = "dateseparator";
			
			public static string MaxValueOfDaysSinceRecordLastModified = "dayssincerecordlastmodifiedmaxvalue";
			
			public static string DecimalSymbol = "decimalsymbol";
			
			public static string DefaultCountryCode = "defaultcountrycode";
			
			public static string NameOfTheDefaultApp = "defaultcrmcustomname";
			
			public static string EmailServerProfile = "defaultemailserverprofileid";
			
			public static string DefaultEmailSettings = "defaultemailsettings";
			
			public static string DefaultMobileOfflineProfile = "defaultmobileofflineprofileid";
			
			public static string DefaultRecurrenceEndRangeType = "defaultrecurrenceendrangetype";
			
			public static string DefaultThemeData = "defaultthemedata";
			
			public static string DelegatedAdmin = "delegatedadminuserid";
			
			public static string DisabledReason = "disabledreason";
			
			public static string IsSocialCareDisabled = "disablesocialcare";
			
			public static string DiscountCalculationMethod = "discountcalculationmethod";
			
			public static string DisplayNavigationTour = "displaynavigationtour";
			
			public static string EmailConnectionChannel = "emailconnectionchannel";
			
			public static string UseEmailCorrelation = "emailcorrelationenabled";
			
			public static string EmailSendPollingFrequency = "emailsendpollingperiod";
			
			public static string EnableIntegrationWithBingMaps = "enablebingmapsintegration";
			
			public static string EnableIntegrationWithImmersiveSkype = "enableimmersiveskypeintegration";
			
			public static string IndicatesWhetherTheUserHasEnabledOrDisabledLivePersonaCardFeatureInUCI = "enablelivepersonacarduci";
			
			public static string IndicatesWhetherTheUserHasEnabledOrDisabledLivePersonCardIntegrationInOffice = "enablelivepersoncardintegrationinoffice";
			
			public static string EnableLearningPathAuthoring = "enablelpauthoring";
			
			public static string EnableIntegrationWithMicrosoftFlow = "enablemicrosoftflowintegration";
			
			public static string EnablePricingOnCreate = "enablepricingoncreate";
			
			public static string EnableSmartMatching = "enablesmartmatching";
			
			public static string EnableSiteMapAndCommandingUpdate = "enableunifiedinterfaceshellrefresh";
			
			public static string OrganizationSettingToEnforceReadOnlyPlugins = "enforcereadonlyplugins";
			
			public static string EntityImageId = "entityimageid";
			
			public static string DaysToExpireChangeTrackingDeletedRecords = "expirechangetrackingindays";
			
			public static string DaysToExpireSubscriptions = "expiresubscriptionsindays";
			
			public static string ExternalBaseURL = "externalbaseurl";
			
			public static string ExternalPartyEnabledEntitiesCorrelationKeys = "externalpartycorrelationkeys";
			
			public static string ExternalPartyEnabledEntitiesSettingsForInternalUseOnly = "externalpartyentitysettings";
			
			public static string FeatureSet = "featureset";
			
			public static string FiscalCalendarStart = "fiscalcalendarstart";
			
			public static string FiscalPeriodFormat = "fiscalperiodformat";
			
			public static string FormatForFiscalPeriod = "fiscalperiodformatperiod";
			
			public static string FiscalPeriodType = "fiscalperiodtype";
			
			public static string IsFiscalSettingsUpdated = "fiscalsettingsupdated";
			
			public static string FiscalYearDisplay = "fiscalyeardisplaycode";
			
			public static string FiscalYearFormat = "fiscalyearformat";
			
			public static string PrefixForFiscalYear = "fiscalyearformatprefix";
			
			public static string SuffixForFiscalYear = "fiscalyearformatsuffix";
			
			public static string FiscalYearFormatYear = "fiscalyearformatyear";
			
			public static string FiscalYearPeriodConnector = "fiscalyearperiodconnect";
			
			public static string FullNameDisplayOrder = "fullnameconventioncode";
			
			public static string FutureExpansionWindow = "futureexpansionwindow";
			
			public static string GenerateAlertsForErrors = "generatealertsforerrors";
			
			public static string GenerateAlertsForInformation = "generatealertsforinformation";
			
			public static string GenerateAlertsForWarnings = "generatealertsforwarnings";
			
			public static string IsGetStartedPaneContentEnabled = "getstartedpanecontentenabled";
			
			public static string IsAppendUrlParametersEnabled = "globalappendurlparametersenabled";
			
			public static string GlobalHelpURL = "globalhelpurl";
			
			public static string IsCustomizableGlobalHelpEnabled = "globalhelpurlenabled";
			
			public static string RollupExpirationTimeForGoal = "goalrollupexpirytime";
			
			public static string AutomaticRollupFrequencyForGoal = "goalrollupfrequency";
			
			public static string GrantAccessToNetworkService = "grantaccesstonetworkservice";
			
			public static string HashDeltaSubjectCount = "hashdeltasubjectcount";
			
			public static string HashFilterKeywords = "hashfilterkeywords";
			
			public static string HashMaxCount = "hashmaxcount";
			
			public static string HashMinAddressCount = "hashminaddresscount";
			
			public static string HighContrastThemeData = "highcontrastthemedata";
			
			public static string IgnoreInternalEmail = "ignoreinternalemail";
			
			public static string InactivityTimeoutEnabled = "inactivitytimeoutenabled";
			
			public static string InactivityTimeoutInMinutes = "inactivitytimeoutinmins";
			
			public static string InactivityTimeoutReminderInMinutes = "inactivitytimeoutreminderinmins";
			
			public static string ExchangeEmailRetrievalBatchSize = "incomingemailexchangeemailretrievalbatchsize";
			
			public static string InitialVersion = "initialversion";
			
			public static string IntegrationUser = "integrationuserid";
			
			public static string InvoicePrefix = "invoiceprefix";
			
			public static string EnableActionCardForThisOrganization = "isactioncardenabled";
			
			public static string ActionSupportFeatureEnabled = "isactionsupportfeatureenabled";
			
			public static string EnableRelationshipAnalyticsForThisOrganization = "isactivityanalysisenabled";
			
			public static string IsApplicationModeEnabled = "isappmode";
			
			public static string IsAttachmentSyncEnabled = "isappointmentattachmentsyncenabled";
			
			public static string IsAssignedTasksSyncEnabled = "isassignedtaskssyncenabled";
			
			public static string IsAuditingEnabled = "isauditenabled";
			
			public static string EnableAutoCaptureForThisOrganization = "isautodatacaptureenabled";
			
			public static string AutoSaveEnabled = "isautosaveenabled";
			
			public static string BPFEntityCustomizationFeatureEnabled = "isbpfentitycustomizationfeatureenabled";
			
			public static string IsConflictDetectionForMobileClientEnabled = "isconflictdetectionenabledformobileclient";
			
			public static string IsMailingAddressSyncEnabled = "iscontactmailingaddresssyncenabled";
			
			public static string EnableContentSecurityPolicyForThisOrganization = "iscontentsecuritypolicyenabled";
			
			public static string IndicatesWhetherContextualEmailExperienceIsEnabledOnThisOrganization = "iscontextualemailenabled";
			
			public static string EnableCustomControlsInCanvasPowerAppsFeatureForThisOrganization = "iscustomcontrolsincanvasappsenabled";
			
			public static string EnableOrDisableCountryCodeSelection = "isdefaultcountrycodecheckenabled";
			
			public static string IsDelegationAccessEnabled = "isdelegateaccessenabled";
			
			public static string EnableActionHubForThisOrganization = "isdelveactionhubintegrationenabled";
			
			public static string IsOrganizationDisabled = "isdisabled";
			
			public static string IsDuplicateDetectionEnabled = "isduplicatedetectionenabled";
			
			public static string IsDuplicateDetectionEnabledForImport = "isduplicatedetectionenabledforimport";
			
			public static string IsDuplicateDetectionEnabledForOfflineSynchronization = "isduplicatedetectionenabledforofflinesync";
			
			public static string IsDuplicateDetectionEnabledForOnlineCreateUpdate = "isduplicatedetectionenabledforonlinecreateupdate";
			
			public static string AllowTrackingRecipientActivityOnSentEmails = "isemailmonitoringallowed";
			
			public static string IsEmailServerProfileContentFilteringEnabled = "isemailserverprofilecontentfilteringenabled";
			
			public static string OptionSetValuesForIsenabledforallroles = "isenabledforallroles";
			
			public static string EnableExternalFileStorage = "isexternalfilestorageenabled";
			
			public static string EnableExternalSearchDataSyncing = "isexternalsearchindexenabled";
			
			public static string IsFiscalPeriodMonthly = "isfiscalperiodmonthbased";
			
			public static string AutomaticallyCreateFolders = "isfolderautocreatedonsp";
			
			public static string IsFolderBasedTrackingEnabled = "isfolderbasedtrackingenabled";
			
			public static string EnableFullTextSearchForQuickFind = "isfulltextsearchenabled";
			
			public static string EnableHierarchicalSecurityModel = "ishierarchicalsecuritymodelenabled";
			
			public static string LUISConsentForDynamicsThreeHundredAndSixtyFiveBot = "isluisenabledford365bot";
			
			public static string IsMailboxForcedUnlockingEnabled = "ismailboxforcedunlockingenabled";
			
			public static string IsMailboxKeepAliveEnabled = "ismailboxinactivebackoffenabled";
			
			public static string EnableManualSalesForecastingFeatureForThisOrganization = "ismanualsalesforecastingenabled";
			
			public static string IsMobileClientOnDemandSyncEnabled = "ismobileclientondemandsyncenabled";
			
			public static string EnableMobileOfflineForThisOrganization = "ismobileofflineenabled";
			
			public static string EnableMicrosoftTeamsCollaborationForThisOrganization = "ismsteamscollaborationenabled";
			
			public static string EnableMicrosoftTeamsIntegration = "ismsteamsenabled";
			
			public static string MicrosoftTeamsIntegrationChangedByUser = "ismsteamssettingchangedbyuser";
			
			public static string EnableMicrosoftTeamsUserSyncForThisOrganization = "ismsteamsusersyncenabled";
			
			public static string EnableNotesAnalysisForThisOrganization = "isnotesanalysisenabled";
			
			public static string EnableOfficeGraphForThisOrganization = "isofficegraphenabled";
			
			public static string EnableOneDriveForThisOrganization = "isonedriveenabled";
			
			public static string EnablePAIFeatureForThisOrganization = "ispaienabled";
			
			public static string EnablePDFGenerationFeatureForThisOrganization = "ispdfgenerationenabled";
			
			public static string PresenceEnabled = "ispresenceenabled";
			
			public static string EnablePreviewActionCardFeatureForThisOrganization = "ispreviewenabledforactioncard";
			
			public static string EnableAutoCaptureForThisOrganizationAtPreviewSettings = "ispreviewforautocaptureenabled";
			
			public static string AllowsPreviewForEmailMonitoring = "ispreviewforemailmonitoringallowed";
			
			public static string IndicatesWhetherPriceListIsMandatoryForAddingExistingProductsToSalesEntities = "ispricelistmandatory";
			
			public static string EnableQuickCreateFormForOpportunityCloseFeatureForThisOrganization = "isquickcreateenabledforopportunityclose";
			
			public static string IsReadAuditingEnabled = "isreadauditenabled";
			
			public static string EnableRelationshipInsightsForThisOrganization = "isrelationshipinsightsenabled";
			
			public static string ResourceBookingSynchronizationEnabled = "isresourcebookingexchangesyncenabled";
			
			public static string IsSalesOrderIntegrationEnabled = "issopintegrationenabled";
			
			public static string EnableTextWrap = "istextwrapenabled";
			
			public static string IsUserAccessAuditingEnabled = "isuseraccessauditenabled";
			
			public static string ISVIntegrationMode = "isvintegrationcode";
			
			public static string KnowledgeArticlePrefix = "kaprefix";
			
			public static string ArticlePrefix = "kbprefix";
			
			public static string KnowledgeManagementSettings = "kmsettings";
			
			public static string Language = "languagecode";
			
			public static string Locale = "localeid";
			
			public static string LongDateFormat = "longdateformatcode";
			
			public static string LowerThresholdForMailboxIntermittentIssue = "mailboxintermittentissueminrange";
			
			public static string LowerThresholdForMailboxPermanentIssue = "mailboxpermanentissueminrange";
			
			public static string MaximumNumberOfActionstepsAllowedInABPF = "maxactionstepsinbpf";
			
			public static string MaxAppointmentDuration = "maxappointmentdurationdays";
			
			public static string MaximumNumberOfConditionsAllowedForMobileOfflineFilters = "maxconditionsformobileofflinefilters";
			
			public static string MaximumDepthForHierarchySecurityPropagation = "maxdepthforhierarchicalsecuritymodel";
			
			public static string MaxFolderBasedTrackingMappings = "maxfolderbasedtrackingmappings";
			
			public static string MaximumActiveBusinessProcessFlowsPerEntity = "maximumactivebusinessprocessflowsallowedperentity";
			
			public static string ProductPropertiesItemLimit = "maximumdynamicpropertiesallowed";
			
			public static string MaximumNumberOfActiveSLAAllowedPerEntityInOnline = "maximumentitieswithactivesla";
			
			public static string MaximumNumberOfActiveSLAKPIAllowedPerEntityInOnline = "maximumslakpiperentitywithactivesla";
			
			public static string MaxTrackingNumber = "maximumtrackingnumber";
			
			public static string BundleItemLimit = "maxproductsinbundle";
			
			public static string MaxRecordsForExcelExport = "maxrecordsforexporttoexcel";
			
			public static string MaxRecordsFilterSelection = "maxrecordsforlookupfilters";
			
			public static string MaxSupportedIEVersion = "maxsupportedinternetexplorerversion";
			
			public static string MaxUploadFileSize = "maxuploadfilesize";
			
			public static string MaxNoOfMailboxesToEnableForVerboseLogging = "maxverboseloggingmailbox";
			
			public static string MaximumNumberOfSyncCyclesForWhichVerboseLoggingWillBeEnabledByDefault = "maxverboseloggingsynccycles";
			
			public static string EnvironmentSelectedForIntegrationWithMicrosoftFlow = "microsoftflowenvironment";
			
			public static string MinAddressSynchronizationFrequency = "minaddressbooksyncinterval";
			
			public static string MinOfflineSynchronizationFrequency = "minofflinesyncinterval";
			
			public static string MinSynchronizationFrequency = "minoutlooksyncinterval";
			
			public static string MinimumNumberOfUserLicenseRequiredForMobileOfflineServiceByProductionPreviewOrganization = "mobileofflineminlicenseprod";
			
			public static string MinimumNumberOfUserLicenseRequiredForMobileOfflineServiceByTrialOrganization = "mobileofflineminlicensetrial";
			
			public static string SyncIntervalForMobileOffline = "mobileofflinesyncinterval";
			
			public static string ModifiedBy = "modifiedby";
			
			public static string ModifiedOn = "modifiedon";
			
			public static string OrganizationName = "name";
			
			public static string NegativeCurrencyFormat = "negativecurrencyformatcode";
			
			public static string NegativeFormat = "negativeformatcode";
			
			public static string NextTrackingNumber = "nexttrackingnumber";
			
			public static string NotifyMailboxOwnerOfEmailServerLevelAlerts = "notifymailboxownerofemailserverlevelalerts";
			
			public static string NumberFormat = "numberformat";
			
			public static string NumberGroupingFormat = "numbergroupformat";
			
			public static string NumberSeparator = "numberseparator";
			
			public static string EnableOfficeAppsAutoDeploymentForThisOrganization = "officeappsautodeploymentenabled";
			
			public static string TheUrlToOpenTheDelve = "officegraphdelveurl";
			
			public static string EnableOOBPriceCalculation = "oobpricecalculationenabled";
			
			public static string OrderPrefix = "orderprefix";
			
			public static string OrganizationId = "organizationid";
			
			public static string Id = "organizationid";
			
			public static string OrganizationState = "organizationstate";
			
			public static string OrganizationDatabaseOrganizationSettings = "orgdborgsettings";
			
			public static string EnableOrgInsightsForThisOrganization = "orginsightsenabled";
			
			public static string ParsedTableColumnPrefix = "parsedtablecolumnprefix";
			
			public static string ParsedTablePrefix = "parsedtableprefix";
			
			public static string PastExpansionWindow = "pastexpansionwindow";
			
			public static string Picture = "picture";
			
			public static string PinpointLanguageCode = "pinpointlanguagecode";
			
			public static string PlugInTraceLogSetting = "plugintracelogsetting";
			
			public static string PMDesignator = "pmdesignator";
			
			public static string PostMessageWhitelistDomains = "postmessagewhitelistdomains";
			
			public static string EnablePowerBIFeatureForThisOrganization = "powerbifeatureenabled";
			
			public static string PricingDecimalPrecision = "pricingdecimalprecision";
			
			public static string PrivacyStatementURL = "privacystatementurl";
			
			public static string PrivilegeUserGroup = "privilegeusergroupid";
			
			public static string PrivilegeReportingGroup = "privreportinggroupid";
			
			public static string PrivilegeReportingGroupName = "privreportinggroupname";
			
			public static string EnableProductRecommendationsForThisOrganization = "productrecommendationsenabled";
			
			public static string QuickFindRecordLimitEnabled = "quickfindrecordlimitenabled";
			
			public static string QuotePrefix = "quoteprefix";
			
			public static string RecurrenceDefaultNumberOfOccurrences = "recurrencedefaultnumberofoccurrences";
			
			public static string RecurrenceExpansionJobBatchInterval = "recurrenceexpansionjobbatchinterval";
			
			public static string RecurrenceExpansionOnDemandJobBatchSize = "recurrenceexpansionjobbatchsize";
			
			public static string RecurrenceExpansionSynchronizationCreateMaximum = "recurrenceexpansionsynchcreatemax";
			
			public static string ReferenceSiteMapXML = "referencesitemapxml";
			
			public static string RenderSecureFrameForEmail = "rendersecureiframeforemail";
			
			public static string ReportingGroup = "reportinggroupid";
			
			public static string ReportingGroupName = "reportinggroupname";
			
			public static string ReportScriptErrors = "reportscripterrors";
			
			public static string IsApprovalForQueueEmailRequired = "requireapprovalforqueueemail";
			
			public static string IsApprovalForUserEmailRequired = "requireapprovalforuseremail";
			
			public static string ApplySameEmailAddressToAllUnresolvedMatchesWhenYouManuallyResolveItForOne = "resolvesimilarunresolvedemailaddress";
			
			public static string RestrictStatusUpdate = "restrictstatusupdate";
			
			public static string ErrorStatusOfRelationshipInsightsProvisioning = "rierrorstatus";
			
			public static string SampleDataImport = "sampledataimportid";
			
			public static string SchedulingEngineForAppointmentsAndServiceActivities = "schedulingengine";
			
			public static string CustomizationNamePrefix = "schemanameprefix";
			
			public static string ServeStaticContentFromCDN = "servestaticresourcesfromazurecdn";
			
			public static string SessionTimeoutEnabled = "sessiontimeoutenabled";
			
			public static string SessionTimeoutInMinutes = "sessiontimeoutinmins";
			
			public static string SessionTimeoutReminderInMinutes = "sessiontimeoutreminderinmins";
			
			public static string ChooseSharePointDeploymentType = "sharepointdeploymenttype";
			
			public static string ShareToPreviousOwnerOnAssign = "sharetopreviousowneronassign";
			
			public static string ShowKBArticleDeprecationMessageToUser = "showkbarticledeprecationnotification";
			
			public static string ShowWeekNumber = "showweeknumber";
			
			public static string CRMForOutlookDownloadURL = "signupoutlookdownloadfwlink";
			
			public static string SiteMapXML = "sitemapxml";
			
			public static string SLAPauseStates = "slapausestates";
			
			public static string SocialInsightsEnabled = "socialinsightsenabled";
			
			public static string SocialInsightsInstanceIdentifier = "socialinsightsinstance";
			
			public static string SocialInsightsTermsOfUse = "socialinsightstermsaccepted";
			
			public static string Sort = "sortid";
			
			public static string SQLAccessGroup = "sqlaccessgroupid";
			
			public static string SQLAccessGroupName = "sqlaccessgroupname";
			
			public static string IsSQMEnabled = "sqmenabled";
			
			public static string SupportUser = "supportuserid";
			
			public static string IsSLASuppressed = "suppresssla";
			
			public static string NumberOfRecordsToUpdatePerOperationInSyncBulkPauseResumeCancel = "syncbulkoperationbatchsize";
			
			public static string MaxTotalNumberOfRecordsToUpdateInDatabaseForSyncBulkPauseResumeCancel = "syncbulkoperationmaxlimit";
			
			public static string EnableDynamicsThreeHundredAndSixtyFiveAzureSyncFrameworkForThisOrganization = "syncoptinselection";
			
			public static string StatusOfOptInOrOptOutOperationForDynamicsThreeHundredAndSixtyFiveAzureSync = "syncoptinselectionstatus";
			
			public static string SystemUser = "systemuserid";
			
			public static string AutoTagMaxCycles = "tagmaxaggressivecycles";
			
			public static string AutoTagInterval = "tagpollingperiod";
			
			public static string EnableTaskFlowProcessesForThisOrganization = "taskbasedflowenabled";
			
			public static string EnableTextAnalyticsForThisOrganization = "textanalyticsenabled";
			
			public static string TimeFormatCode = "timeformatcode";
			
			public static string TimeFormatString = "timeformatstring";
			
			public static string TimeSeparator = "timeseparator";
			
			public static string TokenExpirationDuration = "tokenexpiry";
			
			public static string TrackingPrefix = "trackingprefix";
			
			public static string TrackingTokenBase = "trackingtokenidbase";
			
			public static string TrackingTokenDigits = "trackingtokeniddigits";
			
			public static string UniqueStringLength = "uniquespecifierlength";
			
			public static string SetToCcBccFieldsAsUnresolvedIfMultipleMatchesAreFound = "unresolveemailaddressifmultiplematch";
			
			public static string UseInbuiltRuleForDefaultPricelistSelection = "useinbuiltrulefordefaultpricelistselection";
			
			public static string LegacyFormRendering = "uselegacyrendering";
			
			public static string UsePositionHierarchy = "usepositionhierarchy";
			
			public static string UserAuthenticationAuditingInterval = "useraccessauditinginterval";
			
			public static string UseReadOptimizedForm = "usereadform";
			
			public static string UserGroup = "usergroupid";
			
			public static string UserSkypeProtocol = "useskypeprotocol";
			
			public static string VThreeCalloutHash = "v3calloutconfighash";
			
			public static string WebResourceHash = "webresourcehash";
			
			public static string WeekStartDayCode = "weekstartdaycode";
			
			public static string WidgetProperties = "widgetproperties";
			
			public static string YammerGroupId = "yammergroupid";
			
			public static string YammerNetworkPermalink = "yammernetworkpermalink";
			
			public static string YammerOAuthAccessTokenExpired = "yammeroauthaccesstokenexpired";
			
			public static string InternalUseOnly = "yammerpostmethod";
			
			public static string YearStartWeekCode = "yearstartweekcode";
		}
	}
}
