//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Aylos.Xrm.Sdk.BuildTools.Models.Domain
{
	using Microsoft.Xrm.Sdk;
	using Microsoft.Xrm.Sdk.Client;
	using System;
	using System.CodeDom.Compiler;
	using System.Collections.Generic;
	using System.ComponentModel;
	using System.Linq;
	using System.Runtime.Serialization;
	
	
	/// <summary>
	/// Web Page
	/// </summary>
	[DataContractAttribute()]
	[EntityLogicalNameAttribute("adx_webpage")]
	[GeneratedCodeAttribute("CrmSvcUtil", "9.0.0.9479")]
	public partial class WebPage : Entity, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public WebPage() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "adx_webpage";
		
		public const int EntityTypeCode = 10183;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Defines CORS header Access-Control-Allow-Origin for cross origin requests.
		/// </summary>
		[AttributeLogicalNameAttribute("adx_alloworigin")]
		public string AllowOrigin
		{
			get
			{
				return this.GetAttributeValue<string>("adx_alloworigin");
			}
			set
			{
				this.OnPropertyChanging("AllowOrigin");
				this.SetAttributeValue("adx_alloworigin", value);
				this.OnPropertyChanged("AllowOrigin");
			}
		}
		
		/// <summary>
		/// Unique identifier for Contact associated with Web Page.
		/// </summary>
		[AttributeLogicalNameAttribute("adx_authorid")]
		public EntityReference Author
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("adx_authorid");
			}
			set
			{
				this.OnPropertyChanging("Author");
				this.SetAttributeValue("adx_authorid", value);
				this.OnPropertyChanged("Author");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[AttributeLogicalNameAttribute("adx_category")]
		public Nullable<WebPageCategory> Category
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("adx_category");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (WebPageCategory)(Enum.ToObject(typeof(WebPageCategory), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("Category");
				if (value == null)
				{
					this.SetAttributeValue("adx_category", null);
				}
				else
				{
					this.SetAttributeValue("adx_category", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("Category");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[AttributeLogicalNameAttribute("adx_copy")]
		public string Copy
		{
			get
			{
				return this.GetAttributeValue<string>("adx_copy");
			}
			set
			{
				this.OnPropertyChanging("Copy");
				this.SetAttributeValue("adx_copy", value);
				this.OnPropertyChanged("Copy");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[AttributeLogicalNameAttribute("adx_createdbyipaddress")]
		public string CreatedByIPAddress
		{
			get
			{
				return this.GetAttributeValue<string>("adx_createdbyipaddress");
			}
			set
			{
				this.OnPropertyChanging("CreatedByIPAddress");
				this.SetAttributeValue("adx_createdbyipaddress", value);
				this.OnPropertyChanged("CreatedByIPAddress");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[AttributeLogicalNameAttribute("adx_createdbyusername")]
		public string CreatedByUsername
		{
			get
			{
				return this.GetAttributeValue<string>("adx_createdbyusername");
			}
			set
			{
				this.OnPropertyChanging("CreatedByUsername");
				this.SetAttributeValue("adx_createdbyusername", value);
				this.OnPropertyChanged("CreatedByUsername");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[AttributeLogicalNameAttribute("adx_customcss")]
		public string CustomCSS
		{
			get
			{
				return this.GetAttributeValue<string>("adx_customcss");
			}
			set
			{
				this.OnPropertyChanging("CustomCSS");
				this.SetAttributeValue("adx_customcss", value);
				this.OnPropertyChanged("CustomCSS");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[AttributeLogicalNameAttribute("adx_customjavascript")]
		public string CustomJavaScript
		{
			get
			{
				return this.GetAttributeValue<string>("adx_customjavascript");
			}
			set
			{
				this.OnPropertyChanging("CustomJavaScript");
				this.SetAttributeValue("adx_customjavascript", value);
				this.OnPropertyChanged("CustomJavaScript");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[AttributeLogicalNameAttribute("adx_displaydate")]
		public Nullable<DateTime> DisplayDate
		{
			get
			{
				return this.GetAttributeValue<Nullable<DateTime>>("adx_displaydate");
			}
			set
			{
				this.OnPropertyChanging("DisplayDate");
				this.SetAttributeValue("adx_displaydate", value);
				this.OnPropertyChanged("DisplayDate");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[AttributeLogicalNameAttribute("adx_displayorder")]
		public Nullable<int> DisplayOrder
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("adx_displayorder");
			}
			set
			{
				this.OnPropertyChanging("DisplayOrder");
				this.SetAttributeValue("adx_displayorder", value);
				this.OnPropertyChanged("DisplayOrder");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[AttributeLogicalNameAttribute("adx_editorialcomments")]
		public string EditorialComments
		{
			get
			{
				return this.GetAttributeValue<string>("adx_editorialcomments");
			}
			set
			{
				this.OnPropertyChanging("EditorialComments");
				this.SetAttributeValue("adx_editorialcomments", value);
				this.OnPropertyChanged("EditorialComments");
			}
		}
		
		/// <summary>
		/// Setting this value to 'Yes' will allow users to rate the web page.
		/// </summary>
		[AttributeLogicalNameAttribute("adx_enablerating")]
		public Nullable<bool> EnableRatings
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("adx_enablerating");
			}
			set
			{
				this.OnPropertyChanging("EnableRatings");
				this.SetAttributeValue("adx_enablerating", value);
				this.OnPropertyChanged("EnableRatings");
			}
		}
		
		/// <summary>
		/// Select whether to enable logging of users' downloads of this webpage.
		/// </summary>
		[AttributeLogicalNameAttribute("adx_enabletracking")]
		public Nullable<bool> EnableTrackingDeprecated
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("adx_enabletracking");
			}
			set
			{
				this.OnPropertyChanging("EnableTrackingDeprecated");
				this.SetAttributeValue("adx_enabletracking", value);
				this.OnPropertyChanged("EnableTrackingDeprecated");
			}
		}
		
		/// <summary>
		/// Unique identifier for Entity Form associated with Web Page.
		/// </summary>
		[AttributeLogicalNameAttribute("adx_entityform")]
		public EntityReference EntityForm
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("adx_entityform");
			}
			set
			{
				this.OnPropertyChanging("EntityForm");
				this.SetAttributeValue("adx_entityform", value);
				this.OnPropertyChanged("EntityForm");
			}
		}
		
		/// <summary>
		/// Unique identifier for Entity List associated with Web Page.
		/// </summary>
		[AttributeLogicalNameAttribute("adx_entitylist")]
		public EntityReference EntityList
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("adx_entitylist");
			}
			set
			{
				this.OnPropertyChanging("EntityList");
				this.SetAttributeValue("adx_entitylist", value);
				this.OnPropertyChanged("EntityList");
			}
		}
		
		/// <summary>
		/// Shows whether the webpage is excluded from the portal search.
		/// </summary>
		[AttributeLogicalNameAttribute("adx_excludefromsearch")]
		public Nullable<bool> ExcludeFromSearch
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("adx_excludefromsearch");
			}
			set
			{
				this.OnPropertyChanging("ExcludeFromSearch");
				this.SetAttributeValue("adx_excludefromsearch", value);
				this.OnPropertyChanged("ExcludeFromSearch");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[AttributeLogicalNameAttribute("adx_expirationdate")]
		public Nullable<DateTime> ExpirationDate
		{
			get
			{
				return this.GetAttributeValue<Nullable<DateTime>>("adx_expirationdate");
			}
			set
			{
				this.OnPropertyChanging("ExpirationDate");
				this.SetAttributeValue("adx_expirationdate", value);
				this.OnPropertyChanged("ExpirationDate");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[AttributeLogicalNameAttribute("adx_feedbackpolicy")]
		public Nullable<WebPageCommentPolicy> CommentPolicy
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("adx_feedbackpolicy");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (WebPageCommentPolicy)(Enum.ToObject(typeof(WebPageCommentPolicy), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("CommentPolicy");
				if (value == null)
				{
					this.SetAttributeValue("adx_feedbackpolicy", null);
				}
				else
				{
					this.SetAttributeValue("adx_feedbackpolicy", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("CommentPolicy");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[AttributeLogicalNameAttribute("adx_hiddenfromsitemap")]
		public Nullable<bool> HiddenFromSitemap
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("adx_hiddenfromsitemap");
			}
			set
			{
				this.OnPropertyChanging("HiddenFromSitemap");
				this.SetAttributeValue("adx_hiddenfromsitemap", value);
				this.OnPropertyChanged("HiddenFromSitemap");
			}
		}
		
		/// <summary>
		/// Unique identifier for Web File associated with Web Page.
		/// </summary>
		[AttributeLogicalNameAttribute("adx_image")]
		public EntityReference Image
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("adx_image");
			}
			set
			{
				this.OnPropertyChanging("Image");
				this.SetAttributeValue("adx_image", value);
				this.OnPropertyChanged("Image");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[AttributeLogicalNameAttribute("adx_imageurl")]
		public string ImageURL
		{
			get
			{
				return this.GetAttributeValue<string>("adx_imageurl");
			}
			set
			{
				this.OnPropertyChanging("ImageURL");
				this.SetAttributeValue("adx_imageurl", value);
				this.OnPropertyChanged("ImageURL");
			}
		}
		
		/// <summary>
		/// Defines whether this is the "root" record of this translated group of Web Pages.
		/// </summary>
		[AttributeLogicalNameAttribute("adx_isroot")]
		public Nullable<bool> IsRoot
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("adx_isroot");
			}
			set
			{
				this.OnPropertyChanging("IsRoot");
				this.SetAttributeValue("adx_isroot", value);
				this.OnPropertyChanged("IsRoot");
			}
		}
		
		/// <summary>
		/// Unique identifier for Web Page associated with Web Page.
		/// </summary>
		[AttributeLogicalNameAttribute("adx_masterwebpageid")]
		public EntityReference MasterWebPage
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("adx_masterwebpageid");
			}
			set
			{
				this.OnPropertyChanging("MasterWebPage");
				this.SetAttributeValue("adx_masterwebpageid", value);
				this.OnPropertyChanged("MasterWebPage");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[AttributeLogicalNameAttribute("adx_meta_description")]
		public string Description
		{
			get
			{
				return this.GetAttributeValue<string>("adx_meta_description");
			}
			set
			{
				this.OnPropertyChanging("Description");
				this.SetAttributeValue("adx_meta_description", value);
				this.OnPropertyChanged("Description");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[AttributeLogicalNameAttribute("adx_modifiedbyipaddress")]
		public string ModifiedByIPAddress
		{
			get
			{
				return this.GetAttributeValue<string>("adx_modifiedbyipaddress");
			}
			set
			{
				this.OnPropertyChanging("ModifiedByIPAddress");
				this.SetAttributeValue("adx_modifiedbyipaddress", value);
				this.OnPropertyChanged("ModifiedByIPAddress");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[AttributeLogicalNameAttribute("adx_modifiedbyusername")]
		public string ModifiedByUsername
		{
			get
			{
				return this.GetAttributeValue<string>("adx_modifiedbyusername");
			}
			set
			{
				this.OnPropertyChanging("ModifiedByUsername");
				this.SetAttributeValue("adx_modifiedbyusername", value);
				this.OnPropertyChanged("ModifiedByUsername");
			}
		}
		
		/// <summary>
		/// Shows the name of the custom entity.
		/// </summary>
		[AttributeLogicalNameAttribute("adx_name")]
		public string Name
		{
			get
			{
				return this.GetAttributeValue<string>("adx_name");
			}
			set
			{
				this.OnPropertyChanging("Name");
				this.SetAttributeValue("adx_name", value);
				this.OnPropertyChanged("Name");
			}
		}
		
		/// <summary>
		/// Unique identifier for Web Link Set associated with Web Page.
		/// </summary>
		[AttributeLogicalNameAttribute("adx_navigation")]
		public EntityReference Navigation
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("adx_navigation");
			}
			set
			{
				this.OnPropertyChanging("Navigation");
				this.SetAttributeValue("adx_navigation", value);
				this.OnPropertyChanged("Navigation");
			}
		}
		
		/// <summary>
		/// Unique identifier for Page Template associated with Web Page.
		/// </summary>
		[AttributeLogicalNameAttribute("adx_pagetemplateid")]
		public EntityReference PageTemplate
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("adx_pagetemplateid");
			}
			set
			{
				this.OnPropertyChanging("PageTemplate");
				this.SetAttributeValue("adx_pagetemplateid", value);
				this.OnPropertyChanged("PageTemplate");
			}
		}
		
		/// <summary>
		/// Unique identifier for Web Page associated with Web Page.
		/// </summary>
		[AttributeLogicalNameAttribute("adx_parentpageid")]
		public EntityReference ParentPage
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("adx_parentpageid");
			}
			set
			{
				this.OnPropertyChanging("ParentPage");
				this.SetAttributeValue("adx_parentpageid", value);
				this.OnPropertyChanged("ParentPage");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[AttributeLogicalNameAttribute("adx_partialurl")]
		public string PartialURL
		{
			get
			{
				return this.GetAttributeValue<string>("adx_partialurl");
			}
			set
			{
				this.OnPropertyChanging("PartialURL");
				this.SetAttributeValue("adx_partialurl", value);
				this.OnPropertyChanged("PartialURL");
			}
		}
		
		/// <summary>
		/// Unique identifier for Publishing State associated with Web Page.
		/// </summary>
		[AttributeLogicalNameAttribute("adx_publishingstateid")]
		public EntityReference PublishingState
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("adx_publishingstateid");
			}
			set
			{
				this.OnPropertyChanging("PublishingState");
				this.SetAttributeValue("adx_publishingstateid", value);
				this.OnPropertyChanged("PublishingState");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[AttributeLogicalNameAttribute("adx_releasedate")]
		public Nullable<DateTime> ReleaseDate
		{
			get
			{
				return this.GetAttributeValue<Nullable<DateTime>>("adx_releasedate");
			}
			set
			{
				this.OnPropertyChanging("ReleaseDate");
				this.SetAttributeValue("adx_releasedate", value);
				this.OnPropertyChanged("ReleaseDate");
			}
		}
		
		/// <summary>
		/// Lookup to root WebPage.
		/// </summary>
		[AttributeLogicalNameAttribute("adx_rootwebpageid")]
		public EntityReference RootWebpage
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("adx_rootwebpageid");
			}
			set
			{
				this.OnPropertyChanging("RootWebpage");
				this.SetAttributeValue("adx_rootwebpageid", value);
				this.OnPropertyChanged("RootWebpage");
			}
		}
		
		/// <summary>
		/// Determines if the content page uses the root page configuration
		/// </summary>
		[AttributeLogicalNameAttribute("adx_sharedpageconfiguration")]
		public Nullable<bool> SharedPageConfiguration
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("adx_sharedpageconfiguration");
			}
			set
			{
				this.OnPropertyChanging("SharedPageConfiguration");
				this.SetAttributeValue("adx_sharedpageconfiguration", value);
				this.OnPropertyChanged("SharedPageConfiguration");
			}
		}
		
		/// <summary>
		/// Unique identifier for Subject associated with Web Page.
		/// </summary>
		[AttributeLogicalNameAttribute("adx_subjectid")]
		public EntityReference Subject
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("adx_subjectid");
			}
			set
			{
				this.OnPropertyChanging("Subject");
				this.SetAttributeValue("adx_subjectid", value);
				this.OnPropertyChanged("Subject");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[AttributeLogicalNameAttribute("adx_summary")]
		public string Summary
		{
			get
			{
				return this.GetAttributeValue<string>("adx_summary");
			}
			set
			{
				this.OnPropertyChanging("Summary");
				this.SetAttributeValue("adx_summary", value);
				this.OnPropertyChanged("Summary");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[AttributeLogicalNameAttribute("adx_title")]
		public string Title
		{
			get
			{
				return this.GetAttributeValue<string>("adx_title");
			}
			set
			{
				this.OnPropertyChanging("Title");
				this.SetAttributeValue("adx_title", value);
				this.OnPropertyChanged("Title");
			}
		}
		
		/// <summary>
		/// Unique identifier for Web Form associated with Web Page.
		/// </summary>
		[AttributeLogicalNameAttribute("adx_webform")]
		public EntityReference WebForm
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("adx_webform");
			}
			set
			{
				this.OnPropertyChanging("WebForm");
				this.SetAttributeValue("adx_webform", value);
				this.OnPropertyChanged("WebForm");
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[AttributeLogicalNameAttribute("adx_webpageid")]
		public Nullable<Guid> WebPageId
		{
			get
			{
				return this.GetAttributeValue<Nullable<Guid>>("adx_webpageid");
			}
			set
			{
				this.OnPropertyChanging("WebPageId");
				this.SetAttributeValue("adx_webpageid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = Guid.Empty;
				}
				this.OnPropertyChanged("WebPageId");
			}
		}
		
		[AttributeLogicalNameAttribute("adx_webpageid")]
		public override Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.WebPageId = value;
			}
		}
		
		/// <summary>
		/// Language of this web page.
		/// </summary>
		[AttributeLogicalNameAttribute("adx_webpagelanguageid")]
		public EntityReference WebpageLanguage
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("adx_webpagelanguageid");
			}
			set
			{
				this.OnPropertyChanging("WebpageLanguage");
				this.SetAttributeValue("adx_webpagelanguageid", value);
				this.OnPropertyChanged("WebpageLanguage");
			}
		}
		
		/// <summary>
		/// Unique identifier for Website associated with Web Page.
		/// </summary>
		[AttributeLogicalNameAttribute("adx_websiteid")]
		public EntityReference Website
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("adx_websiteid");
			}
			set
			{
				this.OnPropertyChanging("Website");
				this.SetAttributeValue("adx_websiteid", value);
				this.OnPropertyChanged("Website");
			}
		}
		
		/// <summary>
		/// Shows the user who created the record.
		/// </summary>
		/// <remarks>
		/// The property is read-only and the setter has been added to assist with unit testing only.
		/// </remarks>
		[AttributeLogicalNameAttribute("createdby")]
		public EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("createdby");
			}
			set
			{
				this.OnPropertyChanging("CreatedBy");
				this.SetAttributeValue("createdby", value);
				this.OnPropertyChanged("CreatedBy");
			}
		}
		
		/// <summary>
		/// Shows when the record was created.
		/// </summary>
		/// <remarks>
		/// The property is read-only and the setter has been added to assist with unit testing only.
		/// </remarks>
		[AttributeLogicalNameAttribute("createdon")]
		public Nullable<DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<Nullable<DateTime>>("createdon");
			}
			set
			{
				this.OnPropertyChanging("CreatedOn");
				this.SetAttributeValue("createdon", value);
				this.OnPropertyChanged("CreatedOn");
			}
		}
		
		/// <summary>
		/// Shows the user who updated the record.
		/// </summary>
		/// <remarks>
		/// The property is read-only and the setter has been added to assist with unit testing only.
		/// </remarks>
		[AttributeLogicalNameAttribute("modifiedby")]
		public EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("modifiedby");
			}
			set
			{
				this.OnPropertyChanging("ModifiedBy");
				this.SetAttributeValue("modifiedby", value);
				this.OnPropertyChanged("ModifiedBy");
			}
		}
		
		/// <summary>
		/// Shows when the record was updated.
		/// </summary>
		/// <remarks>
		/// The property is read-only and the setter has been added to assist with unit testing only.
		/// </remarks>
		[AttributeLogicalNameAttribute("modifiedon")]
		public Nullable<DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<Nullable<DateTime>>("modifiedon");
			}
			set
			{
				this.OnPropertyChanging("ModifiedOn");
				this.SetAttributeValue("modifiedon", value);
				this.OnPropertyChanged("ModifiedOn");
			}
		}
		
		/// <summary>
		/// Shows the owner ID.
		/// </summary>
		[AttributeLogicalNameAttribute("ownerid")]
		public EntityReference Owner
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("ownerid");
			}
			set
			{
				this.OnPropertyChanging("Owner");
				this.SetAttributeValue("ownerid", value);
				this.OnPropertyChanged("Owner");
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[AttributeLogicalNameAttribute("owningbusinessunit")]
		public EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[AttributeLogicalNameAttribute("owningteam")]
		public EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[AttributeLogicalNameAttribute("owninguser")]
		public EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Status of the Web Page
		/// </summary>
		[AttributeLogicalNameAttribute("statecode")]
		public Nullable<WebPageState> State
		{
			get
			{
				OptionSetValue optionSet = this.GetAttributeValue<OptionSetValue>("statecode");
				if (optionSet != null)
				{
					return ((WebPageState)(Enum.ToObject(typeof(WebPageState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("State");
				if (value == null)
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("State");
			}
		}
		
		/// <summary>
		/// Reason for the status of the Web Page
		/// </summary>
		[AttributeLogicalNameAttribute("statuscode")]
		public Nullable<WebPageStatusReason> StatusReason
		{
			get
			{
				OptionSetValue optionSet = this.GetAttributeValue<OptionSetValue>("statuscode");
				if (optionSet != null)
				{
					return ((WebPageStatusReason)(Enum.ToObject(typeof(WebPageStatusReason), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("StatusReason");
				if (value == null)
				{
					this.SetAttributeValue("statuscode", null);
				}
				else
				{
					this.SetAttributeValue("statuscode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("StatusReason");
			}
		}
		
		public struct Fields
		{
			
			public static string AllowOrigin = "adx_alloworigin";
			
			public static string Author = "adx_authorid";
			
			public static string Category = "adx_category";
			
			public static string Copy = "adx_copy";
			
			public static string CreatedByIPAddress = "adx_createdbyipaddress";
			
			public static string CreatedByUsername = "adx_createdbyusername";
			
			public static string CustomCSS = "adx_customcss";
			
			public static string CustomJavaScript = "adx_customjavascript";
			
			public static string DisplayDate = "adx_displaydate";
			
			public static string DisplayOrder = "adx_displayorder";
			
			public static string EditorialComments = "adx_editorialcomments";
			
			public static string EnableRatings = "adx_enablerating";
			
			public static string EnableTrackingDeprecated = "adx_enabletracking";
			
			public static string EntityForm = "adx_entityform";
			
			public static string EntityList = "adx_entitylist";
			
			public static string ExcludeFromSearch = "adx_excludefromsearch";
			
			public static string ExpirationDate = "adx_expirationdate";
			
			public static string CommentPolicy = "adx_feedbackpolicy";
			
			public static string HiddenFromSitemap = "adx_hiddenfromsitemap";
			
			public static string Image = "adx_image";
			
			public static string ImageURL = "adx_imageurl";
			
			public static string IsRoot = "adx_isroot";
			
			public static string MasterWebPage = "adx_masterwebpageid";
			
			public static string Description = "adx_meta_description";
			
			public static string ModifiedByIPAddress = "adx_modifiedbyipaddress";
			
			public static string ModifiedByUsername = "adx_modifiedbyusername";
			
			public static string Name = "adx_name";
			
			public static string Navigation = "adx_navigation";
			
			public static string PageTemplate = "adx_pagetemplateid";
			
			public static string ParentPage = "adx_parentpageid";
			
			public static string PartialURL = "adx_partialurl";
			
			public static string PublishingState = "adx_publishingstateid";
			
			public static string ReleaseDate = "adx_releasedate";
			
			public static string RootWebpage = "adx_rootwebpageid";
			
			public static string SharedPageConfiguration = "adx_sharedpageconfiguration";
			
			public static string Subject = "adx_subjectid";
			
			public static string Summary = "adx_summary";
			
			public static string Title = "adx_title";
			
			public static string WebForm = "adx_webform";
			
			public static string WebPageId = "adx_webpageid";
			
			public static string Id = "adx_webpageid";
			
			public static string WebpageLanguage = "adx_webpagelanguageid";
			
			public static string Website = "adx_websiteid";
			
			public static string CreatedBy = "createdby";
			
			public static string CreatedOn = "createdon";
			
			public static string ModifiedBy = "modifiedby";
			
			public static string ModifiedOn = "modifiedon";
			
			public static string Owner = "ownerid";
			
			public static string OwningBusinessUnit = "owningbusinessunit";
			
			public static string OwningTeam = "owningteam";
			
			public static string OwningUser = "owninguser";
			
			public static string State = "statecode";
			
			public static string StatusReason = "statuscode";
		}
	}
}
