//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Shared.Models.Domain
{
	using Microsoft.Xrm.Sdk;
	using Microsoft.Xrm.Sdk.Client;
	using System;
	using System.CodeDom.Compiler;
	using System.Collections.Generic;
	using System.ComponentModel;
	using System.Linq;
	using System.Runtime.Serialization;
	
	
	/// <summary>
	/// Person with whom a business unit has a relationship, such as customer, supplier, and colleague.
	/// </summary>
	[DataContractAttribute()]
	[EntityLogicalNameAttribute("contact")]
	[GeneratedCodeAttribute("CrmSvcUtil", "9.1.0.71")]
	public partial class Contact : Entity, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public Contact() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "contact";
		
		public const string EntityLogicalCollectionName = "contacts";
		
		public const string EntitySetName = "contacts";
		
		public const int EntityTypeCode = 2;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Unique identifier of the account with which the contact is associated.
		/// </summary>
		[AttributeLogicalNameAttribute("accountid")]
		public EntityReference Account
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("accountid");
			}
		}
		
		/// <summary>
		/// Select the contact's role within the company or sales process, such as decision maker, employee, or influencer.
		/// </summary>
		[AttributeLogicalNameAttribute("accountrolecode")]
		public Nullable<ContactRole> Role
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("accountrolecode");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (ContactRole)(Enum.ToObject(typeof(ContactRole), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("Role");
				if (value == null)
				{
					this.SetAttributeValue("accountrolecode", null);
				}
				else
				{
					this.SetAttributeValue("accountrolecode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("Role");
			}
		}
		
		/// <summary>
		/// Unique identifier for address 1.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_addressid")]
		public Nullable<Guid> AddressOneAddressId
		{
			get
			{
				return this.GetAttributeValue<Nullable<Guid>>("address1_addressid");
			}
			set
			{
				this.OnPropertyChanging("AddressOneAddressId");
				this.SetAttributeValue("address1_addressid", value);
				this.OnPropertyChanged("AddressOneAddressId");
			}
		}
		
		/// <summary>
		/// Select the primary address type.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_addresstypecode")]
		public Nullable<ContactAddressOneAddressType> AddressOneAddressType
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("address1_addresstypecode");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (ContactAddressOneAddressType)(Enum.ToObject(typeof(ContactAddressOneAddressType), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("AddressOneAddressType");
				if (value == null)
				{
					this.SetAttributeValue("address1_addresstypecode", null);
				}
				else
				{
					this.SetAttributeValue("address1_addresstypecode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("AddressOneAddressType");
			}
		}
		
		/// <summary>
		/// Type the city for the primary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_city")]
		public string AddressOneCity
		{
			get
			{
				return this.GetAttributeValue<string>("address1_city");
			}
			set
			{
				this.OnPropertyChanging("AddressOneCity");
				this.SetAttributeValue("address1_city", value);
				this.OnPropertyChanged("AddressOneCity");
			}
		}
		
		/// <summary>
		/// Shows the complete primary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_composite")]
		public string AddressOne
		{
			get
			{
				return this.GetAttributeValue<string>("address1_composite");
			}
		}
		
		/// <summary>
		/// Type the country or region for the primary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_country")]
		public string AddressOneCountryRegion
		{
			get
			{
				return this.GetAttributeValue<string>("address1_country");
			}
			set
			{
				this.OnPropertyChanging("AddressOneCountryRegion");
				this.SetAttributeValue("address1_country", value);
				this.OnPropertyChanged("AddressOneCountryRegion");
			}
		}
		
		/// <summary>
		/// Type the county for the primary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_county")]
		public string AddressOneCounty
		{
			get
			{
				return this.GetAttributeValue<string>("address1_county");
			}
			set
			{
				this.OnPropertyChanging("AddressOneCounty");
				this.SetAttributeValue("address1_county", value);
				this.OnPropertyChanged("AddressOneCounty");
			}
		}
		
		/// <summary>
		/// Type the fax number associated with the primary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_fax")]
		public string AddressOneFax
		{
			get
			{
				return this.GetAttributeValue<string>("address1_fax");
			}
			set
			{
				this.OnPropertyChanging("AddressOneFax");
				this.SetAttributeValue("address1_fax", value);
				this.OnPropertyChanged("AddressOneFax");
			}
		}
		
		/// <summary>
		/// Select the freight terms for the primary address to make sure shipping orders are processed correctly.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_freighttermscode")]
		public Nullable<ContactAddressOneFreightTerms> AddressOneFreightTerms
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("address1_freighttermscode");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (ContactAddressOneFreightTerms)(Enum.ToObject(typeof(ContactAddressOneFreightTerms), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("AddressOneFreightTerms");
				if (value == null)
				{
					this.SetAttributeValue("address1_freighttermscode", null);
				}
				else
				{
					this.SetAttributeValue("address1_freighttermscode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("AddressOneFreightTerms");
			}
		}
		
		/// <summary>
		/// Type the latitude value for the primary address for use in mapping and other applications.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_latitude")]
		public Nullable<double> AddressOneLatitude
		{
			get
			{
				return this.GetAttributeValue<Nullable<double>>("address1_latitude");
			}
			set
			{
				this.OnPropertyChanging("AddressOneLatitude");
				this.SetAttributeValue("address1_latitude", value);
				this.OnPropertyChanged("AddressOneLatitude");
			}
		}
		
		/// <summary>
		/// Type the first line of the primary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_line1")]
		public string AddressOneStreetOne
		{
			get
			{
				return this.GetAttributeValue<string>("address1_line1");
			}
			set
			{
				this.OnPropertyChanging("AddressOneStreetOne");
				this.SetAttributeValue("address1_line1", value);
				this.OnPropertyChanged("AddressOneStreetOne");
			}
		}
		
		/// <summary>
		/// Type the second line of the primary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_line2")]
		public string AddressOneStreetTwo
		{
			get
			{
				return this.GetAttributeValue<string>("address1_line2");
			}
			set
			{
				this.OnPropertyChanging("AddressOneStreetTwo");
				this.SetAttributeValue("address1_line2", value);
				this.OnPropertyChanged("AddressOneStreetTwo");
			}
		}
		
		/// <summary>
		/// Type the third line of the primary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_line3")]
		public string AddressOneStreetThree
		{
			get
			{
				return this.GetAttributeValue<string>("address1_line3");
			}
			set
			{
				this.OnPropertyChanging("AddressOneStreetThree");
				this.SetAttributeValue("address1_line3", value);
				this.OnPropertyChanged("AddressOneStreetThree");
			}
		}
		
		/// <summary>
		/// Type the longitude value for the primary address for use in mapping and other applications.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_longitude")]
		public Nullable<double> AddressOneLongitude
		{
			get
			{
				return this.GetAttributeValue<Nullable<double>>("address1_longitude");
			}
			set
			{
				this.OnPropertyChanging("AddressOneLongitude");
				this.SetAttributeValue("address1_longitude", value);
				this.OnPropertyChanged("AddressOneLongitude");
			}
		}
		
		/// <summary>
		/// Type a descriptive name for the primary address, such as Corporate Headquarters.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_name")]
		public string AddressOneName
		{
			get
			{
				return this.GetAttributeValue<string>("address1_name");
			}
			set
			{
				this.OnPropertyChanging("AddressOneName");
				this.SetAttributeValue("address1_name", value);
				this.OnPropertyChanged("AddressOneName");
			}
		}
		
		/// <summary>
		/// Type the ZIP Code or postal code for the primary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_postalcode")]
		public string AddressOneZIPPostalCode
		{
			get
			{
				return this.GetAttributeValue<string>("address1_postalcode");
			}
			set
			{
				this.OnPropertyChanging("AddressOneZIPPostalCode");
				this.SetAttributeValue("address1_postalcode", value);
				this.OnPropertyChanged("AddressOneZIPPostalCode");
			}
		}
		
		/// <summary>
		/// Type the post office box number of the primary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_postofficebox")]
		public string AddressOnePostOfficeBox
		{
			get
			{
				return this.GetAttributeValue<string>("address1_postofficebox");
			}
			set
			{
				this.OnPropertyChanging("AddressOnePostOfficeBox");
				this.SetAttributeValue("address1_postofficebox", value);
				this.OnPropertyChanged("AddressOnePostOfficeBox");
			}
		}
		
		/// <summary>
		/// Type the name of the main contact at the account's primary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_primarycontactname")]
		public string AddressOnePrimaryContactName
		{
			get
			{
				return this.GetAttributeValue<string>("address1_primarycontactname");
			}
			set
			{
				this.OnPropertyChanging("AddressOnePrimaryContactName");
				this.SetAttributeValue("address1_primarycontactname", value);
				this.OnPropertyChanged("AddressOnePrimaryContactName");
			}
		}
		
		/// <summary>
		/// Select a shipping method for deliveries sent to this address.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_shippingmethodcode")]
		public Nullable<ContactAddressOneShippingMethod> AddressOneShippingMethod
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("address1_shippingmethodcode");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (ContactAddressOneShippingMethod)(Enum.ToObject(typeof(ContactAddressOneShippingMethod), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("AddressOneShippingMethod");
				if (value == null)
				{
					this.SetAttributeValue("address1_shippingmethodcode", null);
				}
				else
				{
					this.SetAttributeValue("address1_shippingmethodcode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("AddressOneShippingMethod");
			}
		}
		
		/// <summary>
		/// Type the state or province of the primary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_stateorprovince")]
		public string AddressOneStateProvince
		{
			get
			{
				return this.GetAttributeValue<string>("address1_stateorprovince");
			}
			set
			{
				this.OnPropertyChanging("AddressOneStateProvince");
				this.SetAttributeValue("address1_stateorprovince", value);
				this.OnPropertyChanged("AddressOneStateProvince");
			}
		}
		
		/// <summary>
		/// Type the main phone number associated with the primary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_telephone1")]
		public string AddressOnePhone
		{
			get
			{
				return this.GetAttributeValue<string>("address1_telephone1");
			}
			set
			{
				this.OnPropertyChanging("AddressOnePhone");
				this.SetAttributeValue("address1_telephone1", value);
				this.OnPropertyChanged("AddressOnePhone");
			}
		}
		
		/// <summary>
		/// Type a second phone number associated with the primary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_telephone2")]
		public string AddressOneTelephoneTwo
		{
			get
			{
				return this.GetAttributeValue<string>("address1_telephone2");
			}
			set
			{
				this.OnPropertyChanging("AddressOneTelephoneTwo");
				this.SetAttributeValue("address1_telephone2", value);
				this.OnPropertyChanged("AddressOneTelephoneTwo");
			}
		}
		
		/// <summary>
		/// Type a third phone number associated with the primary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_telephone3")]
		public string AddressOneTelephoneThree
		{
			get
			{
				return this.GetAttributeValue<string>("address1_telephone3");
			}
			set
			{
				this.OnPropertyChanging("AddressOneTelephoneThree");
				this.SetAttributeValue("address1_telephone3", value);
				this.OnPropertyChanged("AddressOneTelephoneThree");
			}
		}
		
		/// <summary>
		/// Type the UPS zone of the primary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_upszone")]
		public string AddressOneUPSZone
		{
			get
			{
				return this.GetAttributeValue<string>("address1_upszone");
			}
			set
			{
				this.OnPropertyChanging("AddressOneUPSZone");
				this.SetAttributeValue("address1_upszone", value);
				this.OnPropertyChanged("AddressOneUPSZone");
			}
		}
		
		/// <summary>
		/// Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_utcoffset")]
		public Nullable<int> AddressOneUTCOffset
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("address1_utcoffset");
			}
			set
			{
				this.OnPropertyChanging("AddressOneUTCOffset");
				this.SetAttributeValue("address1_utcoffset", value);
				this.OnPropertyChanged("AddressOneUTCOffset");
			}
		}
		
		/// <summary>
		/// Unique identifier for address 2.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_addressid")]
		public Nullable<Guid> AddressTwoAddressId
		{
			get
			{
				return this.GetAttributeValue<Nullable<Guid>>("address2_addressid");
			}
			set
			{
				this.OnPropertyChanging("AddressTwoAddressId");
				this.SetAttributeValue("address2_addressid", value);
				this.OnPropertyChanged("AddressTwoAddressId");
			}
		}
		
		/// <summary>
		/// Select the secondary address type.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_addresstypecode")]
		public Nullable<ContactAddressTwoAddressType> AddressTwoAddressType
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("address2_addresstypecode");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (ContactAddressTwoAddressType)(Enum.ToObject(typeof(ContactAddressTwoAddressType), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("AddressTwoAddressType");
				if (value == null)
				{
					this.SetAttributeValue("address2_addresstypecode", null);
				}
				else
				{
					this.SetAttributeValue("address2_addresstypecode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("AddressTwoAddressType");
			}
		}
		
		/// <summary>
		/// Type the city for the secondary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_city")]
		public string AddressTwoCity
		{
			get
			{
				return this.GetAttributeValue<string>("address2_city");
			}
			set
			{
				this.OnPropertyChanging("AddressTwoCity");
				this.SetAttributeValue("address2_city", value);
				this.OnPropertyChanged("AddressTwoCity");
			}
		}
		
		/// <summary>
		/// Shows the complete secondary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_composite")]
		public string AddressTwo
		{
			get
			{
				return this.GetAttributeValue<string>("address2_composite");
			}
		}
		
		/// <summary>
		/// Type the country or region for the secondary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_country")]
		public string AddressTwoCountryRegion
		{
			get
			{
				return this.GetAttributeValue<string>("address2_country");
			}
			set
			{
				this.OnPropertyChanging("AddressTwoCountryRegion");
				this.SetAttributeValue("address2_country", value);
				this.OnPropertyChanged("AddressTwoCountryRegion");
			}
		}
		
		/// <summary>
		/// Type the county for the secondary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_county")]
		public string AddressTwoCounty
		{
			get
			{
				return this.GetAttributeValue<string>("address2_county");
			}
			set
			{
				this.OnPropertyChanging("AddressTwoCounty");
				this.SetAttributeValue("address2_county", value);
				this.OnPropertyChanged("AddressTwoCounty");
			}
		}
		
		/// <summary>
		/// Type the fax number associated with the secondary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_fax")]
		public string AddressTwoFax
		{
			get
			{
				return this.GetAttributeValue<string>("address2_fax");
			}
			set
			{
				this.OnPropertyChanging("AddressTwoFax");
				this.SetAttributeValue("address2_fax", value);
				this.OnPropertyChanged("AddressTwoFax");
			}
		}
		
		/// <summary>
		/// Select the freight terms for the secondary address to make sure shipping orders are processed correctly.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_freighttermscode")]
		public Nullable<ContactAddressTwoFreightTerms> AddressTwoFreightTerms
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("address2_freighttermscode");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (ContactAddressTwoFreightTerms)(Enum.ToObject(typeof(ContactAddressTwoFreightTerms), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("AddressTwoFreightTerms");
				if (value == null)
				{
					this.SetAttributeValue("address2_freighttermscode", null);
				}
				else
				{
					this.SetAttributeValue("address2_freighttermscode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("AddressTwoFreightTerms");
			}
		}
		
		/// <summary>
		/// Type the latitude value for the secondary address for use in mapping and other applications.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_latitude")]
		public Nullable<double> AddressTwoLatitude
		{
			get
			{
				return this.GetAttributeValue<Nullable<double>>("address2_latitude");
			}
			set
			{
				this.OnPropertyChanging("AddressTwoLatitude");
				this.SetAttributeValue("address2_latitude", value);
				this.OnPropertyChanged("AddressTwoLatitude");
			}
		}
		
		/// <summary>
		/// Type the first line of the secondary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_line1")]
		public string AddressTwoStreetOne
		{
			get
			{
				return this.GetAttributeValue<string>("address2_line1");
			}
			set
			{
				this.OnPropertyChanging("AddressTwoStreetOne");
				this.SetAttributeValue("address2_line1", value);
				this.OnPropertyChanged("AddressTwoStreetOne");
			}
		}
		
		/// <summary>
		/// Type the second line of the secondary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_line2")]
		public string AddressTwoStreetTwo
		{
			get
			{
				return this.GetAttributeValue<string>("address2_line2");
			}
			set
			{
				this.OnPropertyChanging("AddressTwoStreetTwo");
				this.SetAttributeValue("address2_line2", value);
				this.OnPropertyChanged("AddressTwoStreetTwo");
			}
		}
		
		/// <summary>
		/// Type the third line of the secondary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_line3")]
		public string AddressTwoStreetThree
		{
			get
			{
				return this.GetAttributeValue<string>("address2_line3");
			}
			set
			{
				this.OnPropertyChanging("AddressTwoStreetThree");
				this.SetAttributeValue("address2_line3", value);
				this.OnPropertyChanged("AddressTwoStreetThree");
			}
		}
		
		/// <summary>
		/// Type the longitude value for the secondary address for use in mapping and other applications.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_longitude")]
		public Nullable<double> AddressTwoLongitude
		{
			get
			{
				return this.GetAttributeValue<Nullable<double>>("address2_longitude");
			}
			set
			{
				this.OnPropertyChanging("AddressTwoLongitude");
				this.SetAttributeValue("address2_longitude", value);
				this.OnPropertyChanged("AddressTwoLongitude");
			}
		}
		
		/// <summary>
		/// Type a descriptive name for the secondary address, such as Corporate Headquarters.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_name")]
		public string AddressTwoName
		{
			get
			{
				return this.GetAttributeValue<string>("address2_name");
			}
			set
			{
				this.OnPropertyChanging("AddressTwoName");
				this.SetAttributeValue("address2_name", value);
				this.OnPropertyChanged("AddressTwoName");
			}
		}
		
		/// <summary>
		/// Type the ZIP Code or postal code for the secondary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_postalcode")]
		public string AddressTwoZIPPostalCode
		{
			get
			{
				return this.GetAttributeValue<string>("address2_postalcode");
			}
			set
			{
				this.OnPropertyChanging("AddressTwoZIPPostalCode");
				this.SetAttributeValue("address2_postalcode", value);
				this.OnPropertyChanged("AddressTwoZIPPostalCode");
			}
		}
		
		/// <summary>
		/// Type the post office box number of the secondary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_postofficebox")]
		public string AddressTwoPostOfficeBox
		{
			get
			{
				return this.GetAttributeValue<string>("address2_postofficebox");
			}
			set
			{
				this.OnPropertyChanging("AddressTwoPostOfficeBox");
				this.SetAttributeValue("address2_postofficebox", value);
				this.OnPropertyChanged("AddressTwoPostOfficeBox");
			}
		}
		
		/// <summary>
		/// Type the name of the main contact at the account's secondary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_primarycontactname")]
		public string AddressTwoPrimaryContactName
		{
			get
			{
				return this.GetAttributeValue<string>("address2_primarycontactname");
			}
			set
			{
				this.OnPropertyChanging("AddressTwoPrimaryContactName");
				this.SetAttributeValue("address2_primarycontactname", value);
				this.OnPropertyChanged("AddressTwoPrimaryContactName");
			}
		}
		
		/// <summary>
		/// Select a shipping method for deliveries sent to this address.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_shippingmethodcode")]
		public Nullable<ContactAddressTwoShippingMethod> AddressTwoShippingMethod
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("address2_shippingmethodcode");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (ContactAddressTwoShippingMethod)(Enum.ToObject(typeof(ContactAddressTwoShippingMethod), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("AddressTwoShippingMethod");
				if (value == null)
				{
					this.SetAttributeValue("address2_shippingmethodcode", null);
				}
				else
				{
					this.SetAttributeValue("address2_shippingmethodcode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("AddressTwoShippingMethod");
			}
		}
		
		/// <summary>
		/// Type the state or province of the secondary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_stateorprovince")]
		public string AddressTwoStateProvince
		{
			get
			{
				return this.GetAttributeValue<string>("address2_stateorprovince");
			}
			set
			{
				this.OnPropertyChanging("AddressTwoStateProvince");
				this.SetAttributeValue("address2_stateorprovince", value);
				this.OnPropertyChanged("AddressTwoStateProvince");
			}
		}
		
		/// <summary>
		/// Type the main phone number associated with the secondary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_telephone1")]
		public string AddressTwoTelephoneOne
		{
			get
			{
				return this.GetAttributeValue<string>("address2_telephone1");
			}
			set
			{
				this.OnPropertyChanging("AddressTwoTelephoneOne");
				this.SetAttributeValue("address2_telephone1", value);
				this.OnPropertyChanged("AddressTwoTelephoneOne");
			}
		}
		
		/// <summary>
		/// Type a second phone number associated with the secondary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_telephone2")]
		public string AddressTwoTelephoneTwo
		{
			get
			{
				return this.GetAttributeValue<string>("address2_telephone2");
			}
			set
			{
				this.OnPropertyChanging("AddressTwoTelephoneTwo");
				this.SetAttributeValue("address2_telephone2", value);
				this.OnPropertyChanged("AddressTwoTelephoneTwo");
			}
		}
		
		/// <summary>
		/// Type a third phone number associated with the secondary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_telephone3")]
		public string AddressTwoTelephoneThree
		{
			get
			{
				return this.GetAttributeValue<string>("address2_telephone3");
			}
			set
			{
				this.OnPropertyChanging("AddressTwoTelephoneThree");
				this.SetAttributeValue("address2_telephone3", value);
				this.OnPropertyChanged("AddressTwoTelephoneThree");
			}
		}
		
		/// <summary>
		/// Type the UPS zone of the secondary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_upszone")]
		public string AddressTwoUPSZone
		{
			get
			{
				return this.GetAttributeValue<string>("address2_upszone");
			}
			set
			{
				this.OnPropertyChanging("AddressTwoUPSZone");
				this.SetAttributeValue("address2_upszone", value);
				this.OnPropertyChanged("AddressTwoUPSZone");
			}
		}
		
		/// <summary>
		/// Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_utcoffset")]
		public Nullable<int> AddressTwoUTCOffset
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("address2_utcoffset");
			}
			set
			{
				this.OnPropertyChanging("AddressTwoUTCOffset");
				this.SetAttributeValue("address2_utcoffset", value);
				this.OnPropertyChanged("AddressTwoUTCOffset");
			}
		}
		
		/// <summary>
		/// Unique identifier for address 3.
		/// </summary>
		[AttributeLogicalNameAttribute("address3_addressid")]
		public Nullable<Guid> AddressThreeAddressId
		{
			get
			{
				return this.GetAttributeValue<Nullable<Guid>>("address3_addressid");
			}
			set
			{
				this.OnPropertyChanging("AddressThreeAddressId");
				this.SetAttributeValue("address3_addressid", value);
				this.OnPropertyChanged("AddressThreeAddressId");
			}
		}
		
		/// <summary>
		/// Select the third address type.
		/// </summary>
		[AttributeLogicalNameAttribute("address3_addresstypecode")]
		public Nullable<ContactAddressThreeAddressType> AddressThreeAddressType
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("address3_addresstypecode");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (ContactAddressThreeAddressType)(Enum.ToObject(typeof(ContactAddressThreeAddressType), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("AddressThreeAddressType");
				if (value == null)
				{
					this.SetAttributeValue("address3_addresstypecode", null);
				}
				else
				{
					this.SetAttributeValue("address3_addresstypecode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("AddressThreeAddressType");
			}
		}
		
		/// <summary>
		/// Type the city for the 3rd address.
		/// </summary>
		[AttributeLogicalNameAttribute("address3_city")]
		public string AddressThreeCity
		{
			get
			{
				return this.GetAttributeValue<string>("address3_city");
			}
			set
			{
				this.OnPropertyChanging("AddressThreeCity");
				this.SetAttributeValue("address3_city", value);
				this.OnPropertyChanged("AddressThreeCity");
			}
		}
		
		/// <summary>
		/// Shows the complete third address.
		/// </summary>
		[AttributeLogicalNameAttribute("address3_composite")]
		public string AddressThree
		{
			get
			{
				return this.GetAttributeValue<string>("address3_composite");
			}
		}
		
		/// <summary>
		/// the country or region for the 3rd address.
		/// </summary>
		[AttributeLogicalNameAttribute("address3_country")]
		public string AddressThreeCountryRegion
		{
			get
			{
				return this.GetAttributeValue<string>("address3_country");
			}
			set
			{
				this.OnPropertyChanging("AddressThreeCountryRegion");
				this.SetAttributeValue("address3_country", value);
				this.OnPropertyChanged("AddressThreeCountryRegion");
			}
		}
		
		/// <summary>
		/// Type the county for the third address.
		/// </summary>
		[AttributeLogicalNameAttribute("address3_county")]
		public string AddressThreeCounty
		{
			get
			{
				return this.GetAttributeValue<string>("address3_county");
			}
			set
			{
				this.OnPropertyChanging("AddressThreeCounty");
				this.SetAttributeValue("address3_county", value);
				this.OnPropertyChanged("AddressThreeCounty");
			}
		}
		
		/// <summary>
		/// Type the fax number associated with the third address.
		/// </summary>
		[AttributeLogicalNameAttribute("address3_fax")]
		public string AddressThreeFax
		{
			get
			{
				return this.GetAttributeValue<string>("address3_fax");
			}
			set
			{
				this.OnPropertyChanging("AddressThreeFax");
				this.SetAttributeValue("address3_fax", value);
				this.OnPropertyChanged("AddressThreeFax");
			}
		}
		
		/// <summary>
		/// Select the freight terms for the third address to make sure shipping orders are processed correctly.
		/// </summary>
		[AttributeLogicalNameAttribute("address3_freighttermscode")]
		public Nullable<ContactAddressThreeFreightTerms> AddressThreeFreightTerms
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("address3_freighttermscode");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (ContactAddressThreeFreightTerms)(Enum.ToObject(typeof(ContactAddressThreeFreightTerms), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("AddressThreeFreightTerms");
				if (value == null)
				{
					this.SetAttributeValue("address3_freighttermscode", null);
				}
				else
				{
					this.SetAttributeValue("address3_freighttermscode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("AddressThreeFreightTerms");
			}
		}
		
		/// <summary>
		/// Type the latitude value for the third address for use in mapping and other applications.
		/// </summary>
		[AttributeLogicalNameAttribute("address3_latitude")]
		public Nullable<double> AddressThreeLatitude
		{
			get
			{
				return this.GetAttributeValue<Nullable<double>>("address3_latitude");
			}
			set
			{
				this.OnPropertyChanging("AddressThreeLatitude");
				this.SetAttributeValue("address3_latitude", value);
				this.OnPropertyChanged("AddressThreeLatitude");
			}
		}
		
		/// <summary>
		/// the first line of the 3rd address.
		/// </summary>
		[AttributeLogicalNameAttribute("address3_line1")]
		public string AddressThreeStreetOne
		{
			get
			{
				return this.GetAttributeValue<string>("address3_line1");
			}
			set
			{
				this.OnPropertyChanging("AddressThreeStreetOne");
				this.SetAttributeValue("address3_line1", value);
				this.OnPropertyChanged("AddressThreeStreetOne");
			}
		}
		
		/// <summary>
		/// the second line of the 3rd address.
		/// </summary>
		[AttributeLogicalNameAttribute("address3_line2")]
		public string AddressThreeStreetTwo
		{
			get
			{
				return this.GetAttributeValue<string>("address3_line2");
			}
			set
			{
				this.OnPropertyChanging("AddressThreeStreetTwo");
				this.SetAttributeValue("address3_line2", value);
				this.OnPropertyChanged("AddressThreeStreetTwo");
			}
		}
		
		/// <summary>
		/// the third line of the 3rd address.
		/// </summary>
		[AttributeLogicalNameAttribute("address3_line3")]
		public string AddressThreeStreetThree
		{
			get
			{
				return this.GetAttributeValue<string>("address3_line3");
			}
			set
			{
				this.OnPropertyChanging("AddressThreeStreetThree");
				this.SetAttributeValue("address3_line3", value);
				this.OnPropertyChanged("AddressThreeStreetThree");
			}
		}
		
		/// <summary>
		/// Type the longitude value for the third address for use in mapping and other applications.
		/// </summary>
		[AttributeLogicalNameAttribute("address3_longitude")]
		public Nullable<double> AddressThreeLongitude
		{
			get
			{
				return this.GetAttributeValue<Nullable<double>>("address3_longitude");
			}
			set
			{
				this.OnPropertyChanging("AddressThreeLongitude");
				this.SetAttributeValue("address3_longitude", value);
				this.OnPropertyChanged("AddressThreeLongitude");
			}
		}
		
		/// <summary>
		/// Type a descriptive name for the third address, such as Corporate Headquarters.
		/// </summary>
		[AttributeLogicalNameAttribute("address3_name")]
		public string AddressThreeName
		{
			get
			{
				return this.GetAttributeValue<string>("address3_name");
			}
			set
			{
				this.OnPropertyChanging("AddressThreeName");
				this.SetAttributeValue("address3_name", value);
				this.OnPropertyChanged("AddressThreeName");
			}
		}
		
		/// <summary>
		/// the ZIP Code or postal code for the 3rd address.
		/// </summary>
		[AttributeLogicalNameAttribute("address3_postalcode")]
		public string AddressThreeZIPPostalCode
		{
			get
			{
				return this.GetAttributeValue<string>("address3_postalcode");
			}
			set
			{
				this.OnPropertyChanging("AddressThreeZIPPostalCode");
				this.SetAttributeValue("address3_postalcode", value);
				this.OnPropertyChanged("AddressThreeZIPPostalCode");
			}
		}
		
		/// <summary>
		/// the post office box number of the 3rd address.
		/// </summary>
		[AttributeLogicalNameAttribute("address3_postofficebox")]
		public string AddressThreePostOfficeBox
		{
			get
			{
				return this.GetAttributeValue<string>("address3_postofficebox");
			}
			set
			{
				this.OnPropertyChanging("AddressThreePostOfficeBox");
				this.SetAttributeValue("address3_postofficebox", value);
				this.OnPropertyChanged("AddressThreePostOfficeBox");
			}
		}
		
		/// <summary>
		/// Type the name of the main contact at the account's third address.
		/// </summary>
		[AttributeLogicalNameAttribute("address3_primarycontactname")]
		public string AddressThreePrimaryContactName
		{
			get
			{
				return this.GetAttributeValue<string>("address3_primarycontactname");
			}
			set
			{
				this.OnPropertyChanging("AddressThreePrimaryContactName");
				this.SetAttributeValue("address3_primarycontactname", value);
				this.OnPropertyChanged("AddressThreePrimaryContactName");
			}
		}
		
		/// <summary>
		/// Select a shipping method for deliveries sent to this address.
		/// </summary>
		[AttributeLogicalNameAttribute("address3_shippingmethodcode")]
		public Nullable<ContactAddressThreeShippingMethod> AddressThreeShippingMethod
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("address3_shippingmethodcode");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (ContactAddressThreeShippingMethod)(Enum.ToObject(typeof(ContactAddressThreeShippingMethod), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("AddressThreeShippingMethod");
				if (value == null)
				{
					this.SetAttributeValue("address3_shippingmethodcode", null);
				}
				else
				{
					this.SetAttributeValue("address3_shippingmethodcode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("AddressThreeShippingMethod");
			}
		}
		
		/// <summary>
		/// the state or province of the third address.
		/// </summary>
		[AttributeLogicalNameAttribute("address3_stateorprovince")]
		public string AddressThreeStateProvince
		{
			get
			{
				return this.GetAttributeValue<string>("address3_stateorprovince");
			}
			set
			{
				this.OnPropertyChanging("AddressThreeStateProvince");
				this.SetAttributeValue("address3_stateorprovince", value);
				this.OnPropertyChanged("AddressThreeStateProvince");
			}
		}
		
		/// <summary>
		/// Type the main phone number associated with the third address.
		/// </summary>
		[AttributeLogicalNameAttribute("address3_telephone1")]
		public string AddressThreeTelephoneOne
		{
			get
			{
				return this.GetAttributeValue<string>("address3_telephone1");
			}
			set
			{
				this.OnPropertyChanging("AddressThreeTelephoneOne");
				this.SetAttributeValue("address3_telephone1", value);
				this.OnPropertyChanged("AddressThreeTelephoneOne");
			}
		}
		
		/// <summary>
		/// Type a second phone number associated with the third address.
		/// </summary>
		[AttributeLogicalNameAttribute("address3_telephone2")]
		public string AddressThreeTelephoneTwo
		{
			get
			{
				return this.GetAttributeValue<string>("address3_telephone2");
			}
			set
			{
				this.OnPropertyChanging("AddressThreeTelephoneTwo");
				this.SetAttributeValue("address3_telephone2", value);
				this.OnPropertyChanged("AddressThreeTelephoneTwo");
			}
		}
		
		/// <summary>
		/// Type a third phone number associated with the primary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address3_telephone3")]
		public string AddressThreeTelephoneThree
		{
			get
			{
				return this.GetAttributeValue<string>("address3_telephone3");
			}
			set
			{
				this.OnPropertyChanging("AddressThreeTelephoneThree");
				this.SetAttributeValue("address3_telephone3", value);
				this.OnPropertyChanged("AddressThreeTelephoneThree");
			}
		}
		
		/// <summary>
		/// Type the UPS zone of the third address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.
		/// </summary>
		[AttributeLogicalNameAttribute("address3_upszone")]
		public string AddressThreeUPSZone
		{
			get
			{
				return this.GetAttributeValue<string>("address3_upszone");
			}
			set
			{
				this.OnPropertyChanging("AddressThreeUPSZone");
				this.SetAttributeValue("address3_upszone", value);
				this.OnPropertyChanged("AddressThreeUPSZone");
			}
		}
		
		/// <summary>
		/// Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.
		/// </summary>
		[AttributeLogicalNameAttribute("address3_utcoffset")]
		public Nullable<int> AddressThreeUTCOffset
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("address3_utcoffset");
			}
			set
			{
				this.OnPropertyChanging("AddressThreeUTCOffset");
				this.SetAttributeValue("address3_utcoffset", value);
				this.OnPropertyChanged("AddressThreeUTCOffset");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[AttributeLogicalNameAttribute("adx_confirmremovepassword")]
		public Nullable<bool> ConfirmRemovePassword
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("adx_confirmremovepassword");
			}
			set
			{
				this.OnPropertyChanging("ConfirmRemovePassword");
				this.SetAttributeValue("adx_confirmremovepassword", value);
				this.OnPropertyChanged("ConfirmRemovePassword");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[AttributeLogicalNameAttribute("adx_createdbyipaddress")]
		public string CreatedByIPAddress
		{
			get
			{
				return this.GetAttributeValue<string>("adx_createdbyipaddress");
			}
			set
			{
				this.OnPropertyChanging("CreatedByIPAddress");
				this.SetAttributeValue("adx_createdbyipaddress", value);
				this.OnPropertyChanged("CreatedByIPAddress");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[AttributeLogicalNameAttribute("adx_createdbyusername")]
		public string CreatedByUsername
		{
			get
			{
				return this.GetAttributeValue<string>("adx_createdbyusername");
			}
			set
			{
				this.OnPropertyChanging("CreatedByUsername");
				this.SetAttributeValue("adx_createdbyusername", value);
				this.OnPropertyChanged("CreatedByUsername");
			}
		}
		
		/// <summary>
		/// Shows the current count of failed password attempts for the contact.
		/// </summary>
		[AttributeLogicalNameAttribute("adx_identity_accessfailedcount")]
		public Nullable<int> AccessFailedCount
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("adx_identity_accessfailedcount");
			}
			set
			{
				this.OnPropertyChanging("AccessFailedCount");
				this.SetAttributeValue("adx_identity_accessfailedcount", value);
				this.OnPropertyChanged("AccessFailedCount");
			}
		}
		
		/// <summary>
		/// Determines if the email is confirmed by the contact.
		/// </summary>
		[AttributeLogicalNameAttribute("adx_identity_emailaddress1confirmed")]
		public Nullable<bool> EmailConfirmed
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("adx_identity_emailaddress1confirmed");
			}
			set
			{
				this.OnPropertyChanging("EmailConfirmed");
				this.SetAttributeValue("adx_identity_emailaddress1confirmed", value);
				this.OnPropertyChanged("EmailConfirmed");
			}
		}
		
		/// <summary>
		/// Indicates the last date and time the user successfully signed in to a portal.
		/// </summary>
		[AttributeLogicalNameAttribute("adx_identity_lastsuccessfullogin")]
		public Nullable<DateTime> LastSuccessfulLogin
		{
			get
			{
				return this.GetAttributeValue<Nullable<DateTime>>("adx_identity_lastsuccessfullogin");
			}
			set
			{
				this.OnPropertyChanging("LastSuccessfulLogin");
				this.SetAttributeValue("adx_identity_lastsuccessfullogin", value);
				this.OnPropertyChanged("LastSuccessfulLogin");
			}
		}
		
		/// <summary>
		/// Indicates that the contact can no longer sign in to the portal using the local account.
		/// </summary>
		[AttributeLogicalNameAttribute("adx_identity_locallogindisabled")]
		public Nullable<bool> LocalLoginDisabled
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("adx_identity_locallogindisabled");
			}
			set
			{
				this.OnPropertyChanging("LocalLoginDisabled");
				this.SetAttributeValue("adx_identity_locallogindisabled", value);
				this.OnPropertyChanged("LocalLoginDisabled");
			}
		}
		
		/// <summary>
		/// Determines if this contact will track failed access attempts and become locked after too many failed attempts. To prevent the contact from becoming locked, you can disable this setting.
		/// </summary>
		[AttributeLogicalNameAttribute("adx_identity_lockoutenabled")]
		public Nullable<bool> LockoutEnabled
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("adx_identity_lockoutenabled");
			}
			set
			{
				this.OnPropertyChanging("LockoutEnabled");
				this.SetAttributeValue("adx_identity_lockoutenabled", value);
				this.OnPropertyChanged("LockoutEnabled");
			}
		}
		
		/// <summary>
		/// Shows the moment in time when the locked contact becomes unlocked again.
		/// </summary>
		[AttributeLogicalNameAttribute("adx_identity_lockoutenddate")]
		public Nullable<DateTime> LockoutEndDate
		{
			get
			{
				return this.GetAttributeValue<Nullable<DateTime>>("adx_identity_lockoutenddate");
			}
			set
			{
				this.OnPropertyChanging("LockoutEndDate");
				this.SetAttributeValue("adx_identity_lockoutenddate", value);
				this.OnPropertyChanged("LockoutEndDate");
			}
		}
		
		/// <summary>
		/// Determines if web authentication is enabled for the contact.
		/// </summary>
		[AttributeLogicalNameAttribute("adx_identity_logonenabled")]
		public Nullable<bool> LoginEnabled
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("adx_identity_logonenabled");
			}
			set
			{
				this.OnPropertyChanging("LoginEnabled");
				this.SetAttributeValue("adx_identity_logonenabled", value);
				this.OnPropertyChanged("LoginEnabled");
			}
		}
		
		/// <summary>
		/// Determines if the phone number is confirmed by the contact.
		/// </summary>
		[AttributeLogicalNameAttribute("adx_identity_mobilephoneconfirmed")]
		public Nullable<bool> MobilePhoneConfirmed
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("adx_identity_mobilephoneconfirmed");
			}
			set
			{
				this.OnPropertyChanging("MobilePhoneConfirmed");
				this.SetAttributeValue("adx_identity_mobilephoneconfirmed", value);
				this.OnPropertyChanged("MobilePhoneConfirmed");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[AttributeLogicalNameAttribute("adx_identity_newpassword")]
		public string NewPasswordInput
		{
			get
			{
				return this.GetAttributeValue<string>("adx_identity_newpassword");
			}
			set
			{
				this.OnPropertyChanging("NewPasswordInput");
				this.SetAttributeValue("adx_identity_newpassword", value);
				this.OnPropertyChanged("NewPasswordInput");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[AttributeLogicalNameAttribute("adx_identity_passwordhash")]
		public string PasswordHash
		{
			get
			{
				return this.GetAttributeValue<string>("adx_identity_passwordhash");
			}
			set
			{
				this.OnPropertyChanging("PasswordHash");
				this.SetAttributeValue("adx_identity_passwordhash", value);
				this.OnPropertyChanged("PasswordHash");
			}
		}
		
		/// <summary>
		/// A token used to manage the web authentication session.
		/// </summary>
		[AttributeLogicalNameAttribute("adx_identity_securitystamp")]
		public string SecurityStamp
		{
			get
			{
				return this.GetAttributeValue<string>("adx_identity_securitystamp");
			}
			set
			{
				this.OnPropertyChanging("SecurityStamp");
				this.SetAttributeValue("adx_identity_securitystamp", value);
				this.OnPropertyChanged("SecurityStamp");
			}
		}
		
		/// <summary>
		/// Determines if two-factor authentication is enabled for the contact.
		/// </summary>
		[AttributeLogicalNameAttribute("adx_identity_twofactorenabled")]
		public Nullable<bool> TwoFactorEnabled
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("adx_identity_twofactorenabled");
			}
			set
			{
				this.OnPropertyChanging("TwoFactorEnabled");
				this.SetAttributeValue("adx_identity_twofactorenabled", value);
				this.OnPropertyChanged("TwoFactorEnabled");
			}
		}
		
		/// <summary>
		/// Shows the user identity for local web authentication.
		/// </summary>
		[AttributeLogicalNameAttribute("adx_identity_username")]
		public string UserName
		{
			get
			{
				return this.GetAttributeValue<string>("adx_identity_username");
			}
			set
			{
				this.OnPropertyChanging("UserName");
				this.SetAttributeValue("adx_identity_username", value);
				this.OnPropertyChanged("UserName");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[AttributeLogicalNameAttribute("adx_modifiedbyipaddress")]
		public string ModifiedByIPAddress
		{
			get
			{
				return this.GetAttributeValue<string>("adx_modifiedbyipaddress");
			}
			set
			{
				this.OnPropertyChanging("ModifiedByIPAddress");
				this.SetAttributeValue("adx_modifiedbyipaddress", value);
				this.OnPropertyChanged("ModifiedByIPAddress");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[AttributeLogicalNameAttribute("adx_modifiedbyusername")]
		public string ModifiedByUsername
		{
			get
			{
				return this.GetAttributeValue<string>("adx_modifiedbyusername");
			}
			set
			{
				this.OnPropertyChanging("ModifiedByUsername");
				this.SetAttributeValue("adx_modifiedbyusername", value);
				this.OnPropertyChanged("ModifiedByUsername");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[AttributeLogicalNameAttribute("adx_organizationname")]
		public string OrganizationName
		{
			get
			{
				return this.GetAttributeValue<string>("adx_organizationname");
			}
			set
			{
				this.OnPropertyChanging("OrganizationName");
				this.SetAttributeValue("adx_organizationname", value);
				this.OnPropertyChanged("OrganizationName");
			}
		}
		
		/// <summary>
		/// User’s preferred portal language
		/// </summary>
		[AttributeLogicalNameAttribute("adx_preferredlanguageid")]
		public EntityReference PreferredLanguage
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("adx_preferredlanguageid");
			}
			set
			{
				this.OnPropertyChanging("PreferredLanguage");
				this.SetAttributeValue("adx_preferredlanguageid", value);
				this.OnPropertyChanged("PreferredLanguage");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[AttributeLogicalNameAttribute("adx_profilealert")]
		public Nullable<bool> ProfileAlert
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("adx_profilealert");
			}
			set
			{
				this.OnPropertyChanging("ProfileAlert");
				this.SetAttributeValue("adx_profilealert", value);
				this.OnPropertyChanged("ProfileAlert");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[AttributeLogicalNameAttribute("adx_profilealertdate")]
		public Nullable<DateTime> ProfileAlertDate
		{
			get
			{
				return this.GetAttributeValue<Nullable<DateTime>>("adx_profilealertdate");
			}
			set
			{
				this.OnPropertyChanging("ProfileAlertDate");
				this.SetAttributeValue("adx_profilealertdate", value);
				this.OnPropertyChanged("ProfileAlertDate");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[AttributeLogicalNameAttribute("adx_profilealertinstructions")]
		public string ProfileAlertInstructions
		{
			get
			{
				return this.GetAttributeValue<string>("adx_profilealertinstructions");
			}
			set
			{
				this.OnPropertyChanging("ProfileAlertInstructions");
				this.SetAttributeValue("adx_profilealertinstructions", value);
				this.OnPropertyChanged("ProfileAlertInstructions");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[AttributeLogicalNameAttribute("adx_profileisanonymous")]
		public Nullable<bool> ProfileIsAnonymous
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("adx_profileisanonymous");
			}
			set
			{
				this.OnPropertyChanging("ProfileIsAnonymous");
				this.SetAttributeValue("adx_profileisanonymous", value);
				this.OnPropertyChanged("ProfileIsAnonymous");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[AttributeLogicalNameAttribute("adx_profilelastactivity")]
		public Nullable<DateTime> ProfileLastActivity
		{
			get
			{
				return this.GetAttributeValue<Nullable<DateTime>>("adx_profilelastactivity");
			}
			set
			{
				this.OnPropertyChanging("ProfileLastActivity");
				this.SetAttributeValue("adx_profilelastactivity", value);
				this.OnPropertyChanged("ProfileLastActivity");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[AttributeLogicalNameAttribute("adx_profilemodifiedon")]
		public Nullable<DateTime> ProfileModifiedOn
		{
			get
			{
				return this.GetAttributeValue<Nullable<DateTime>>("adx_profilemodifiedon");
			}
			set
			{
				this.OnPropertyChanging("ProfileModifiedOn");
				this.SetAttributeValue("adx_profilemodifiedon", value);
				this.OnPropertyChanged("ProfileModifiedOn");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[AttributeLogicalNameAttribute("adx_publicprofilecopy")]
		public string PublicProfileCopy
		{
			get
			{
				return this.GetAttributeValue<string>("adx_publicprofilecopy");
			}
			set
			{
				this.OnPropertyChanging("PublicProfileCopy");
				this.SetAttributeValue("adx_publicprofilecopy", value);
				this.OnPropertyChanged("PublicProfileCopy");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[AttributeLogicalNameAttribute("adx_timezone")]
		public Nullable<int> TimeZone
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("adx_timezone");
			}
			set
			{
				this.OnPropertyChanging("TimeZone");
				this.SetAttributeValue("adx_timezone", value);
				this.OnPropertyChanged("TimeZone");
			}
		}
		
		/// <summary>
		/// For system use only.
		/// </summary>
		[AttributeLogicalNameAttribute("aging30")]
		public Money AgingThirty
		{
			get
			{
				return this.GetAttributeValue<Money>("aging30");
			}
		}
		
		/// <summary>
		/// Shows the Aging 30 field converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.
		/// </summary>
		[AttributeLogicalNameAttribute("aging30_base")]
		public Money AgingThirtyBase
		{
			get
			{
				return this.GetAttributeValue<Money>("aging30_base");
			}
		}
		
		/// <summary>
		/// For system use only.
		/// </summary>
		[AttributeLogicalNameAttribute("aging60")]
		public Money AgingSixty
		{
			get
			{
				return this.GetAttributeValue<Money>("aging60");
			}
		}
		
		/// <summary>
		/// Shows the Aging 60 field converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.
		/// </summary>
		[AttributeLogicalNameAttribute("aging60_base")]
		public Money AgingSixtyBase
		{
			get
			{
				return this.GetAttributeValue<Money>("aging60_base");
			}
		}
		
		/// <summary>
		/// For system use only.
		/// </summary>
		[AttributeLogicalNameAttribute("aging90")]
		public Money AgingNinety
		{
			get
			{
				return this.GetAttributeValue<Money>("aging90");
			}
		}
		
		/// <summary>
		/// Shows the Aging 90 field converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.
		/// </summary>
		[AttributeLogicalNameAttribute("aging90_base")]
		public Money AgingNinetyBase
		{
			get
			{
				return this.GetAttributeValue<Money>("aging90_base");
			}
		}
		
		/// <summary>
		/// Enter the date of the contact's wedding or service anniversary for use in customer gift programs or other communications.
		/// </summary>
		[AttributeLogicalNameAttribute("anniversary")]
		public Nullable<DateTime> Anniversary
		{
			get
			{
				return this.GetAttributeValue<Nullable<DateTime>>("anniversary");
			}
			set
			{
				this.OnPropertyChanging("Anniversary");
				this.SetAttributeValue("anniversary", value);
				this.OnPropertyChanged("Anniversary");
			}
		}
		
		/// <summary>
		/// Type the contact's annual income for use in profiling and financial analysis.
		/// </summary>
		[AttributeLogicalNameAttribute("annualincome")]
		public Money AnnualIncome
		{
			get
			{
				return this.GetAttributeValue<Money>("annualincome");
			}
			set
			{
				this.OnPropertyChanging("AnnualIncome");
				this.SetAttributeValue("annualincome", value);
				this.OnPropertyChanged("AnnualIncome");
			}
		}
		
		/// <summary>
		/// Shows the Annual Income field converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.
		/// </summary>
		[AttributeLogicalNameAttribute("annualincome_base")]
		public Money AnnualIncomeBase
		{
			get
			{
				return this.GetAttributeValue<Money>("annualincome_base");
			}
		}
		
		/// <summary>
		/// Type the name of the contact's assistant.
		/// </summary>
		[AttributeLogicalNameAttribute("assistantname")]
		public string Assistant
		{
			get
			{
				return this.GetAttributeValue<string>("assistantname");
			}
			set
			{
				this.OnPropertyChanging("Assistant");
				this.SetAttributeValue("assistantname", value);
				this.OnPropertyChanged("Assistant");
			}
		}
		
		/// <summary>
		/// Type the phone number for the contact's assistant.
		/// </summary>
		[AttributeLogicalNameAttribute("assistantphone")]
		public string AssistantPhone
		{
			get
			{
				return this.GetAttributeValue<string>("assistantphone");
			}
			set
			{
				this.OnPropertyChanging("AssistantPhone");
				this.SetAttributeValue("assistantphone", value);
				this.OnPropertyChanged("AssistantPhone");
			}
		}
		
		/// <summary>
		/// Enter the contact's birthday for use in customer gift programs or other communications.
		/// </summary>
		[AttributeLogicalNameAttribute("birthdate")]
		public Nullable<DateTime> Birthday
		{
			get
			{
				return this.GetAttributeValue<Nullable<DateTime>>("birthdate");
			}
			set
			{
				this.OnPropertyChanging("Birthday");
				this.SetAttributeValue("birthdate", value);
				this.OnPropertyChanged("Birthday");
			}
		}
		
		/// <summary>
		/// Type a second business phone number for this contact.
		/// </summary>
		[AttributeLogicalNameAttribute("business2")]
		public string BusinessPhoneTwo
		{
			get
			{
				return this.GetAttributeValue<string>("business2");
			}
			set
			{
				this.OnPropertyChanging("BusinessPhoneTwo");
				this.SetAttributeValue("business2", value);
				this.OnPropertyChanged("BusinessPhoneTwo");
			}
		}
		
		/// <summary>
		/// Type a callback phone number for this contact.
		/// </summary>
		[AttributeLogicalNameAttribute("callback")]
		public string CallbackNumber
		{
			get
			{
				return this.GetAttributeValue<string>("callback");
			}
			set
			{
				this.OnPropertyChanging("CallbackNumber");
				this.SetAttributeValue("callback", value);
				this.OnPropertyChanged("CallbackNumber");
			}
		}
		
		/// <summary>
		/// Type the names of the contact's children for reference in communications and client programs.
		/// </summary>
		[AttributeLogicalNameAttribute("childrensnames")]
		public string ChildrenSNames
		{
			get
			{
				return this.GetAttributeValue<string>("childrensnames");
			}
			set
			{
				this.OnPropertyChanging("ChildrenSNames");
				this.SetAttributeValue("childrensnames", value);
				this.OnPropertyChanged("ChildrenSNames");
			}
		}
		
		/// <summary>
		/// Type the company phone of the contact.
		/// </summary>
		[AttributeLogicalNameAttribute("company")]
		public string CompanyPhone
		{
			get
			{
				return this.GetAttributeValue<string>("company");
			}
			set
			{
				this.OnPropertyChanging("CompanyPhone");
				this.SetAttributeValue("company", value);
				this.OnPropertyChanged("CompanyPhone");
			}
		}
		
		/// <summary>
		/// Unique identifier of the contact.
		/// </summary>
		[AttributeLogicalNameAttribute("contactid")]
		public Nullable<Guid> ContactId
		{
			get
			{
				return this.GetAttributeValue<Nullable<Guid>>("contactid");
			}
			set
			{
				this.OnPropertyChanging("ContactId");
				this.SetAttributeValue("contactid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = Guid.Empty;
				}
				this.OnPropertyChanged("ContactId");
			}
		}
		
		[AttributeLogicalNameAttribute("contactid")]
		public override Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.ContactId = value;
			}
		}
		
		/// <summary>
		/// Shows who created the record.
		/// </summary>
		/// <remarks>
		/// The property is read-only and the setter has been added to assist with unit testing only.
		/// </remarks>
		[AttributeLogicalNameAttribute("createdby")]
		public EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("createdby");
			}
			set
			{
				this.OnPropertyChanging("CreatedBy");
				this.SetAttributeValue("createdby", value);
				this.OnPropertyChanged("CreatedBy");
			}
		}
		
		/// <summary>
		/// Shows the external party who created the record.
		/// </summary>
		[AttributeLogicalNameAttribute("createdbyexternalparty")]
		public EntityReference CreatedByExternalParty
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("createdbyexternalparty");
			}
		}
		
		/// <summary>
		/// Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
		/// </summary>
		/// <remarks>
		/// The property is read-only and the setter has been added to assist with unit testing only.
		/// </remarks>
		[AttributeLogicalNameAttribute("createdon")]
		public Nullable<DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<Nullable<DateTime>>("createdon");
			}
			set
			{
				this.OnPropertyChanging("CreatedOn");
				this.SetAttributeValue("createdon", value);
				this.OnPropertyChanged("CreatedOn");
			}
		}
		
		/// <summary>
		/// Type the credit limit of the contact for reference when you address invoice and accounting issues with the customer.
		/// </summary>
		[AttributeLogicalNameAttribute("creditlimit")]
		public Money CreditLimit
		{
			get
			{
				return this.GetAttributeValue<Money>("creditlimit");
			}
			set
			{
				this.OnPropertyChanging("CreditLimit");
				this.SetAttributeValue("creditlimit", value);
				this.OnPropertyChanged("CreditLimit");
			}
		}
		
		/// <summary>
		/// Shows the Credit Limit field converted to the system's default base currency for reporting purposes. The calculations use the exchange rate specified in the Currencies area.
		/// </summary>
		[AttributeLogicalNameAttribute("creditlimit_base")]
		public Money CreditLimitBase
		{
			get
			{
				return this.GetAttributeValue<Money>("creditlimit_base");
			}
		}
		
		/// <summary>
		/// Select whether the contact is on a credit hold, for reference when addressing invoice and accounting issues.
		/// </summary>
		[AttributeLogicalNameAttribute("creditonhold")]
		public Nullable<bool> CreditHold
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("creditonhold");
			}
			set
			{
				this.OnPropertyChanging("CreditHold");
				this.SetAttributeValue("creditonhold", value);
				this.OnPropertyChanged("CreditHold");
			}
		}
		
		/// <summary>
		/// Select the size of the contact's company for segmentation and reporting purposes.
		/// </summary>
		[AttributeLogicalNameAttribute("customersizecode")]
		public Nullable<ContactCustomerSize> CustomerSize
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("customersizecode");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (ContactCustomerSize)(Enum.ToObject(typeof(ContactCustomerSize), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("CustomerSize");
				if (value == null)
				{
					this.SetAttributeValue("customersizecode", null);
				}
				else
				{
					this.SetAttributeValue("customersizecode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("CustomerSize");
			}
		}
		
		/// <summary>
		/// Select the category that best describes the relationship between the contact and your organization.
		/// </summary>
		[AttributeLogicalNameAttribute("customertypecode")]
		public Nullable<ContactRelationshipType> RelationshipType
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("customertypecode");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (ContactRelationshipType)(Enum.ToObject(typeof(ContactRelationshipType), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("RelationshipType");
				if (value == null)
				{
					this.SetAttributeValue("customertypecode", null);
				}
				else
				{
					this.SetAttributeValue("customertypecode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("RelationshipType");
			}
		}
		
		/// <summary>
		/// Type the department or business unit where the contact works in the parent company or business.
		/// </summary>
		[AttributeLogicalNameAttribute("department")]
		public string Department
		{
			get
			{
				return this.GetAttributeValue<string>("department");
			}
			set
			{
				this.OnPropertyChanging("Department");
				this.SetAttributeValue("department", value);
				this.OnPropertyChanged("Department");
			}
		}
		
		/// <summary>
		/// Type additional information to describe the contact, such as an excerpt from the company's website.
		/// </summary>
		[AttributeLogicalNameAttribute("description")]
		public string Description
		{
			get
			{
				return this.GetAttributeValue<string>("description");
			}
			set
			{
				this.OnPropertyChanging("Description");
				this.SetAttributeValue("description", value);
				this.OnPropertyChanged("Description");
			}
		}
		
		/// <summary>
		/// Select whether the contact accepts bulk email sent through marketing campaigns or quick campaigns. If Do Not Allow is selected, the contact can be added to marketing lists, but will be excluded from the email.
		/// </summary>
		[AttributeLogicalNameAttribute("donotbulkemail")]
		public Nullable<bool> DoNotAllowBulkEmails
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("donotbulkemail");
			}
			set
			{
				this.OnPropertyChanging("DoNotAllowBulkEmails");
				this.SetAttributeValue("donotbulkemail", value);
				this.OnPropertyChanged("DoNotAllowBulkEmails");
			}
		}
		
		/// <summary>
		/// Select whether the contact accepts bulk postal mail sent through marketing campaigns or quick campaigns. If Do Not Allow is selected, the contact can be added to marketing lists, but will be excluded from the letters.
		/// </summary>
		[AttributeLogicalNameAttribute("donotbulkpostalmail")]
		public Nullable<bool> DoNotAllowBulkMails
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("donotbulkpostalmail");
			}
			set
			{
				this.OnPropertyChanging("DoNotAllowBulkMails");
				this.SetAttributeValue("donotbulkpostalmail", value);
				this.OnPropertyChanged("DoNotAllowBulkMails");
			}
		}
		
		/// <summary>
		/// Select whether the contact allows direct email sent from Microsoft Dynamics 365. If Do Not Allow is selected, Microsoft Dynamics 365 will not send the email.
		/// </summary>
		[AttributeLogicalNameAttribute("donotemail")]
		public Nullable<bool> DoNotAllowEmails
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("donotemail");
			}
			set
			{
				this.OnPropertyChanging("DoNotAllowEmails");
				this.SetAttributeValue("donotemail", value);
				this.OnPropertyChanged("DoNotAllowEmails");
			}
		}
		
		/// <summary>
		/// Select whether the contact allows faxes. If Do Not Allow is selected, the contact will be excluded from any fax activities distributed in marketing campaigns.
		/// </summary>
		[AttributeLogicalNameAttribute("donotfax")]
		public Nullable<bool> DoNotAllowFaxes
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("donotfax");
			}
			set
			{
				this.OnPropertyChanging("DoNotAllowFaxes");
				this.SetAttributeValue("donotfax", value);
				this.OnPropertyChanged("DoNotAllowFaxes");
			}
		}
		
		/// <summary>
		/// Select whether the contact accepts phone calls. If Do Not Allow is selected, the contact will be excluded from any phone call activities distributed in marketing campaigns.
		/// </summary>
		[AttributeLogicalNameAttribute("donotphone")]
		public Nullable<bool> DoNotAllowPhoneCalls
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("donotphone");
			}
			set
			{
				this.OnPropertyChanging("DoNotAllowPhoneCalls");
				this.SetAttributeValue("donotphone", value);
				this.OnPropertyChanged("DoNotAllowPhoneCalls");
			}
		}
		
		/// <summary>
		/// Select whether the contact allows direct mail. If Do Not Allow is selected, the contact will be excluded from letter activities distributed in marketing campaigns.
		/// </summary>
		[AttributeLogicalNameAttribute("donotpostalmail")]
		public Nullable<bool> DoNotAllowMails
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("donotpostalmail");
			}
			set
			{
				this.OnPropertyChanging("DoNotAllowMails");
				this.SetAttributeValue("donotpostalmail", value);
				this.OnPropertyChanged("DoNotAllowMails");
			}
		}
		
		/// <summary>
		/// Select whether the contact accepts marketing materials, such as brochures or catalogs. Contacts that opt out can be excluded from marketing initiatives.
		/// </summary>
		[AttributeLogicalNameAttribute("donotsendmm")]
		public Nullable<bool> SendMarketingMaterials
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("donotsendmm");
			}
			set
			{
				this.OnPropertyChanging("SendMarketingMaterials");
				this.SetAttributeValue("donotsendmm", value);
				this.OnPropertyChanged("SendMarketingMaterials");
			}
		}
		
		/// <summary>
		/// Select the contact's highest level of education for use in segmentation and analysis.
		/// </summary>
		[AttributeLogicalNameAttribute("educationcode")]
		public Nullable<ContactEducation> Education
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("educationcode");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (ContactEducation)(Enum.ToObject(typeof(ContactEducation), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("Education");
				if (value == null)
				{
					this.SetAttributeValue("educationcode", null);
				}
				else
				{
					this.SetAttributeValue("educationcode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("Education");
			}
		}
		
		/// <summary>
		/// Type the primary email address for the contact.
		/// </summary>
		[AttributeLogicalNameAttribute("emailaddress1")]
		public string Email
		{
			get
			{
				return this.GetAttributeValue<string>("emailaddress1");
			}
			set
			{
				this.OnPropertyChanging("Email");
				this.SetAttributeValue("emailaddress1", value);
				this.OnPropertyChanged("Email");
			}
		}
		
		/// <summary>
		/// Type the secondary email address for the contact.
		/// </summary>
		[AttributeLogicalNameAttribute("emailaddress2")]
		public string EmailAddressTwo
		{
			get
			{
				return this.GetAttributeValue<string>("emailaddress2");
			}
			set
			{
				this.OnPropertyChanging("EmailAddressTwo");
				this.SetAttributeValue("emailaddress2", value);
				this.OnPropertyChanged("EmailAddressTwo");
			}
		}
		
		/// <summary>
		/// Type an alternate email address for the contact.
		/// </summary>
		[AttributeLogicalNameAttribute("emailaddress3")]
		public string EmailAddressThree
		{
			get
			{
				return this.GetAttributeValue<string>("emailaddress3");
			}
			set
			{
				this.OnPropertyChanging("EmailAddressThree");
				this.SetAttributeValue("emailaddress3", value);
				this.OnPropertyChanged("EmailAddressThree");
			}
		}
		
		/// <summary>
		/// Type the employee ID or number for the contact for reference in orders, service cases, or other communications with the contact's organization.
		/// </summary>
		[AttributeLogicalNameAttribute("employeeid")]
		public string Employee
		{
			get
			{
				return this.GetAttributeValue<string>("employeeid");
			}
			set
			{
				this.OnPropertyChanging("Employee");
				this.SetAttributeValue("employeeid", value);
				this.OnPropertyChanged("Employee");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[AttributeLogicalNameAttribute("entityimageid")]
		public Nullable<Guid> EntityImageId
		{
			get
			{
				return this.GetAttributeValue<Nullable<Guid>>("entityimageid");
			}
		}
		
		/// <summary>
		/// Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.
		/// </summary>
		[AttributeLogicalNameAttribute("exchangerate")]
		public Nullable<decimal> ExchangeRate
		{
			get
			{
				return this.GetAttributeValue<Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Identifier for an external user.
		/// </summary>
		[AttributeLogicalNameAttribute("externaluseridentifier")]
		public string ExternalUserIdentifier
		{
			get
			{
				return this.GetAttributeValue<string>("externaluseridentifier");
			}
			set
			{
				this.OnPropertyChanging("ExternalUserIdentifier");
				this.SetAttributeValue("externaluseridentifier", value);
				this.OnPropertyChanged("ExternalUserIdentifier");
			}
		}
		
		/// <summary>
		/// Select the marital status of the contact for reference in follow-up phone calls and other communications.
		/// </summary>
		[AttributeLogicalNameAttribute("familystatuscode")]
		public Nullable<ContactMaritalStatus> MaritalStatus
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("familystatuscode");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (ContactMaritalStatus)(Enum.ToObject(typeof(ContactMaritalStatus), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("MaritalStatus");
				if (value == null)
				{
					this.SetAttributeValue("familystatuscode", null);
				}
				else
				{
					this.SetAttributeValue("familystatuscode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("MaritalStatus");
			}
		}
		
		/// <summary>
		/// Type the fax number for the contact.
		/// </summary>
		[AttributeLogicalNameAttribute("fax")]
		public string Fax
		{
			get
			{
				return this.GetAttributeValue<string>("fax");
			}
			set
			{
				this.OnPropertyChanging("Fax");
				this.SetAttributeValue("fax", value);
				this.OnPropertyChanged("Fax");
			}
		}
		
		/// <summary>
		/// Type the contact's first name to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.
		/// </summary>
		[AttributeLogicalNameAttribute("firstname")]
		public string FirstName
		{
			get
			{
				return this.GetAttributeValue<string>("firstname");
			}
			set
			{
				this.OnPropertyChanging("FirstName");
				this.SetAttributeValue("firstname", value);
				this.OnPropertyChanged("FirstName");
			}
		}
		
		/// <summary>
		/// Information about whether to allow following email activity like opens, attachment views and link clicks for emails sent to the contact.
		/// </summary>
		[AttributeLogicalNameAttribute("followemail")]
		public Nullable<bool> FollowEmailActivity
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("followemail");
			}
			set
			{
				this.OnPropertyChanging("FollowEmailActivity");
				this.SetAttributeValue("followemail", value);
				this.OnPropertyChanged("FollowEmailActivity");
			}
		}
		
		/// <summary>
		/// Type the URL for the contact's FTP site to enable users to access data and share documents.
		/// </summary>
		[AttributeLogicalNameAttribute("ftpsiteurl")]
		public string FTPSite
		{
			get
			{
				return this.GetAttributeValue<string>("ftpsiteurl");
			}
			set
			{
				this.OnPropertyChanging("FTPSite");
				this.SetAttributeValue("ftpsiteurl", value);
				this.OnPropertyChanged("FTPSite");
			}
		}
		
		/// <summary>
		/// Combines and shows the contact's first and last names so that the full name can be displayed in views and reports.
		/// </summary>
		[AttributeLogicalNameAttribute("fullname")]
		public string FullName
		{
			get
			{
				return this.GetAttributeValue<string>("fullname");
			}
		}
		
		/// <summary>
		/// Select the contact's gender to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.
		/// </summary>
		[AttributeLogicalNameAttribute("gendercode")]
		public Nullable<ContactGender> Gender
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("gendercode");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (ContactGender)(Enum.ToObject(typeof(ContactGender), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("Gender");
				if (value == null)
				{
					this.SetAttributeValue("gendercode", null);
				}
				else
				{
					this.SetAttributeValue("gendercode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("Gender");
			}
		}
		
		/// <summary>
		/// Type the passport number or other government ID for the contact for use in documents or reports.
		/// </summary>
		[AttributeLogicalNameAttribute("governmentid")]
		public string Government
		{
			get
			{
				return this.GetAttributeValue<string>("governmentid");
			}
			set
			{
				this.OnPropertyChanging("Government");
				this.SetAttributeValue("governmentid", value);
				this.OnPropertyChanged("Government");
			}
		}
		
		/// <summary>
		/// Select whether the contact has any children for reference in follow-up phone calls and other communications.
		/// </summary>
		[AttributeLogicalNameAttribute("haschildrencode")]
		public Nullable<ContactHasChildren> HasChildren
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("haschildrencode");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (ContactHasChildren)(Enum.ToObject(typeof(ContactHasChildren), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("HasChildren");
				if (value == null)
				{
					this.SetAttributeValue("haschildrencode", null);
				}
				else
				{
					this.SetAttributeValue("haschildrencode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("HasChildren");
			}
		}
		
		/// <summary>
		/// Type a second home phone number for this contact.
		/// </summary>
		[AttributeLogicalNameAttribute("home2")]
		public string HomePhoneTwo
		{
			get
			{
				return this.GetAttributeValue<string>("home2");
			}
			set
			{
				this.OnPropertyChanging("HomePhoneTwo");
				this.SetAttributeValue("home2", value);
				this.OnPropertyChanged("HomePhoneTwo");
			}
		}
		
		/// <summary>
		/// Select whether the contact exists in a separate accounting or other system, such as Microsoft Dynamics GP or another ERP database, for use in integration processes.
		/// </summary>
		[AttributeLogicalNameAttribute("isbackofficecustomer")]
		public Nullable<bool> BackOfficeCustomer
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("isbackofficecustomer");
			}
			set
			{
				this.OnPropertyChanging("BackOfficeCustomer");
				this.SetAttributeValue("isbackofficecustomer", value);
				this.OnPropertyChanged("BackOfficeCustomer");
			}
		}
		
		/// <summary>
		/// Type the job title of the contact to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.
		/// </summary>
		[AttributeLogicalNameAttribute("jobtitle")]
		public string JobTitle
		{
			get
			{
				return this.GetAttributeValue<string>("jobtitle");
			}
			set
			{
				this.OnPropertyChanging("JobTitle");
				this.SetAttributeValue("jobtitle", value);
				this.OnPropertyChanged("JobTitle");
			}
		}
		
		/// <summary>
		/// Type the contact's last name to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.
		/// </summary>
		[AttributeLogicalNameAttribute("lastname")]
		public string LastName
		{
			get
			{
				return this.GetAttributeValue<string>("lastname");
			}
			set
			{
				this.OnPropertyChanging("LastName");
				this.SetAttributeValue("lastname", value);
				this.OnPropertyChanged("LastName");
			}
		}
		
		/// <summary>
		/// Contains the date and time stamp of the last on hold time.
		/// </summary>
		[AttributeLogicalNameAttribute("lastonholdtime")]
		public Nullable<DateTime> LastOnHoldTime
		{
			get
			{
				return this.GetAttributeValue<Nullable<DateTime>>("lastonholdtime");
			}
			set
			{
				this.OnPropertyChanging("LastOnHoldTime");
				this.SetAttributeValue("lastonholdtime", value);
				this.OnPropertyChanged("LastOnHoldTime");
			}
		}
		
		/// <summary>
		/// Shows the date when the contact was last included in a marketing campaign or quick campaign.
		/// </summary>
		[AttributeLogicalNameAttribute("lastusedincampaign")]
		public Nullable<DateTime> LastDateIncludedInCampaign
		{
			get
			{
				return this.GetAttributeValue<Nullable<DateTime>>("lastusedincampaign");
			}
			set
			{
				this.OnPropertyChanging("LastDateIncludedInCampaign");
				this.SetAttributeValue("lastusedincampaign", value);
				this.OnPropertyChanged("LastDateIncludedInCampaign");
			}
		}
		
		/// <summary>
		/// Select the primary marketing source that directed the contact to your organization.
		/// </summary>
		[AttributeLogicalNameAttribute("leadsourcecode")]
		public Nullable<ContactLeadSource> LeadSource
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("leadsourcecode");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (ContactLeadSource)(Enum.ToObject(typeof(ContactLeadSource), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("LeadSource");
				if (value == null)
				{
					this.SetAttributeValue("leadsourcecode", null);
				}
				else
				{
					this.SetAttributeValue("leadsourcecode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("LeadSource");
			}
		}
		
		/// <summary>
		/// Type the name of the contact's manager for use in escalating issues or other follow-up communications with the contact.
		/// </summary>
		[AttributeLogicalNameAttribute("managername")]
		public string Manager
		{
			get
			{
				return this.GetAttributeValue<string>("managername");
			}
			set
			{
				this.OnPropertyChanging("Manager");
				this.SetAttributeValue("managername", value);
				this.OnPropertyChanged("Manager");
			}
		}
		
		/// <summary>
		/// Type the phone number for the contact's manager.
		/// </summary>
		[AttributeLogicalNameAttribute("managerphone")]
		public string ManagerPhone
		{
			get
			{
				return this.GetAttributeValue<string>("managerphone");
			}
			set
			{
				this.OnPropertyChanging("ManagerPhone");
				this.SetAttributeValue("managerphone", value);
				this.OnPropertyChanged("ManagerPhone");
			}
		}
		
		/// <summary>
		/// Whether is only for marketing
		/// </summary>
		[AttributeLogicalNameAttribute("marketingonly")]
		public Nullable<bool> MarketingOnly
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("marketingonly");
			}
			set
			{
				this.OnPropertyChanging("MarketingOnly");
				this.SetAttributeValue("marketingonly", value);
				this.OnPropertyChanged("MarketingOnly");
			}
		}
		
		/// <summary>
		/// Unique identifier of the master contact for merge.
		/// </summary>
		[AttributeLogicalNameAttribute("masterid")]
		public EntityReference MasterID
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("masterid");
			}
		}
		
		/// <summary>
		/// Shows whether the account has been merged with a master contact.
		/// </summary>
		[AttributeLogicalNameAttribute("merged")]
		public Nullable<bool> Merged
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("merged");
			}
		}
		
		/// <summary>
		/// Type the contact's middle name or initial to make sure the contact is addressed correctly.
		/// </summary>
		[AttributeLogicalNameAttribute("middlename")]
		public string MiddleName
		{
			get
			{
				return this.GetAttributeValue<string>("middlename");
			}
			set
			{
				this.OnPropertyChanging("MiddleName");
				this.SetAttributeValue("middlename", value);
				this.OnPropertyChanged("MiddleName");
			}
		}
		
		/// <summary>
		/// Type the mobile phone number for the contact.
		/// </summary>
		[AttributeLogicalNameAttribute("mobilephone")]
		public string MobilePhone
		{
			get
			{
				return this.GetAttributeValue<string>("mobilephone");
			}
			set
			{
				this.OnPropertyChanging("MobilePhone");
				this.SetAttributeValue("mobilephone", value);
				this.OnPropertyChanged("MobilePhone");
			}
		}
		
		/// <summary>
		/// Shows who last updated the record.
		/// </summary>
		/// <remarks>
		/// The property is read-only and the setter has been added to assist with unit testing only.
		/// </remarks>
		[AttributeLogicalNameAttribute("modifiedby")]
		public EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("modifiedby");
			}
			set
			{
				this.OnPropertyChanging("ModifiedBy");
				this.SetAttributeValue("modifiedby", value);
				this.OnPropertyChanged("ModifiedBy");
			}
		}
		
		/// <summary>
		/// Shows the external party who modified the record.
		/// </summary>
		[AttributeLogicalNameAttribute("modifiedbyexternalparty")]
		public EntityReference ModifiedByExternalParty
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("modifiedbyexternalparty");
			}
		}
		
		/// <summary>
		/// Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
		/// </summary>
		/// <remarks>
		/// The property is read-only and the setter has been added to assist with unit testing only.
		/// </remarks>
		[AttributeLogicalNameAttribute("modifiedon")]
		public Nullable<DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<Nullable<DateTime>>("modifiedon");
			}
			set
			{
				this.OnPropertyChanging("ModifiedOn");
				this.SetAttributeValue("modifiedon", value);
				this.OnPropertyChanged("ModifiedOn");
			}
		}
		
		/// <summary>
		/// Unique identifier for Account associated with Contact.
		/// </summary>
		[AttributeLogicalNameAttribute("msa_managingpartnerid")]
		public EntityReference ManagingPartner
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("msa_managingpartnerid");
			}
			set
			{
				this.OnPropertyChanging("ManagingPartner");
				this.SetAttributeValue("msa_managingpartnerid", value);
				this.OnPropertyChanged("ManagingPartner");
			}
		}
		
		/// <summary>
		/// Indicates that the contact has opted out of web tracking.
		/// </summary>
		[AttributeLogicalNameAttribute("msdyn_disablewebtracking")]
		public Nullable<bool> DisableWebTracking
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("msdyn_disablewebtracking");
			}
			set
			{
				this.OnPropertyChanging("DisableWebTracking");
				this.SetAttributeValue("msdyn_disablewebtracking", value);
				this.OnPropertyChanged("DisableWebTracking");
			}
		}
		
		/// <summary>
		/// Indicates that the contact is considered a minor in their jurisdiction.
		/// </summary>
		[AttributeLogicalNameAttribute("msdyn_isminor")]
		public Nullable<bool> IsMinor
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("msdyn_isminor");
			}
			set
			{
				this.OnPropertyChanging("IsMinor");
				this.SetAttributeValue("msdyn_isminor", value);
				this.OnPropertyChanged("IsMinor");
			}
		}
		
		/// <summary>
		/// Indicates that the contact is considered a minor in their jurisdiction and has parental consent.
		/// </summary>
		[AttributeLogicalNameAttribute("msdyn_isminorwithparentalconsent")]
		public Nullable<bool> IsMinorWithParentalConsent
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("msdyn_isminorwithparentalconsent");
			}
			set
			{
				this.OnPropertyChanging("IsMinorWithParentalConsent");
				this.SetAttributeValue("msdyn_isminorwithparentalconsent", value);
				this.OnPropertyChanged("IsMinorWithParentalConsent");
			}
		}
		
		/// <summary>
		/// Indicates the date and time that the person agreed to the portal terms and conditions.
		/// </summary>
		[AttributeLogicalNameAttribute("msdyn_portaltermsagreementdate")]
		public Nullable<DateTime> PortalTermsAgreementDate
		{
			get
			{
				return this.GetAttributeValue<Nullable<DateTime>>("msdyn_portaltermsagreementdate");
			}
			set
			{
				this.OnPropertyChanging("PortalTermsAgreementDate");
				this.SetAttributeValue("msdyn_portaltermsagreementdate", value);
				this.OnPropertyChanged("PortalTermsAgreementDate");
			}
		}
		
		/// <summary>
		/// Type the contact's nickname.
		/// </summary>
		[AttributeLogicalNameAttribute("nickname")]
		public string Nickname
		{
			get
			{
				return this.GetAttributeValue<string>("nickname");
			}
			set
			{
				this.OnPropertyChanging("Nickname");
				this.SetAttributeValue("nickname", value);
				this.OnPropertyChanged("Nickname");
			}
		}
		
		/// <summary>
		/// Type the number of children the contact has for reference in follow-up phone calls and other communications.
		/// </summary>
		[AttributeLogicalNameAttribute("numberofchildren")]
		public Nullable<int> NoOfChildren
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("numberofchildren");
			}
			set
			{
				this.OnPropertyChanging("NoOfChildren");
				this.SetAttributeValue("numberofchildren", value);
				this.OnPropertyChanged("NoOfChildren");
			}
		}
		
		/// <summary>
		/// Shows how long, in minutes, that the record was on hold.
		/// </summary>
		[AttributeLogicalNameAttribute("onholdtime")]
		public Nullable<int> OnHoldTimeMinutes
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("onholdtime");
			}
		}
		
		/// <summary>
		/// Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.
		/// </summary>
		[AttributeLogicalNameAttribute("ownerid")]
		public EntityReference Owner
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("ownerid");
			}
			set
			{
				this.OnPropertyChanging("Owner");
				this.SetAttributeValue("ownerid", value);
				this.OnPropertyChanged("Owner");
			}
		}
		
		/// <summary>
		/// Unique identifier of the business unit that owns the contact.
		/// </summary>
		[AttributeLogicalNameAttribute("owningbusinessunit")]
		public EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier of the team who owns the contact.
		/// </summary>
		[AttributeLogicalNameAttribute("owningteam")]
		public EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who owns the contact.
		/// </summary>
		[AttributeLogicalNameAttribute("owninguser")]
		public EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Type the pager number for the contact.
		/// </summary>
		[AttributeLogicalNameAttribute("pager")]
		public string Pager
		{
			get
			{
				return this.GetAttributeValue<string>("pager");
			}
			set
			{
				this.OnPropertyChanging("Pager");
				this.SetAttributeValue("pager", value);
				this.OnPropertyChanged("Pager");
			}
		}
		
		/// <summary>
		/// Unique identifier of the parent contact.
		/// </summary>
		[AttributeLogicalNameAttribute("parentcontactid")]
		public EntityReference ParentContact
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("parentcontactid");
			}
		}
		
		/// <summary>
		/// Select the parent account or parent contact for the contact to provide a quick link to additional details, such as financial information, activities, and opportunities.
		/// </summary>
		[AttributeLogicalNameAttribute("parentcustomerid")]
		public EntityReference CompanyName
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("parentcustomerid");
			}
			set
			{
				this.OnPropertyChanging("CompanyName");
				this.SetAttributeValue("parentcustomerid", value);
				this.OnPropertyChanged("CompanyName");
			}
		}
		
		/// <summary>
		/// Shows whether the contact participates in workflow rules.
		/// </summary>
		[AttributeLogicalNameAttribute("participatesinworkflow")]
		public Nullable<bool> ParticipatesInWorkflow
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("participatesinworkflow");
			}
			set
			{
				this.OnPropertyChanging("ParticipatesInWorkflow");
				this.SetAttributeValue("participatesinworkflow", value);
				this.OnPropertyChanged("ParticipatesInWorkflow");
			}
		}
		
		/// <summary>
		/// Select the payment terms to indicate when the customer needs to pay the total amount.
		/// </summary>
		[AttributeLogicalNameAttribute("paymenttermscode")]
		public Nullable<ContactPaymentTerms> PaymentTerms
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("paymenttermscode");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (ContactPaymentTerms)(Enum.ToObject(typeof(ContactPaymentTerms), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("PaymentTerms");
				if (value == null)
				{
					this.SetAttributeValue("paymenttermscode", null);
				}
				else
				{
					this.SetAttributeValue("paymenttermscode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("PaymentTerms");
			}
		}
		
		/// <summary>
		/// Select the preferred day of the week for service appointments.
		/// </summary>
		[AttributeLogicalNameAttribute("preferredappointmentdaycode")]
		public Nullable<ContactPreferredDay> PreferredDay
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("preferredappointmentdaycode");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (ContactPreferredDay)(Enum.ToObject(typeof(ContactPreferredDay), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("PreferredDay");
				if (value == null)
				{
					this.SetAttributeValue("preferredappointmentdaycode", null);
				}
				else
				{
					this.SetAttributeValue("preferredappointmentdaycode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("PreferredDay");
			}
		}
		
		/// <summary>
		/// Select the preferred time of day for service appointments.
		/// </summary>
		[AttributeLogicalNameAttribute("preferredappointmenttimecode")]
		public Nullable<ContactPreferredTime> PreferredTime
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("preferredappointmenttimecode");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (ContactPreferredTime)(Enum.ToObject(typeof(ContactPreferredTime), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("PreferredTime");
				if (value == null)
				{
					this.SetAttributeValue("preferredappointmenttimecode", null);
				}
				else
				{
					this.SetAttributeValue("preferredappointmenttimecode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("PreferredTime");
			}
		}
		
		/// <summary>
		/// Select the preferred method of contact.
		/// </summary>
		[AttributeLogicalNameAttribute("preferredcontactmethodcode")]
		public Nullable<ContactPreferredMethodOfContact> PreferredMethodOfContact
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("preferredcontactmethodcode");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (ContactPreferredMethodOfContact)(Enum.ToObject(typeof(ContactPreferredMethodOfContact), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("PreferredMethodOfContact");
				if (value == null)
				{
					this.SetAttributeValue("preferredcontactmethodcode", null);
				}
				else
				{
					this.SetAttributeValue("preferredcontactmethodcode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("PreferredMethodOfContact");
			}
		}
		
		/// <summary>
		/// Choose the regular or preferred customer service representative for reference when scheduling service activities for the contact.
		/// </summary>
		[AttributeLogicalNameAttribute("preferredsystemuserid")]
		public EntityReference PreferredUser
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("preferredsystemuserid");
			}
			set
			{
				this.OnPropertyChanging("PreferredUser");
				this.SetAttributeValue("preferredsystemuserid", value);
				this.OnPropertyChanged("PreferredUser");
			}
		}
		
		/// <summary>
		/// Shows the ID of the process.
		/// </summary>
		[AttributeLogicalNameAttribute("processid")]
		public Nullable<Guid> Process
		{
			get
			{
				return this.GetAttributeValue<Nullable<Guid>>("processid");
			}
			set
			{
				this.OnPropertyChanging("Process");
				this.SetAttributeValue("processid", value);
				this.OnPropertyChanged("Process");
			}
		}
		
		/// <summary>
		/// Type the salutation of the contact to make sure the contact is addressed correctly in sales calls, email messages, and marketing campaigns.
		/// </summary>
		[AttributeLogicalNameAttribute("salutation")]
		public string Salutation
		{
			get
			{
				return this.GetAttributeValue<string>("salutation");
			}
			set
			{
				this.OnPropertyChanging("Salutation");
				this.SetAttributeValue("salutation", value);
				this.OnPropertyChanged("Salutation");
			}
		}
		
		/// <summary>
		/// Unique identifier for Idea associated with Contact.
		/// </summary>
		[AttributeLogicalNameAttribute("sample_contributorsid")]
		public EntityReference Contributors
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("sample_contributorsid");
			}
			set
			{
				this.OnPropertyChanging("Contributors");
				this.SetAttributeValue("sample_contributorsid", value);
				this.OnPropertyChanged("Contributors");
			}
		}
		
		/// <summary>
		/// Select a shipping method for deliveries sent to this address.
		/// </summary>
		[AttributeLogicalNameAttribute("shippingmethodcode")]
		public Nullable<ContactShippingMethod> ShippingMethod
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("shippingmethodcode");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (ContactShippingMethod)(Enum.ToObject(typeof(ContactShippingMethod), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("ShippingMethod");
				if (value == null)
				{
					this.SetAttributeValue("shippingmethodcode", null);
				}
				else
				{
					this.SetAttributeValue("shippingmethodcode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("ShippingMethod");
			}
		}
		
		/// <summary>
		/// Choose the service level agreement (SLA) that you want to apply to the Contact record.
		/// </summary>
		[AttributeLogicalNameAttribute("slaid")]
		public EntityReference SLA
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("slaid");
			}
			set
			{
				this.OnPropertyChanging("SLA");
				this.SetAttributeValue("slaid", value);
				this.OnPropertyChanged("SLA");
			}
		}
		
		/// <summary>
		/// Last SLA that was applied to this case. This field is for internal use only.
		/// </summary>
		[AttributeLogicalNameAttribute("slainvokedid")]
		public EntityReference LastSLAApplied
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("slainvokedid");
			}
		}
		
		/// <summary>
		/// Type the name of the contact's spouse or partner for reference during calls, events, or other communications with the contact.
		/// </summary>
		[AttributeLogicalNameAttribute("spousesname")]
		public string SpousePartnerName
		{
			get
			{
				return this.GetAttributeValue<string>("spousesname");
			}
			set
			{
				this.OnPropertyChanging("SpousePartnerName");
				this.SetAttributeValue("spousesname", value);
				this.OnPropertyChanged("SpousePartnerName");
			}
		}
		
		/// <summary>
		/// Shows the ID of the stage.
		/// </summary>
		[AttributeLogicalNameAttribute("stageid")]
		public Nullable<Guid> DeprecatedProcessStage
		{
			get
			{
				return this.GetAttributeValue<Nullable<Guid>>("stageid");
			}
			set
			{
				this.OnPropertyChanging("DeprecatedProcessStage");
				this.SetAttributeValue("stageid", value);
				this.OnPropertyChanged("DeprecatedProcessStage");
			}
		}
		
		/// <summary>
		/// Shows whether the contact is active or inactive. Inactive contacts are read-only and can't be edited unless they are reactivated.
		/// </summary>
		[AttributeLogicalNameAttribute("statecode")]
		public Nullable<ContactState> State
		{
			get
			{
				OptionSetValue optionSet = this.GetAttributeValue<OptionSetValue>("statecode");
				if (optionSet != null)
				{
					return ((ContactState)(Enum.ToObject(typeof(ContactState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("State");
				if (value == null)
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("State");
			}
		}
		
		/// <summary>
		/// Select the contact's status.
		/// </summary>
		[AttributeLogicalNameAttribute("statuscode")]
		public Nullable<ContactStatusReason> StatusReason
		{
			get
			{
				OptionSetValue optionSet = this.GetAttributeValue<OptionSetValue>("statuscode");
				if (optionSet != null)
				{
					return ((ContactStatusReason)(Enum.ToObject(typeof(ContactStatusReason), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("StatusReason");
				if (value == null)
				{
					this.SetAttributeValue("statuscode", null);
				}
				else
				{
					this.SetAttributeValue("statuscode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("StatusReason");
			}
		}
		
		/// <summary>
		/// Type the suffix used in the contact's name, such as Jr. or Sr. to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.
		/// </summary>
		[AttributeLogicalNameAttribute("suffix")]
		public string Suffix
		{
			get
			{
				return this.GetAttributeValue<string>("suffix");
			}
			set
			{
				this.OnPropertyChanging("Suffix");
				this.SetAttributeValue("suffix", value);
				this.OnPropertyChanged("Suffix");
			}
		}
		
		/// <summary>
		/// Type the main phone number for this contact.
		/// </summary>
		[AttributeLogicalNameAttribute("telephone1")]
		public string BusinessPhone
		{
			get
			{
				return this.GetAttributeValue<string>("telephone1");
			}
			set
			{
				this.OnPropertyChanging("BusinessPhone");
				this.SetAttributeValue("telephone1", value);
				this.OnPropertyChanged("BusinessPhone");
			}
		}
		
		/// <summary>
		/// Type a second phone number for this contact.
		/// </summary>
		[AttributeLogicalNameAttribute("telephone2")]
		public string HomePhone
		{
			get
			{
				return this.GetAttributeValue<string>("telephone2");
			}
			set
			{
				this.OnPropertyChanging("HomePhone");
				this.SetAttributeValue("telephone2", value);
				this.OnPropertyChanged("HomePhone");
			}
		}
		
		/// <summary>
		/// Type a third phone number for this contact.
		/// </summary>
		[AttributeLogicalNameAttribute("telephone3")]
		public string TelephoneThree
		{
			get
			{
				return this.GetAttributeValue<string>("telephone3");
			}
			set
			{
				this.OnPropertyChanging("TelephoneThree");
				this.SetAttributeValue("telephone3", value);
				this.OnPropertyChanged("TelephoneThree");
			}
		}
		
		/// <summary>
		/// Select a region or territory for the contact for use in segmentation and analysis.
		/// </summary>
		[AttributeLogicalNameAttribute("territorycode")]
		public Nullable<ContactTerritory> Territory
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("territorycode");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (ContactTerritory)(Enum.ToObject(typeof(ContactTerritory), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("Territory");
				if (value == null)
				{
					this.SetAttributeValue("territorycode", null);
				}
				else
				{
					this.SetAttributeValue("territorycode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("Territory");
			}
		}
		
		/// <summary>
		/// Total time spent for emails (read and write) and meetings by me in relation to the contact record.
		/// </summary>
		[AttributeLogicalNameAttribute("timespentbymeonemailandmeetings")]
		public string TimeSpentByMe
		{
			get
			{
				return this.GetAttributeValue<string>("timespentbymeonemailandmeetings");
			}
		}
		
		/// <summary>
		/// Choose the local currency for the record to make sure budgets are reported in the correct currency.
		/// </summary>
		[AttributeLogicalNameAttribute("transactioncurrencyid")]
		public EntityReference Currency
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("transactioncurrencyid");
			}
			set
			{
				this.OnPropertyChanging("Currency");
				this.SetAttributeValue("transactioncurrencyid", value);
				this.OnPropertyChanged("Currency");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[AttributeLogicalNameAttribute("traversedpath")]
		public string DeprecatedTraversedPath
		{
			get
			{
				return this.GetAttributeValue<string>("traversedpath");
			}
			set
			{
				this.OnPropertyChanging("DeprecatedTraversedPath");
				this.SetAttributeValue("traversedpath", value);
				this.OnPropertyChanged("DeprecatedTraversedPath");
			}
		}
		
		/// <summary>
		/// Type the contact's professional or personal website or blog URL.
		/// </summary>
		[AttributeLogicalNameAttribute("websiteurl")]
		public string Website
		{
			get
			{
				return this.GetAttributeValue<string>("websiteurl");
			}
			set
			{
				this.OnPropertyChanging("Website");
				this.SetAttributeValue("websiteurl", value);
				this.OnPropertyChanged("Website");
			}
		}
		
		/// <summary>
		/// Type the phonetic spelling of the contact's first name, if the name is specified in Japanese, to make sure the name is pronounced correctly in phone calls with the contact.
		/// </summary>
		[AttributeLogicalNameAttribute("yomifirstname")]
		public string YomiFirstName
		{
			get
			{
				return this.GetAttributeValue<string>("yomifirstname");
			}
			set
			{
				this.OnPropertyChanging("YomiFirstName");
				this.SetAttributeValue("yomifirstname", value);
				this.OnPropertyChanged("YomiFirstName");
			}
		}
		
		/// <summary>
		/// Shows the combined Yomi first and last names of the contact so that the full phonetic name can be displayed in views and reports.
		/// </summary>
		[AttributeLogicalNameAttribute("yomifullname")]
		public string YomiFullName
		{
			get
			{
				return this.GetAttributeValue<string>("yomifullname");
			}
		}
		
		/// <summary>
		/// Type the phonetic spelling of the contact's last name, if the name is specified in Japanese, to make sure the name is pronounced correctly in phone calls with the contact.
		/// </summary>
		[AttributeLogicalNameAttribute("yomilastname")]
		public string YomiLastName
		{
			get
			{
				return this.GetAttributeValue<string>("yomilastname");
			}
			set
			{
				this.OnPropertyChanging("YomiLastName");
				this.SetAttributeValue("yomilastname", value);
				this.OnPropertyChanged("YomiLastName");
			}
		}
		
		/// <summary>
		/// Type the phonetic spelling of the contact's middle name, if the name is specified in Japanese, to make sure the name is pronounced correctly in phone calls with the contact.
		/// </summary>
		[AttributeLogicalNameAttribute("yomimiddlename")]
		public string YomiMiddleName
		{
			get
			{
				return this.GetAttributeValue<string>("yomimiddlename");
			}
			set
			{
				this.OnPropertyChanging("YomiMiddleName");
				this.SetAttributeValue("yomimiddlename", value);
				this.OnPropertyChanged("YomiMiddleName");
			}
		}
		
		public struct Fields
		{
			
			public static string Account = "accountid";
			
			public static string Role = "accountrolecode";
			
			public static string AddressOneAddressId = "address1_addressid";
			
			public static string AddressOneAddressType = "address1_addresstypecode";
			
			public static string AddressOneCity = "address1_city";
			
			public static string AddressOne = "address1_composite";
			
			public static string AddressOneCountryRegion = "address1_country";
			
			public static string AddressOneCounty = "address1_county";
			
			public static string AddressOneFax = "address1_fax";
			
			public static string AddressOneFreightTerms = "address1_freighttermscode";
			
			public static string AddressOneLatitude = "address1_latitude";
			
			public static string AddressOneStreetOne = "address1_line1";
			
			public static string AddressOneStreetTwo = "address1_line2";
			
			public static string AddressOneStreetThree = "address1_line3";
			
			public static string AddressOneLongitude = "address1_longitude";
			
			public static string AddressOneName = "address1_name";
			
			public static string AddressOneZIPPostalCode = "address1_postalcode";
			
			public static string AddressOnePostOfficeBox = "address1_postofficebox";
			
			public static string AddressOnePrimaryContactName = "address1_primarycontactname";
			
			public static string AddressOneShippingMethod = "address1_shippingmethodcode";
			
			public static string AddressOneStateProvince = "address1_stateorprovince";
			
			public static string AddressOnePhone = "address1_telephone1";
			
			public static string AddressOneTelephoneTwo = "address1_telephone2";
			
			public static string AddressOneTelephoneThree = "address1_telephone3";
			
			public static string AddressOneUPSZone = "address1_upszone";
			
			public static string AddressOneUTCOffset = "address1_utcoffset";
			
			public static string AddressTwoAddressId = "address2_addressid";
			
			public static string AddressTwoAddressType = "address2_addresstypecode";
			
			public static string AddressTwoCity = "address2_city";
			
			public static string AddressTwo = "address2_composite";
			
			public static string AddressTwoCountryRegion = "address2_country";
			
			public static string AddressTwoCounty = "address2_county";
			
			public static string AddressTwoFax = "address2_fax";
			
			public static string AddressTwoFreightTerms = "address2_freighttermscode";
			
			public static string AddressTwoLatitude = "address2_latitude";
			
			public static string AddressTwoStreetOne = "address2_line1";
			
			public static string AddressTwoStreetTwo = "address2_line2";
			
			public static string AddressTwoStreetThree = "address2_line3";
			
			public static string AddressTwoLongitude = "address2_longitude";
			
			public static string AddressTwoName = "address2_name";
			
			public static string AddressTwoZIPPostalCode = "address2_postalcode";
			
			public static string AddressTwoPostOfficeBox = "address2_postofficebox";
			
			public static string AddressTwoPrimaryContactName = "address2_primarycontactname";
			
			public static string AddressTwoShippingMethod = "address2_shippingmethodcode";
			
			public static string AddressTwoStateProvince = "address2_stateorprovince";
			
			public static string AddressTwoTelephoneOne = "address2_telephone1";
			
			public static string AddressTwoTelephoneTwo = "address2_telephone2";
			
			public static string AddressTwoTelephoneThree = "address2_telephone3";
			
			public static string AddressTwoUPSZone = "address2_upszone";
			
			public static string AddressTwoUTCOffset = "address2_utcoffset";
			
			public static string AddressThreeAddressId = "address3_addressid";
			
			public static string AddressThreeAddressType = "address3_addresstypecode";
			
			public static string AddressThreeCity = "address3_city";
			
			public static string AddressThree = "address3_composite";
			
			public static string AddressThreeCountryRegion = "address3_country";
			
			public static string AddressThreeCounty = "address3_county";
			
			public static string AddressThreeFax = "address3_fax";
			
			public static string AddressThreeFreightTerms = "address3_freighttermscode";
			
			public static string AddressThreeLatitude = "address3_latitude";
			
			public static string AddressThreeStreetOne = "address3_line1";
			
			public static string AddressThreeStreetTwo = "address3_line2";
			
			public static string AddressThreeStreetThree = "address3_line3";
			
			public static string AddressThreeLongitude = "address3_longitude";
			
			public static string AddressThreeName = "address3_name";
			
			public static string AddressThreeZIPPostalCode = "address3_postalcode";
			
			public static string AddressThreePostOfficeBox = "address3_postofficebox";
			
			public static string AddressThreePrimaryContactName = "address3_primarycontactname";
			
			public static string AddressThreeShippingMethod = "address3_shippingmethodcode";
			
			public static string AddressThreeStateProvince = "address3_stateorprovince";
			
			public static string AddressThreeTelephoneOne = "address3_telephone1";
			
			public static string AddressThreeTelephoneTwo = "address3_telephone2";
			
			public static string AddressThreeTelephoneThree = "address3_telephone3";
			
			public static string AddressThreeUPSZone = "address3_upszone";
			
			public static string AddressThreeUTCOffset = "address3_utcoffset";
			
			public static string ConfirmRemovePassword = "adx_confirmremovepassword";
			
			public static string CreatedByIPAddress = "adx_createdbyipaddress";
			
			public static string CreatedByUsername = "adx_createdbyusername";
			
			public static string AccessFailedCount = "adx_identity_accessfailedcount";
			
			public static string EmailConfirmed = "adx_identity_emailaddress1confirmed";
			
			public static string LastSuccessfulLogin = "adx_identity_lastsuccessfullogin";
			
			public static string LocalLoginDisabled = "adx_identity_locallogindisabled";
			
			public static string LockoutEnabled = "adx_identity_lockoutenabled";
			
			public static string LockoutEndDate = "adx_identity_lockoutenddate";
			
			public static string LoginEnabled = "adx_identity_logonenabled";
			
			public static string MobilePhoneConfirmed = "adx_identity_mobilephoneconfirmed";
			
			public static string NewPasswordInput = "adx_identity_newpassword";
			
			public static string PasswordHash = "adx_identity_passwordhash";
			
			public static string SecurityStamp = "adx_identity_securitystamp";
			
			public static string TwoFactorEnabled = "adx_identity_twofactorenabled";
			
			public static string UserName = "adx_identity_username";
			
			public static string ModifiedByIPAddress = "adx_modifiedbyipaddress";
			
			public static string ModifiedByUsername = "adx_modifiedbyusername";
			
			public static string OrganizationName = "adx_organizationname";
			
			public static string PreferredLanguage = "adx_preferredlanguageid";
			
			public static string ProfileAlert = "adx_profilealert";
			
			public static string ProfileAlertDate = "adx_profilealertdate";
			
			public static string ProfileAlertInstructions = "adx_profilealertinstructions";
			
			public static string ProfileIsAnonymous = "adx_profileisanonymous";
			
			public static string ProfileLastActivity = "adx_profilelastactivity";
			
			public static string ProfileModifiedOn = "adx_profilemodifiedon";
			
			public static string PublicProfileCopy = "adx_publicprofilecopy";
			
			public static string TimeZone = "adx_timezone";
			
			public static string AgingThirty = "aging30";
			
			public static string AgingThirtyBase = "aging30_base";
			
			public static string AgingSixty = "aging60";
			
			public static string AgingSixtyBase = "aging60_base";
			
			public static string AgingNinety = "aging90";
			
			public static string AgingNinetyBase = "aging90_base";
			
			public static string Anniversary = "anniversary";
			
			public static string AnnualIncome = "annualincome";
			
			public static string AnnualIncomeBase = "annualincome_base";
			
			public static string Assistant = "assistantname";
			
			public static string AssistantPhone = "assistantphone";
			
			public static string Birthday = "birthdate";
			
			public static string BusinessPhoneTwo = "business2";
			
			public static string CallbackNumber = "callback";
			
			public static string ChildrenSNames = "childrensnames";
			
			public static string CompanyPhone = "company";
			
			public static string ContactId = "contactid";
			
			public static string Id = "contactid";
			
			public static string CreatedBy = "createdby";
			
			public static string CreatedByExternalParty = "createdbyexternalparty";
			
			public static string CreatedOn = "createdon";
			
			public static string CreditLimit = "creditlimit";
			
			public static string CreditLimitBase = "creditlimit_base";
			
			public static string CreditHold = "creditonhold";
			
			public static string CustomerSize = "customersizecode";
			
			public static string RelationshipType = "customertypecode";
			
			public static string Department = "department";
			
			public static string Description = "description";
			
			public static string DoNotAllowBulkEmails = "donotbulkemail";
			
			public static string DoNotAllowBulkMails = "donotbulkpostalmail";
			
			public static string DoNotAllowEmails = "donotemail";
			
			public static string DoNotAllowFaxes = "donotfax";
			
			public static string DoNotAllowPhoneCalls = "donotphone";
			
			public static string DoNotAllowMails = "donotpostalmail";
			
			public static string SendMarketingMaterials = "donotsendmm";
			
			public static string Education = "educationcode";
			
			public static string Email = "emailaddress1";
			
			public static string EmailAddressTwo = "emailaddress2";
			
			public static string EmailAddressThree = "emailaddress3";
			
			public static string Employee = "employeeid";
			
			public static string EntityImageId = "entityimageid";
			
			public static string ExchangeRate = "exchangerate";
			
			public static string ExternalUserIdentifier = "externaluseridentifier";
			
			public static string MaritalStatus = "familystatuscode";
			
			public static string Fax = "fax";
			
			public static string FirstName = "firstname";
			
			public static string FollowEmailActivity = "followemail";
			
			public static string FTPSite = "ftpsiteurl";
			
			public static string FullName = "fullname";
			
			public static string Gender = "gendercode";
			
			public static string Government = "governmentid";
			
			public static string HasChildren = "haschildrencode";
			
			public static string HomePhoneTwo = "home2";
			
			public static string BackOfficeCustomer = "isbackofficecustomer";
			
			public static string JobTitle = "jobtitle";
			
			public static string LastName = "lastname";
			
			public static string LastOnHoldTime = "lastonholdtime";
			
			public static string LastDateIncludedInCampaign = "lastusedincampaign";
			
			public static string LeadSource = "leadsourcecode";
			
			public static string Manager = "managername";
			
			public static string ManagerPhone = "managerphone";
			
			public static string MarketingOnly = "marketingonly";
			
			public static string MasterID = "masterid";
			
			public static string Merged = "merged";
			
			public static string MiddleName = "middlename";
			
			public static string MobilePhone = "mobilephone";
			
			public static string ModifiedBy = "modifiedby";
			
			public static string ModifiedByExternalParty = "modifiedbyexternalparty";
			
			public static string ModifiedOn = "modifiedon";
			
			public static string ManagingPartner = "msa_managingpartnerid";
			
			public static string DisableWebTracking = "msdyn_disablewebtracking";
			
			public static string IsMinor = "msdyn_isminor";
			
			public static string IsMinorWithParentalConsent = "msdyn_isminorwithparentalconsent";
			
			public static string PortalTermsAgreementDate = "msdyn_portaltermsagreementdate";
			
			public static string Nickname = "nickname";
			
			public static string NoOfChildren = "numberofchildren";
			
			public static string OnHoldTimeMinutes = "onholdtime";
			
			public static string Owner = "ownerid";
			
			public static string OwningBusinessUnit = "owningbusinessunit";
			
			public static string OwningTeam = "owningteam";
			
			public static string OwningUser = "owninguser";
			
			public static string Pager = "pager";
			
			public static string ParentContact = "parentcontactid";
			
			public static string CompanyName = "parentcustomerid";
			
			public static string ParticipatesInWorkflow = "participatesinworkflow";
			
			public static string PaymentTerms = "paymenttermscode";
			
			public static string PreferredDay = "preferredappointmentdaycode";
			
			public static string PreferredTime = "preferredappointmenttimecode";
			
			public static string PreferredMethodOfContact = "preferredcontactmethodcode";
			
			public static string PreferredUser = "preferredsystemuserid";
			
			public static string Process = "processid";
			
			public static string Salutation = "salutation";
			
			public static string Contributors = "sample_contributorsid";
			
			public static string ShippingMethod = "shippingmethodcode";
			
			public static string SLA = "slaid";
			
			public static string LastSLAApplied = "slainvokedid";
			
			public static string SpousePartnerName = "spousesname";
			
			public static string DeprecatedProcessStage = "stageid";
			
			public static string State = "statecode";
			
			public static string StatusReason = "statuscode";
			
			public static string Suffix = "suffix";
			
			public static string BusinessPhone = "telephone1";
			
			public static string HomePhone = "telephone2";
			
			public static string TelephoneThree = "telephone3";
			
			public static string Territory = "territorycode";
			
			public static string TimeSpentByMe = "timespentbymeonemailandmeetings";
			
			public static string Currency = "transactioncurrencyid";
			
			public static string DeprecatedTraversedPath = "traversedpath";
			
			public static string Website = "websiteurl";
			
			public static string YomiFirstName = "yomifirstname";
			
			public static string YomiFullName = "yomifullname";
			
			public static string YomiLastName = "yomilastname";
			
			public static string YomiMiddleName = "yomimiddlename";
		}
	}
}
