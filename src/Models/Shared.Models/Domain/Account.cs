//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Shared.Models.Domain
{
	using Microsoft.Xrm.Sdk;
	using Microsoft.Xrm.Sdk.Client;
	using System;
	using System.CodeDom.Compiler;
	using System.Collections.Generic;
	using System.ComponentModel;
	using System.Linq;
	using System.Runtime.Serialization;
	
	
	/// <summary>
	/// Business that represents a customer or potential customer. The company that is billed in business transactions.
	/// </summary>
	[DataContractAttribute()]
	[EntityLogicalNameAttribute("account")]
	[GeneratedCodeAttribute("CrmSvcUtil", "9.1.0.91")]
	public partial class Account : Entity, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public Account() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "account";
		
		public const string EntityLogicalCollectionName = "accounts";
		
		public const string EntitySetName = "accounts";
		
		public const int EntityTypeCode = 1;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Select a category to indicate whether the customer account is standard or preferred.
		/// </summary>
		[AttributeLogicalNameAttribute("accountcategorycode")]
		public Nullable<AccountCategory> Category
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("accountcategorycode");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (AccountCategory)(Enum.ToObject(typeof(AccountCategory), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("Category");
				if (value == null)
				{
					this.SetAttributeValue("accountcategorycode", null);
				}
				else
				{
					this.SetAttributeValue("accountcategorycode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("Category");
			}
		}
		
		/// <summary>
		/// Select a classification code to indicate the potential value of the customer account based on the projected return on investment, cooperation level, sales cycle length or other criteria.
		/// </summary>
		[AttributeLogicalNameAttribute("accountclassificationcode")]
		public Nullable<AccountClassification> Classification
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("accountclassificationcode");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (AccountClassification)(Enum.ToObject(typeof(AccountClassification), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("Classification");
				if (value == null)
				{
					this.SetAttributeValue("accountclassificationcode", null);
				}
				else
				{
					this.SetAttributeValue("accountclassificationcode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("Classification");
			}
		}
		
		/// <summary>
		/// Unique identifier of the account.
		/// </summary>
		[AttributeLogicalNameAttribute("accountid")]
		public Nullable<Guid> AccountId
		{
			get
			{
				return this.GetAttributeValue<Nullable<Guid>>("accountid");
			}
			set
			{
				this.OnPropertyChanging("AccountId");
				this.SetAttributeValue("accountid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = Guid.Empty;
				}
				this.OnPropertyChanged("AccountId");
			}
		}
		
		[AttributeLogicalNameAttribute("accountid")]
		public override Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.AccountId = value;
			}
		}
		
		/// <summary>
		/// Type an ID number or code for the account to quickly search and identify the account in system views.
		/// </summary>
		[AttributeLogicalNameAttribute("accountnumber")]
		public string AccountNumber
		{
			get
			{
				return this.GetAttributeValue<string>("accountnumber");
			}
			set
			{
				this.OnPropertyChanging("AccountNumber");
				this.SetAttributeValue("accountnumber", value);
				this.OnPropertyChanged("AccountNumber");
			}
		}
		
		/// <summary>
		/// Select a rating to indicate the value of the customer account.
		/// </summary>
		[AttributeLogicalNameAttribute("accountratingcode")]
		public Nullable<AccountAccountRating> AccountRating
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("accountratingcode");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (AccountAccountRating)(Enum.ToObject(typeof(AccountAccountRating), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("AccountRating");
				if (value == null)
				{
					this.SetAttributeValue("accountratingcode", null);
				}
				else
				{
					this.SetAttributeValue("accountratingcode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("AccountRating");
			}
		}
		
		/// <summary>
		/// Unique identifier for address 1.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_addressid")]
		public Nullable<Guid> AddressOneAddressId
		{
			get
			{
				return this.GetAttributeValue<Nullable<Guid>>("address1_addressid");
			}
			set
			{
				this.OnPropertyChanging("AddressOneAddressId");
				this.SetAttributeValue("address1_addressid", value);
				this.OnPropertyChanged("AddressOneAddressId");
			}
		}
		
		/// <summary>
		/// Select the primary address type.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_addresstypecode")]
		public Nullable<AccountAddressOneAddressType> AddressOneAddressType
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("address1_addresstypecode");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (AccountAddressOneAddressType)(Enum.ToObject(typeof(AccountAddressOneAddressType), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("AddressOneAddressType");
				if (value == null)
				{
					this.SetAttributeValue("address1_addresstypecode", null);
				}
				else
				{
					this.SetAttributeValue("address1_addresstypecode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("AddressOneAddressType");
			}
		}
		
		/// <summary>
		/// Type the city for the primary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_city")]
		public string AddressOneCity
		{
			get
			{
				return this.GetAttributeValue<string>("address1_city");
			}
			set
			{
				this.OnPropertyChanging("AddressOneCity");
				this.SetAttributeValue("address1_city", value);
				this.OnPropertyChanged("AddressOneCity");
			}
		}
		
		/// <summary>
		/// Shows the complete primary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_composite")]
		public string AddressOne
		{
			get
			{
				return this.GetAttributeValue<string>("address1_composite");
			}
		}
		
		/// <summary>
		/// Type the country or region for the primary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_country")]
		public string AddressOneCountryRegion
		{
			get
			{
				return this.GetAttributeValue<string>("address1_country");
			}
			set
			{
				this.OnPropertyChanging("AddressOneCountryRegion");
				this.SetAttributeValue("address1_country", value);
				this.OnPropertyChanged("AddressOneCountryRegion");
			}
		}
		
		/// <summary>
		/// Type the county for the primary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_county")]
		public string AddressOneCounty
		{
			get
			{
				return this.GetAttributeValue<string>("address1_county");
			}
			set
			{
				this.OnPropertyChanging("AddressOneCounty");
				this.SetAttributeValue("address1_county", value);
				this.OnPropertyChanged("AddressOneCounty");
			}
		}
		
		/// <summary>
		/// Type the fax number associated with the primary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_fax")]
		public string AddressOneFax
		{
			get
			{
				return this.GetAttributeValue<string>("address1_fax");
			}
			set
			{
				this.OnPropertyChanging("AddressOneFax");
				this.SetAttributeValue("address1_fax", value);
				this.OnPropertyChanged("AddressOneFax");
			}
		}
		
		/// <summary>
		/// Select the freight terms for the primary address to make sure shipping orders are processed correctly.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_freighttermscode")]
		public Nullable<AccountAddressOneFreightTerms> AddressOneFreightTerms
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("address1_freighttermscode");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (AccountAddressOneFreightTerms)(Enum.ToObject(typeof(AccountAddressOneFreightTerms), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("AddressOneFreightTerms");
				if (value == null)
				{
					this.SetAttributeValue("address1_freighttermscode", null);
				}
				else
				{
					this.SetAttributeValue("address1_freighttermscode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("AddressOneFreightTerms");
			}
		}
		
		/// <summary>
		/// Type the latitude value for the primary address for use in mapping and other applications.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_latitude")]
		public Nullable<double> AddressOneLatitude
		{
			get
			{
				return this.GetAttributeValue<Nullable<double>>("address1_latitude");
			}
			set
			{
				this.OnPropertyChanging("AddressOneLatitude");
				this.SetAttributeValue("address1_latitude", value);
				this.OnPropertyChanged("AddressOneLatitude");
			}
		}
		
		/// <summary>
		/// Type the first line of the primary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_line1")]
		public string AddressOneStreetOne
		{
			get
			{
				return this.GetAttributeValue<string>("address1_line1");
			}
			set
			{
				this.OnPropertyChanging("AddressOneStreetOne");
				this.SetAttributeValue("address1_line1", value);
				this.OnPropertyChanged("AddressOneStreetOne");
			}
		}
		
		/// <summary>
		/// Type the second line of the primary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_line2")]
		public string AddressOneStreetTwo
		{
			get
			{
				return this.GetAttributeValue<string>("address1_line2");
			}
			set
			{
				this.OnPropertyChanging("AddressOneStreetTwo");
				this.SetAttributeValue("address1_line2", value);
				this.OnPropertyChanged("AddressOneStreetTwo");
			}
		}
		
		/// <summary>
		/// Type the third line of the primary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_line3")]
		public string AddressOneStreetThree
		{
			get
			{
				return this.GetAttributeValue<string>("address1_line3");
			}
			set
			{
				this.OnPropertyChanging("AddressOneStreetThree");
				this.SetAttributeValue("address1_line3", value);
				this.OnPropertyChanged("AddressOneStreetThree");
			}
		}
		
		/// <summary>
		/// Type the longitude value for the primary address for use in mapping and other applications.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_longitude")]
		public Nullable<double> AddressOneLongitude
		{
			get
			{
				return this.GetAttributeValue<Nullable<double>>("address1_longitude");
			}
			set
			{
				this.OnPropertyChanging("AddressOneLongitude");
				this.SetAttributeValue("address1_longitude", value);
				this.OnPropertyChanged("AddressOneLongitude");
			}
		}
		
		/// <summary>
		/// Type a descriptive name for the primary address, such as Corporate Headquarters.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_name")]
		public string AddressOneName
		{
			get
			{
				return this.GetAttributeValue<string>("address1_name");
			}
			set
			{
				this.OnPropertyChanging("AddressOneName");
				this.SetAttributeValue("address1_name", value);
				this.OnPropertyChanged("AddressOneName");
			}
		}
		
		/// <summary>
		/// Type the ZIP Code or postal code for the primary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_postalcode")]
		public string AddressOneZIPPostalCode
		{
			get
			{
				return this.GetAttributeValue<string>("address1_postalcode");
			}
			set
			{
				this.OnPropertyChanging("AddressOneZIPPostalCode");
				this.SetAttributeValue("address1_postalcode", value);
				this.OnPropertyChanged("AddressOneZIPPostalCode");
			}
		}
		
		/// <summary>
		/// Type the post office box number of the primary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_postofficebox")]
		public string AddressOnePostOfficeBox
		{
			get
			{
				return this.GetAttributeValue<string>("address1_postofficebox");
			}
			set
			{
				this.OnPropertyChanging("AddressOnePostOfficeBox");
				this.SetAttributeValue("address1_postofficebox", value);
				this.OnPropertyChanged("AddressOnePostOfficeBox");
			}
		}
		
		/// <summary>
		/// Type the name of the main contact at the account's primary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_primarycontactname")]
		public string AddressOnePrimaryContactName
		{
			get
			{
				return this.GetAttributeValue<string>("address1_primarycontactname");
			}
			set
			{
				this.OnPropertyChanging("AddressOnePrimaryContactName");
				this.SetAttributeValue("address1_primarycontactname", value);
				this.OnPropertyChanged("AddressOnePrimaryContactName");
			}
		}
		
		/// <summary>
		/// Select a shipping method for deliveries sent to this address.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_shippingmethodcode")]
		public Nullable<AccountAddressOneShippingMethod> AddressOneShippingMethod
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("address1_shippingmethodcode");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (AccountAddressOneShippingMethod)(Enum.ToObject(typeof(AccountAddressOneShippingMethod), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("AddressOneShippingMethod");
				if (value == null)
				{
					this.SetAttributeValue("address1_shippingmethodcode", null);
				}
				else
				{
					this.SetAttributeValue("address1_shippingmethodcode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("AddressOneShippingMethod");
			}
		}
		
		/// <summary>
		/// Type the state or province of the primary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_stateorprovince")]
		public string AddressOneStateProvince
		{
			get
			{
				return this.GetAttributeValue<string>("address1_stateorprovince");
			}
			set
			{
				this.OnPropertyChanging("AddressOneStateProvince");
				this.SetAttributeValue("address1_stateorprovince", value);
				this.OnPropertyChanged("AddressOneStateProvince");
			}
		}
		
		/// <summary>
		/// Type the main phone number associated with the primary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_telephone1")]
		public string AddressPhone
		{
			get
			{
				return this.GetAttributeValue<string>("address1_telephone1");
			}
			set
			{
				this.OnPropertyChanging("AddressPhone");
				this.SetAttributeValue("address1_telephone1", value);
				this.OnPropertyChanged("AddressPhone");
			}
		}
		
		/// <summary>
		/// Type a second phone number associated with the primary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_telephone2")]
		public string AddressOneTelephoneTwo
		{
			get
			{
				return this.GetAttributeValue<string>("address1_telephone2");
			}
			set
			{
				this.OnPropertyChanging("AddressOneTelephoneTwo");
				this.SetAttributeValue("address1_telephone2", value);
				this.OnPropertyChanged("AddressOneTelephoneTwo");
			}
		}
		
		/// <summary>
		/// Type a third phone number associated with the primary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_telephone3")]
		public string AddressOneTelephoneThree
		{
			get
			{
				return this.GetAttributeValue<string>("address1_telephone3");
			}
			set
			{
				this.OnPropertyChanging("AddressOneTelephoneThree");
				this.SetAttributeValue("address1_telephone3", value);
				this.OnPropertyChanged("AddressOneTelephoneThree");
			}
		}
		
		/// <summary>
		/// Type the UPS zone of the primary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_upszone")]
		public string AddressOneUPSZone
		{
			get
			{
				return this.GetAttributeValue<string>("address1_upszone");
			}
			set
			{
				this.OnPropertyChanging("AddressOneUPSZone");
				this.SetAttributeValue("address1_upszone", value);
				this.OnPropertyChanged("AddressOneUPSZone");
			}
		}
		
		/// <summary>
		/// Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.
		/// </summary>
		[AttributeLogicalNameAttribute("address1_utcoffset")]
		public Nullable<int> AddressOneUTCOffset
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("address1_utcoffset");
			}
			set
			{
				this.OnPropertyChanging("AddressOneUTCOffset");
				this.SetAttributeValue("address1_utcoffset", value);
				this.OnPropertyChanged("AddressOneUTCOffset");
			}
		}
		
		/// <summary>
		/// Unique identifier for address 2.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_addressid")]
		public Nullable<Guid> AddressTwoAddressId
		{
			get
			{
				return this.GetAttributeValue<Nullable<Guid>>("address2_addressid");
			}
			set
			{
				this.OnPropertyChanging("AddressTwoAddressId");
				this.SetAttributeValue("address2_addressid", value);
				this.OnPropertyChanged("AddressTwoAddressId");
			}
		}
		
		/// <summary>
		/// Select the secondary address type.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_addresstypecode")]
		public Nullable<AccountAddressTwoAddressType> AddressTwoAddressType
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("address2_addresstypecode");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (AccountAddressTwoAddressType)(Enum.ToObject(typeof(AccountAddressTwoAddressType), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("AddressTwoAddressType");
				if (value == null)
				{
					this.SetAttributeValue("address2_addresstypecode", null);
				}
				else
				{
					this.SetAttributeValue("address2_addresstypecode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("AddressTwoAddressType");
			}
		}
		
		/// <summary>
		/// Type the city for the secondary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_city")]
		public string AddressTwoCity
		{
			get
			{
				return this.GetAttributeValue<string>("address2_city");
			}
			set
			{
				this.OnPropertyChanging("AddressTwoCity");
				this.SetAttributeValue("address2_city", value);
				this.OnPropertyChanged("AddressTwoCity");
			}
		}
		
		/// <summary>
		/// Shows the complete secondary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_composite")]
		public string AddressTwo
		{
			get
			{
				return this.GetAttributeValue<string>("address2_composite");
			}
		}
		
		/// <summary>
		/// Type the country or region for the secondary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_country")]
		public string AddressTwoCountryRegion
		{
			get
			{
				return this.GetAttributeValue<string>("address2_country");
			}
			set
			{
				this.OnPropertyChanging("AddressTwoCountryRegion");
				this.SetAttributeValue("address2_country", value);
				this.OnPropertyChanged("AddressTwoCountryRegion");
			}
		}
		
		/// <summary>
		/// Type the county for the secondary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_county")]
		public string AddressTwoCounty
		{
			get
			{
				return this.GetAttributeValue<string>("address2_county");
			}
			set
			{
				this.OnPropertyChanging("AddressTwoCounty");
				this.SetAttributeValue("address2_county", value);
				this.OnPropertyChanged("AddressTwoCounty");
			}
		}
		
		/// <summary>
		/// Type the fax number associated with the secondary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_fax")]
		public string AddressTwoFax
		{
			get
			{
				return this.GetAttributeValue<string>("address2_fax");
			}
			set
			{
				this.OnPropertyChanging("AddressTwoFax");
				this.SetAttributeValue("address2_fax", value);
				this.OnPropertyChanged("AddressTwoFax");
			}
		}
		
		/// <summary>
		/// Select the freight terms for the secondary address to make sure shipping orders are processed correctly.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_freighttermscode")]
		public Nullable<AccountAddressTwoFreightTerms> AddressTwoFreightTerms
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("address2_freighttermscode");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (AccountAddressTwoFreightTerms)(Enum.ToObject(typeof(AccountAddressTwoFreightTerms), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("AddressTwoFreightTerms");
				if (value == null)
				{
					this.SetAttributeValue("address2_freighttermscode", null);
				}
				else
				{
					this.SetAttributeValue("address2_freighttermscode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("AddressTwoFreightTerms");
			}
		}
		
		/// <summary>
		/// Type the latitude value for the secondary address for use in mapping and other applications.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_latitude")]
		public Nullable<double> AddressTwoLatitude
		{
			get
			{
				return this.GetAttributeValue<Nullable<double>>("address2_latitude");
			}
			set
			{
				this.OnPropertyChanging("AddressTwoLatitude");
				this.SetAttributeValue("address2_latitude", value);
				this.OnPropertyChanged("AddressTwoLatitude");
			}
		}
		
		/// <summary>
		/// Type the first line of the secondary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_line1")]
		public string AddressTwoStreetOne
		{
			get
			{
				return this.GetAttributeValue<string>("address2_line1");
			}
			set
			{
				this.OnPropertyChanging("AddressTwoStreetOne");
				this.SetAttributeValue("address2_line1", value);
				this.OnPropertyChanged("AddressTwoStreetOne");
			}
		}
		
		/// <summary>
		/// Type the second line of the secondary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_line2")]
		public string AddressTwoStreetTwo
		{
			get
			{
				return this.GetAttributeValue<string>("address2_line2");
			}
			set
			{
				this.OnPropertyChanging("AddressTwoStreetTwo");
				this.SetAttributeValue("address2_line2", value);
				this.OnPropertyChanged("AddressTwoStreetTwo");
			}
		}
		
		/// <summary>
		/// Type the third line of the secondary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_line3")]
		public string AddressTwoStreetThree
		{
			get
			{
				return this.GetAttributeValue<string>("address2_line3");
			}
			set
			{
				this.OnPropertyChanging("AddressTwoStreetThree");
				this.SetAttributeValue("address2_line3", value);
				this.OnPropertyChanged("AddressTwoStreetThree");
			}
		}
		
		/// <summary>
		/// Type the longitude value for the secondary address for use in mapping and other applications.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_longitude")]
		public Nullable<double> AddressTwoLongitude
		{
			get
			{
				return this.GetAttributeValue<Nullable<double>>("address2_longitude");
			}
			set
			{
				this.OnPropertyChanging("AddressTwoLongitude");
				this.SetAttributeValue("address2_longitude", value);
				this.OnPropertyChanged("AddressTwoLongitude");
			}
		}
		
		/// <summary>
		/// Type a descriptive name for the secondary address, such as Corporate Headquarters.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_name")]
		public string AddressTwoName
		{
			get
			{
				return this.GetAttributeValue<string>("address2_name");
			}
			set
			{
				this.OnPropertyChanging("AddressTwoName");
				this.SetAttributeValue("address2_name", value);
				this.OnPropertyChanged("AddressTwoName");
			}
		}
		
		/// <summary>
		/// Type the ZIP Code or postal code for the secondary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_postalcode")]
		public string AddressTwoZIPPostalCode
		{
			get
			{
				return this.GetAttributeValue<string>("address2_postalcode");
			}
			set
			{
				this.OnPropertyChanging("AddressTwoZIPPostalCode");
				this.SetAttributeValue("address2_postalcode", value);
				this.OnPropertyChanged("AddressTwoZIPPostalCode");
			}
		}
		
		/// <summary>
		/// Type the post office box number of the secondary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_postofficebox")]
		public string AddressTwoPostOfficeBox
		{
			get
			{
				return this.GetAttributeValue<string>("address2_postofficebox");
			}
			set
			{
				this.OnPropertyChanging("AddressTwoPostOfficeBox");
				this.SetAttributeValue("address2_postofficebox", value);
				this.OnPropertyChanged("AddressTwoPostOfficeBox");
			}
		}
		
		/// <summary>
		/// Type the name of the main contact at the account's secondary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_primarycontactname")]
		public string AddressTwoPrimaryContactName
		{
			get
			{
				return this.GetAttributeValue<string>("address2_primarycontactname");
			}
			set
			{
				this.OnPropertyChanging("AddressTwoPrimaryContactName");
				this.SetAttributeValue("address2_primarycontactname", value);
				this.OnPropertyChanged("AddressTwoPrimaryContactName");
			}
		}
		
		/// <summary>
		/// Select a shipping method for deliveries sent to this address.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_shippingmethodcode")]
		public Nullable<AccountAddressTwoShippingMethod> AddressTwoShippingMethod
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("address2_shippingmethodcode");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (AccountAddressTwoShippingMethod)(Enum.ToObject(typeof(AccountAddressTwoShippingMethod), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("AddressTwoShippingMethod");
				if (value == null)
				{
					this.SetAttributeValue("address2_shippingmethodcode", null);
				}
				else
				{
					this.SetAttributeValue("address2_shippingmethodcode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("AddressTwoShippingMethod");
			}
		}
		
		/// <summary>
		/// Type the state or province of the secondary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_stateorprovince")]
		public string AddressTwoStateProvince
		{
			get
			{
				return this.GetAttributeValue<string>("address2_stateorprovince");
			}
			set
			{
				this.OnPropertyChanging("AddressTwoStateProvince");
				this.SetAttributeValue("address2_stateorprovince", value);
				this.OnPropertyChanged("AddressTwoStateProvince");
			}
		}
		
		/// <summary>
		/// Type the main phone number associated with the secondary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_telephone1")]
		public string AddressTwoTelephoneOne
		{
			get
			{
				return this.GetAttributeValue<string>("address2_telephone1");
			}
			set
			{
				this.OnPropertyChanging("AddressTwoTelephoneOne");
				this.SetAttributeValue("address2_telephone1", value);
				this.OnPropertyChanged("AddressTwoTelephoneOne");
			}
		}
		
		/// <summary>
		/// Type a second phone number associated with the secondary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_telephone2")]
		public string AddressTwoTelephoneTwo
		{
			get
			{
				return this.GetAttributeValue<string>("address2_telephone2");
			}
			set
			{
				this.OnPropertyChanging("AddressTwoTelephoneTwo");
				this.SetAttributeValue("address2_telephone2", value);
				this.OnPropertyChanged("AddressTwoTelephoneTwo");
			}
		}
		
		/// <summary>
		/// Type a third phone number associated with the secondary address.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_telephone3")]
		public string AddressTwoTelephoneThree
		{
			get
			{
				return this.GetAttributeValue<string>("address2_telephone3");
			}
			set
			{
				this.OnPropertyChanging("AddressTwoTelephoneThree");
				this.SetAttributeValue("address2_telephone3", value);
				this.OnPropertyChanged("AddressTwoTelephoneThree");
			}
		}
		
		/// <summary>
		/// Type the UPS zone of the secondary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_upszone")]
		public string AddressTwoUPSZone
		{
			get
			{
				return this.GetAttributeValue<string>("address2_upszone");
			}
			set
			{
				this.OnPropertyChanging("AddressTwoUPSZone");
				this.SetAttributeValue("address2_upszone", value);
				this.OnPropertyChanged("AddressTwoUPSZone");
			}
		}
		
		/// <summary>
		/// Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.
		/// </summary>
		[AttributeLogicalNameAttribute("address2_utcoffset")]
		public Nullable<int> AddressTwoUTCOffset
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("address2_utcoffset");
			}
			set
			{
				this.OnPropertyChanging("AddressTwoUTCOffset");
				this.SetAttributeValue("address2_utcoffset", value);
				this.OnPropertyChanged("AddressTwoUTCOffset");
			}
		}
		
		/// <summary>
		/// For system use only.
		/// </summary>
		[AttributeLogicalNameAttribute("aging30")]
		public Money AgingThirty
		{
			get
			{
				return this.GetAttributeValue<Money>("aging30");
			}
		}
		
		/// <summary>
		/// The base currency equivalent of the aging 30 field.
		/// </summary>
		[AttributeLogicalNameAttribute("aging30_base")]
		public Money AgingThirtyBase
		{
			get
			{
				return this.GetAttributeValue<Money>("aging30_base");
			}
		}
		
		/// <summary>
		/// For system use only.
		/// </summary>
		[AttributeLogicalNameAttribute("aging60")]
		public Money AgingSixty
		{
			get
			{
				return this.GetAttributeValue<Money>("aging60");
			}
		}
		
		/// <summary>
		/// The base currency equivalent of the aging 60 field.
		/// </summary>
		[AttributeLogicalNameAttribute("aging60_base")]
		public Money AgingSixtyBase
		{
			get
			{
				return this.GetAttributeValue<Money>("aging60_base");
			}
		}
		
		/// <summary>
		/// For system use only.
		/// </summary>
		[AttributeLogicalNameAttribute("aging90")]
		public Money AgingNinety
		{
			get
			{
				return this.GetAttributeValue<Money>("aging90");
			}
		}
		
		/// <summary>
		/// The base currency equivalent of the aging 90 field.
		/// </summary>
		[AttributeLogicalNameAttribute("aging90_base")]
		public Money AgingNinetyBase
		{
			get
			{
				return this.GetAttributeValue<Money>("aging90_base");
			}
		}
		
		/// <summary>
		/// Select the legal designation or other business type of the account for contracts or reporting purposes.
		/// </summary>
		[AttributeLogicalNameAttribute("businesstypecode")]
		public Nullable<AccountBusinessType> BusinessType
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("businesstypecode");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (AccountBusinessType)(Enum.ToObject(typeof(AccountBusinessType), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("BusinessType");
				if (value == null)
				{
					this.SetAttributeValue("businesstypecode", null);
				}
				else
				{
					this.SetAttributeValue("businesstypecode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("BusinessType");
			}
		}
		
		/// <summary>
		/// Shows who created the record.
		/// </summary>
		/// <remarks>
		/// The property is read-only and the setter has been added to assist with unit testing only.
		/// </remarks>
		[AttributeLogicalNameAttribute("createdby")]
		public EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("createdby");
			}
			set
			{
				this.OnPropertyChanging("CreatedBy");
				this.SetAttributeValue("createdby", value);
				this.OnPropertyChanged("CreatedBy");
			}
		}
		
		/// <summary>
		/// Shows the external party who created the record.
		/// </summary>
		[AttributeLogicalNameAttribute("createdbyexternalparty")]
		public EntityReference CreatedByExternalParty
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("createdbyexternalparty");
			}
		}
		
		/// <summary>
		/// Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
		/// </summary>
		/// <remarks>
		/// The property is read-only and the setter has been added to assist with unit testing only.
		/// </remarks>
		[AttributeLogicalNameAttribute("createdon")]
		public Nullable<DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<Nullable<DateTime>>("createdon");
			}
			set
			{
				this.OnPropertyChanging("CreatedOn");
				this.SetAttributeValue("createdon", value);
				this.OnPropertyChanged("CreatedOn");
			}
		}
		
		/// <summary>
		/// Type the credit limit of the account. This is a useful reference when you address invoice and accounting issues with the customer.
		/// </summary>
		[AttributeLogicalNameAttribute("creditlimit")]
		public Money CreditLimit
		{
			get
			{
				return this.GetAttributeValue<Money>("creditlimit");
			}
			set
			{
				this.OnPropertyChanging("CreditLimit");
				this.SetAttributeValue("creditlimit", value);
				this.OnPropertyChanged("CreditLimit");
			}
		}
		
		/// <summary>
		/// Shows the credit limit converted to the system's default base currency for reporting purposes.
		/// </summary>
		[AttributeLogicalNameAttribute("creditlimit_base")]
		public Money CreditLimitBase
		{
			get
			{
				return this.GetAttributeValue<Money>("creditlimit_base");
			}
		}
		
		/// <summary>
		/// Select whether the credit for the account is on hold. This is a useful reference while addressing the invoice and accounting issues with the customer.
		/// </summary>
		[AttributeLogicalNameAttribute("creditonhold")]
		public Nullable<bool> CreditHold
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("creditonhold");
			}
			set
			{
				this.OnPropertyChanging("CreditHold");
				this.SetAttributeValue("creditonhold", value);
				this.OnPropertyChanged("CreditHold");
			}
		}
		
		/// <summary>
		/// Select the size category or range of the account for segmentation and reporting purposes.
		/// </summary>
		[AttributeLogicalNameAttribute("customersizecode")]
		public Nullable<AccountCustomerSize> CustomerSize
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("customersizecode");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (AccountCustomerSize)(Enum.ToObject(typeof(AccountCustomerSize), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("CustomerSize");
				if (value == null)
				{
					this.SetAttributeValue("customersizecode", null);
				}
				else
				{
					this.SetAttributeValue("customersizecode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("CustomerSize");
			}
		}
		
		/// <summary>
		/// Select the category that best describes the relationship between the account and your organization.
		/// </summary>
		[AttributeLogicalNameAttribute("customertypecode")]
		public Nullable<AccountRelationshipType> RelationshipType
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("customertypecode");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (AccountRelationshipType)(Enum.ToObject(typeof(AccountRelationshipType), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("RelationshipType");
				if (value == null)
				{
					this.SetAttributeValue("customertypecode", null);
				}
				else
				{
					this.SetAttributeValue("customertypecode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("RelationshipType");
			}
		}
		
		/// <summary>
		/// Choose the default price list associated with the account to make sure the correct product prices for this customer are applied in sales opportunities, quotes, and orders.
		/// </summary>
		[AttributeLogicalNameAttribute("defaultpricelevelid")]
		public EntityReference PriceList
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("defaultpricelevelid");
			}
			set
			{
				this.OnPropertyChanging("PriceList");
				this.SetAttributeValue("defaultpricelevelid", value);
				this.OnPropertyChanged("PriceList");
			}
		}
		
		/// <summary>
		/// Type additional information to describe the account, such as an excerpt from the company's website.
		/// </summary>
		[AttributeLogicalNameAttribute("description")]
		public string Description
		{
			get
			{
				return this.GetAttributeValue<string>("description");
			}
			set
			{
				this.OnPropertyChanging("Description");
				this.SetAttributeValue("description", value);
				this.OnPropertyChanged("Description");
			}
		}
		
		/// <summary>
		/// Select whether the account allows bulk email sent through campaigns. If Do Not Allow is selected, the account can be added to marketing lists, but is excluded from email.
		/// </summary>
		[AttributeLogicalNameAttribute("donotbulkemail")]
		public Nullable<bool> DoNotAllowBulkEmails
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("donotbulkemail");
			}
			set
			{
				this.OnPropertyChanging("DoNotAllowBulkEmails");
				this.SetAttributeValue("donotbulkemail", value);
				this.OnPropertyChanged("DoNotAllowBulkEmails");
			}
		}
		
		/// <summary>
		/// Select whether the account allows bulk postal mail sent through marketing campaigns or quick campaigns. If Do Not Allow is selected, the account can be added to marketing lists, but will be excluded from the postal mail.
		/// </summary>
		[AttributeLogicalNameAttribute("donotbulkpostalmail")]
		public Nullable<bool> DoNotAllowBulkMails
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("donotbulkpostalmail");
			}
			set
			{
				this.OnPropertyChanging("DoNotAllowBulkMails");
				this.SetAttributeValue("donotbulkpostalmail", value);
				this.OnPropertyChanged("DoNotAllowBulkMails");
			}
		}
		
		/// <summary>
		/// Select whether the account allows direct email sent from Microsoft Dynamics 365.
		/// </summary>
		[AttributeLogicalNameAttribute("donotemail")]
		public Nullable<bool> DoNotAllowEmails
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("donotemail");
			}
			set
			{
				this.OnPropertyChanging("DoNotAllowEmails");
				this.SetAttributeValue("donotemail", value);
				this.OnPropertyChanged("DoNotAllowEmails");
			}
		}
		
		/// <summary>
		/// Select whether the account allows faxes. If Do Not Allow is selected, the account will be excluded from fax activities distributed in marketing campaigns.
		/// </summary>
		[AttributeLogicalNameAttribute("donotfax")]
		public Nullable<bool> DoNotAllowFaxes
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("donotfax");
			}
			set
			{
				this.OnPropertyChanging("DoNotAllowFaxes");
				this.SetAttributeValue("donotfax", value);
				this.OnPropertyChanged("DoNotAllowFaxes");
			}
		}
		
		/// <summary>
		/// Select whether the account allows phone calls. If Do Not Allow is selected, the account will be excluded from phone call activities distributed in marketing campaigns.
		/// </summary>
		[AttributeLogicalNameAttribute("donotphone")]
		public Nullable<bool> DoNotAllowPhoneCalls
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("donotphone");
			}
			set
			{
				this.OnPropertyChanging("DoNotAllowPhoneCalls");
				this.SetAttributeValue("donotphone", value);
				this.OnPropertyChanged("DoNotAllowPhoneCalls");
			}
		}
		
		/// <summary>
		/// Select whether the account allows direct mail. If Do Not Allow is selected, the account will be excluded from letter activities distributed in marketing campaigns.
		/// </summary>
		[AttributeLogicalNameAttribute("donotpostalmail")]
		public Nullable<bool> DoNotAllowMails
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("donotpostalmail");
			}
			set
			{
				this.OnPropertyChanging("DoNotAllowMails");
				this.SetAttributeValue("donotpostalmail", value);
				this.OnPropertyChanged("DoNotAllowMails");
			}
		}
		
		/// <summary>
		/// Select whether the account accepts marketing materials, such as brochures or catalogs.
		/// </summary>
		[AttributeLogicalNameAttribute("donotsendmm")]
		public Nullable<bool> SendMarketingMaterials
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("donotsendmm");
			}
			set
			{
				this.OnPropertyChanging("SendMarketingMaterials");
				this.SetAttributeValue("donotsendmm", value);
				this.OnPropertyChanged("SendMarketingMaterials");
			}
		}
		
		/// <summary>
		/// Type the primary email address for the account.
		/// </summary>
		[AttributeLogicalNameAttribute("emailaddress1")]
		public string Email
		{
			get
			{
				return this.GetAttributeValue<string>("emailaddress1");
			}
			set
			{
				this.OnPropertyChanging("Email");
				this.SetAttributeValue("emailaddress1", value);
				this.OnPropertyChanged("Email");
			}
		}
		
		/// <summary>
		/// Type the secondary email address for the account.
		/// </summary>
		[AttributeLogicalNameAttribute("emailaddress2")]
		public string EmailAddressTwo
		{
			get
			{
				return this.GetAttributeValue<string>("emailaddress2");
			}
			set
			{
				this.OnPropertyChanging("EmailAddressTwo");
				this.SetAttributeValue("emailaddress2", value);
				this.OnPropertyChanged("EmailAddressTwo");
			}
		}
		
		/// <summary>
		/// Type an alternate email address for the account.
		/// </summary>
		[AttributeLogicalNameAttribute("emailaddress3")]
		public string EmailAddressThree
		{
			get
			{
				return this.GetAttributeValue<string>("emailaddress3");
			}
			set
			{
				this.OnPropertyChanging("EmailAddressThree");
				this.SetAttributeValue("emailaddress3", value);
				this.OnPropertyChanged("EmailAddressThree");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[AttributeLogicalNameAttribute("entityimageid")]
		public Nullable<Guid> EntityImageId
		{
			get
			{
				return this.GetAttributeValue<Nullable<Guid>>("entityimageid");
			}
		}
		
		/// <summary>
		/// Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.
		/// </summary>
		[AttributeLogicalNameAttribute("exchangerate")]
		public Nullable<decimal> ExchangeRate
		{
			get
			{
				return this.GetAttributeValue<Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Type the fax number for the account.
		/// </summary>
		[AttributeLogicalNameAttribute("fax")]
		public string Fax
		{
			get
			{
				return this.GetAttributeValue<string>("fax");
			}
			set
			{
				this.OnPropertyChanging("Fax");
				this.SetAttributeValue("fax", value);
				this.OnPropertyChanged("Fax");
			}
		}
		
		/// <summary>
		/// Information about whether to allow following email activity like opens, attachment views and link clicks for emails sent to the account.
		/// </summary>
		[AttributeLogicalNameAttribute("followemail")]
		public Nullable<bool> FollowEmailActivity
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("followemail");
			}
			set
			{
				this.OnPropertyChanging("FollowEmailActivity");
				this.SetAttributeValue("followemail", value);
				this.OnPropertyChanged("FollowEmailActivity");
			}
		}
		
		/// <summary>
		/// Type the URL for the account's FTP site to enable users to access data and share documents.
		/// </summary>
		[AttributeLogicalNameAttribute("ftpsiteurl")]
		public string FTPSite
		{
			get
			{
				return this.GetAttributeValue<string>("ftpsiteurl");
			}
			set
			{
				this.OnPropertyChanging("FTPSite");
				this.SetAttributeValue("ftpsiteurl", value);
				this.OnPropertyChanged("FTPSite");
			}
		}
		
		/// <summary>
		/// Select the account's primary industry for use in marketing segmentation and demographic analysis.
		/// </summary>
		[AttributeLogicalNameAttribute("industrycode")]
		public Nullable<AccountIndustry> Industry
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("industrycode");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (AccountIndustry)(Enum.ToObject(typeof(AccountIndustry), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("Industry");
				if (value == null)
				{
					this.SetAttributeValue("industrycode", null);
				}
				else
				{
					this.SetAttributeValue("industrycode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("Industry");
			}
		}
		
		/// <summary>
		/// Contains the date and time stamp of the last on hold time.
		/// </summary>
		[AttributeLogicalNameAttribute("lastonholdtime")]
		public Nullable<DateTime> LastOnHoldTime
		{
			get
			{
				return this.GetAttributeValue<Nullable<DateTime>>("lastonholdtime");
			}
			set
			{
				this.OnPropertyChanging("LastOnHoldTime");
				this.SetAttributeValue("lastonholdtime", value);
				this.OnPropertyChanged("LastOnHoldTime");
			}
		}
		
		/// <summary>
		/// Shows the date when the account was last included in a marketing campaign or quick campaign.
		/// </summary>
		[AttributeLogicalNameAttribute("lastusedincampaign")]
		public Nullable<DateTime> LastDateIncludedInCampaign
		{
			get
			{
				return this.GetAttributeValue<Nullable<DateTime>>("lastusedincampaign");
			}
			set
			{
				this.OnPropertyChanging("LastDateIncludedInCampaign");
				this.SetAttributeValue("lastusedincampaign", value);
				this.OnPropertyChanged("LastDateIncludedInCampaign");
			}
		}
		
		/// <summary>
		/// Type the market capitalization of the account to identify the company's equity, used as an indicator in financial performance analysis.
		/// </summary>
		[AttributeLogicalNameAttribute("marketcap")]
		public Money MarketCapitalization
		{
			get
			{
				return this.GetAttributeValue<Money>("marketcap");
			}
			set
			{
				this.OnPropertyChanging("MarketCapitalization");
				this.SetAttributeValue("marketcap", value);
				this.OnPropertyChanged("MarketCapitalization");
			}
		}
		
		/// <summary>
		/// Shows the market capitalization converted to the system's default base currency.
		/// </summary>
		[AttributeLogicalNameAttribute("marketcap_base")]
		public Money MarketCapitalizationBase
		{
			get
			{
				return this.GetAttributeValue<Money>("marketcap_base");
			}
		}
		
		/// <summary>
		/// Whether is only for marketing
		/// </summary>
		[AttributeLogicalNameAttribute("marketingonly")]
		public Nullable<bool> MarketingOnly
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("marketingonly");
			}
			set
			{
				this.OnPropertyChanging("MarketingOnly");
				this.SetAttributeValue("marketingonly", value);
				this.OnPropertyChanged("MarketingOnly");
			}
		}
		
		/// <summary>
		/// Shows the master account that the account was merged with.
		/// </summary>
		[AttributeLogicalNameAttribute("masterid")]
		public EntityReference MasterID
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("masterid");
			}
		}
		
		/// <summary>
		/// Shows whether the account has been merged with another account.
		/// </summary>
		[AttributeLogicalNameAttribute("merged")]
		public Nullable<bool> Merged
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("merged");
			}
		}
		
		/// <summary>
		/// Shows who last updated the record.
		/// </summary>
		/// <remarks>
		/// The property is read-only and the setter has been added to assist with unit testing only.
		/// </remarks>
		[AttributeLogicalNameAttribute("modifiedby")]
		public EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("modifiedby");
			}
			set
			{
				this.OnPropertyChanging("ModifiedBy");
				this.SetAttributeValue("modifiedby", value);
				this.OnPropertyChanged("ModifiedBy");
			}
		}
		
		/// <summary>
		/// Shows the external party who modified the record.
		/// </summary>
		[AttributeLogicalNameAttribute("modifiedbyexternalparty")]
		public EntityReference ModifiedByExternalParty
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("modifiedbyexternalparty");
			}
		}
		
		/// <summary>
		/// Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
		/// </summary>
		/// <remarks>
		/// The property is read-only and the setter has been added to assist with unit testing only.
		/// </remarks>
		[AttributeLogicalNameAttribute("modifiedon")]
		public Nullable<DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<Nullable<DateTime>>("modifiedon");
			}
			set
			{
				this.OnPropertyChanging("ModifiedOn");
				this.SetAttributeValue("modifiedon", value);
				this.OnPropertyChanged("ModifiedOn");
			}
		}
		
		/// <summary>
		/// Describes whether account is opted out or not
		/// </summary>
		[AttributeLogicalNameAttribute("msdyn_gdproptout")]
		public Nullable<bool> GDPROptout
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("msdyn_gdproptout");
			}
			set
			{
				this.OnPropertyChanging("GDPROptout");
				this.SetAttributeValue("msdyn_gdproptout", value);
				this.OnPropertyChanged("GDPROptout");
			}
		}
		
		/// <summary>
		/// Type the company or business name.
		/// </summary>
		[AttributeLogicalNameAttribute("name")]
		public string AccountName
		{
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			set
			{
				this.OnPropertyChanging("AccountName");
				this.SetAttributeValue("name", value);
				this.OnPropertyChanged("AccountName");
			}
		}
		
		/// <summary>
		/// Type the number of employees that work at the account for use in marketing segmentation and demographic analysis.
		/// </summary>
		[AttributeLogicalNameAttribute("numberofemployees")]
		public Nullable<int> NumberOfEmployees
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("numberofemployees");
			}
			set
			{
				this.OnPropertyChanging("NumberOfEmployees");
				this.SetAttributeValue("numberofemployees", value);
				this.OnPropertyChanged("NumberOfEmployees");
			}
		}
		
		/// <summary>
		/// Shows how long, in minutes, that the record was on hold.
		/// </summary>
		[AttributeLogicalNameAttribute("onholdtime")]
		public Nullable<int> OnHoldTimeMinutes
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("onholdtime");
			}
		}
		
		/// <summary>
		/// Number of open opportunities against an account and its child accounts.
		/// </summary>
		[AttributeLogicalNameAttribute("opendeals")]
		public Nullable<int> OpenDeals
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("opendeals");
			}
		}
		
		/// <summary>
		/// Last Updated time of rollup field Open Deals.
		/// </summary>
		[AttributeLogicalNameAttribute("opendeals_date")]
		public Nullable<DateTime> OpenDealsLastUpdatedOn
		{
			get
			{
				return this.GetAttributeValue<Nullable<DateTime>>("opendeals_date");
			}
		}
		
		/// <summary>
		/// State of rollup field Open Deals.
		/// </summary>
		[AttributeLogicalNameAttribute("opendeals_state")]
		public Nullable<int> OpenDealsState
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("opendeals_state");
			}
		}
		
		/// <summary>
		/// Sum of open revenue against an account and its child accounts.
		/// </summary>
		[AttributeLogicalNameAttribute("openrevenue")]
		public Money OpenRevenue
		{
			get
			{
				return this.GetAttributeValue<Money>("openrevenue");
			}
		}
		
		/// <summary>
		/// Value of the Open Revenue in base currency.
		/// </summary>
		[AttributeLogicalNameAttribute("openrevenue_base")]
		public Money OpenRevenueBase
		{
			get
			{
				return this.GetAttributeValue<Money>("openrevenue_base");
			}
		}
		
		/// <summary>
		/// Last Updated time of rollup field Open Revenue.
		/// </summary>
		[AttributeLogicalNameAttribute("openrevenue_date")]
		public Nullable<DateTime> OpenRevenueLastUpdatedOn
		{
			get
			{
				return this.GetAttributeValue<Nullable<DateTime>>("openrevenue_date");
			}
		}
		
		/// <summary>
		/// State of rollup field Open Revenue.
		/// </summary>
		[AttributeLogicalNameAttribute("openrevenue_state")]
		public Nullable<int> OpenRevenueState
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("openrevenue_state");
			}
		}
		
		/// <summary>
		/// Shows the lead that the account was created from if the account was created by converting a lead in Microsoft Dynamics 365. This is used to relate the account to data on the originating lead for use in reporting and analytics.
		/// </summary>
		[AttributeLogicalNameAttribute("originatingleadid")]
		public EntityReference OriginatingLead
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("originatingleadid");
			}
			set
			{
				this.OnPropertyChanging("OriginatingLead");
				this.SetAttributeValue("originatingleadid", value);
				this.OnPropertyChanged("OriginatingLead");
			}
		}
		
		/// <summary>
		/// Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.
		/// </summary>
		[AttributeLogicalNameAttribute("ownerid")]
		public EntityReference Owner
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("ownerid");
			}
			set
			{
				this.OnPropertyChanging("Owner");
				this.SetAttributeValue("ownerid", value);
				this.OnPropertyChanged("Owner");
			}
		}
		
		/// <summary>
		/// Select the account's ownership structure, such as public or private.
		/// </summary>
		[AttributeLogicalNameAttribute("ownershipcode")]
		public Nullable<AccountOwnership> Ownership
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("ownershipcode");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (AccountOwnership)(Enum.ToObject(typeof(AccountOwnership), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("Ownership");
				if (value == null)
				{
					this.SetAttributeValue("ownershipcode", null);
				}
				else
				{
					this.SetAttributeValue("ownershipcode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("Ownership");
			}
		}
		
		/// <summary>
		/// Shows the business unit that the record owner belongs to.
		/// </summary>
		[AttributeLogicalNameAttribute("owningbusinessunit")]
		public EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier of the team who owns the account.
		/// </summary>
		[AttributeLogicalNameAttribute("owningteam")]
		public EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who owns the account.
		/// </summary>
		[AttributeLogicalNameAttribute("owninguser")]
		public EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Choose the parent account associated with this account to show parent and child businesses in reporting and analytics.
		/// </summary>
		[AttributeLogicalNameAttribute("parentaccountid")]
		public EntityReference ParentAccount
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("parentaccountid");
			}
			set
			{
				this.OnPropertyChanging("ParentAccount");
				this.SetAttributeValue("parentaccountid", value);
				this.OnPropertyChanged("ParentAccount");
			}
		}
		
		/// <summary>
		/// For system use only. Legacy Microsoft Dynamics CRM 3.0 workflow data.
		/// </summary>
		[AttributeLogicalNameAttribute("participatesinworkflow")]
		public Nullable<bool> ParticipatesInWorkflow
		{
			get
			{
				return this.GetAttributeValue<Nullable<bool>>("participatesinworkflow");
			}
			set
			{
				this.OnPropertyChanging("ParticipatesInWorkflow");
				this.SetAttributeValue("participatesinworkflow", value);
				this.OnPropertyChanged("ParticipatesInWorkflow");
			}
		}
		
		/// <summary>
		/// Select the payment terms to indicate when the customer needs to pay the total amount.
		/// </summary>
		[AttributeLogicalNameAttribute("paymenttermscode")]
		public Nullable<AccountPaymentTerms> PaymentTerms
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("paymenttermscode");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (AccountPaymentTerms)(Enum.ToObject(typeof(AccountPaymentTerms), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("PaymentTerms");
				if (value == null)
				{
					this.SetAttributeValue("paymenttermscode", null);
				}
				else
				{
					this.SetAttributeValue("paymenttermscode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("PaymentTerms");
			}
		}
		
		/// <summary>
		/// Select the preferred day of the week for service appointments.
		/// </summary>
		[AttributeLogicalNameAttribute("preferredappointmentdaycode")]
		public Nullable<AccountPreferredDay> PreferredDay
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("preferredappointmentdaycode");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (AccountPreferredDay)(Enum.ToObject(typeof(AccountPreferredDay), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("PreferredDay");
				if (value == null)
				{
					this.SetAttributeValue("preferredappointmentdaycode", null);
				}
				else
				{
					this.SetAttributeValue("preferredappointmentdaycode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("PreferredDay");
			}
		}
		
		/// <summary>
		/// Select the preferred time of day for service appointments.
		/// </summary>
		[AttributeLogicalNameAttribute("preferredappointmenttimecode")]
		public Nullable<AccountPreferredTime> PreferredTime
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("preferredappointmenttimecode");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (AccountPreferredTime)(Enum.ToObject(typeof(AccountPreferredTime), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("PreferredTime");
				if (value == null)
				{
					this.SetAttributeValue("preferredappointmenttimecode", null);
				}
				else
				{
					this.SetAttributeValue("preferredappointmenttimecode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("PreferredTime");
			}
		}
		
		/// <summary>
		/// Select the preferred method of contact.
		/// </summary>
		[AttributeLogicalNameAttribute("preferredcontactmethodcode")]
		public Nullable<AccountPreferredMethodOfContact> PreferredMethodOfContact
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("preferredcontactmethodcode");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (AccountPreferredMethodOfContact)(Enum.ToObject(typeof(AccountPreferredMethodOfContact), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("PreferredMethodOfContact");
				if (value == null)
				{
					this.SetAttributeValue("preferredcontactmethodcode", null);
				}
				else
				{
					this.SetAttributeValue("preferredcontactmethodcode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("PreferredMethodOfContact");
			}
		}
		
		/// <summary>
		/// Choose the account's preferred service facility or equipment to make sure services are scheduled correctly for the customer.
		/// </summary>
		[AttributeLogicalNameAttribute("preferredequipmentid")]
		public EntityReference PreferredFacilityEquipment
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("preferredequipmentid");
			}
			set
			{
				this.OnPropertyChanging("PreferredFacilityEquipment");
				this.SetAttributeValue("preferredequipmentid", value);
				this.OnPropertyChanged("PreferredFacilityEquipment");
			}
		}
		
		/// <summary>
		/// Choose the account's preferred service for reference when you schedule service activities.
		/// </summary>
		[AttributeLogicalNameAttribute("preferredserviceid")]
		public EntityReference PreferredService
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("preferredserviceid");
			}
			set
			{
				this.OnPropertyChanging("PreferredService");
				this.SetAttributeValue("preferredserviceid", value);
				this.OnPropertyChanged("PreferredService");
			}
		}
		
		/// <summary>
		/// Choose the preferred service representative for reference when you schedule service activities for the account.
		/// </summary>
		[AttributeLogicalNameAttribute("preferredsystemuserid")]
		public EntityReference PreferredUser
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("preferredsystemuserid");
			}
			set
			{
				this.OnPropertyChanging("PreferredUser");
				this.SetAttributeValue("preferredsystemuserid", value);
				this.OnPropertyChanged("PreferredUser");
			}
		}
		
		/// <summary>
		/// Choose the primary contact for the account to provide quick access to contact details.
		/// </summary>
		[AttributeLogicalNameAttribute("primarycontactid")]
		public EntityReference PrimaryContact
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("primarycontactid");
			}
			set
			{
				this.OnPropertyChanging("PrimaryContact");
				this.SetAttributeValue("primarycontactid", value);
				this.OnPropertyChanged("PrimaryContact");
			}
		}
		
		/// <summary>
		/// Primary Satori ID for Account
		/// </summary>
		[AttributeLogicalNameAttribute("primarysatoriid")]
		public string PrimarySatoriID
		{
			get
			{
				return this.GetAttributeValue<string>("primarysatoriid");
			}
			set
			{
				this.OnPropertyChanging("PrimarySatoriID");
				this.SetAttributeValue("primarysatoriid", value);
				this.OnPropertyChanged("PrimarySatoriID");
			}
		}
		
		/// <summary>
		/// Primary Twitter ID for Account
		/// </summary>
		[AttributeLogicalNameAttribute("primarytwitterid")]
		public string PrimaryTwitterID
		{
			get
			{
				return this.GetAttributeValue<string>("primarytwitterid");
			}
			set
			{
				this.OnPropertyChanging("PrimaryTwitterID");
				this.SetAttributeValue("primarytwitterid", value);
				this.OnPropertyChanged("PrimaryTwitterID");
			}
		}
		
		/// <summary>
		/// Shows the ID of the process.
		/// </summary>
		[AttributeLogicalNameAttribute("processid")]
		public Nullable<Guid> Process
		{
			get
			{
				return this.GetAttributeValue<Nullable<Guid>>("processid");
			}
			set
			{
				this.OnPropertyChanging("Process");
				this.SetAttributeValue("processid", value);
				this.OnPropertyChanged("Process");
			}
		}
		
		/// <summary>
		/// Type the annual revenue for the account, used as an indicator in financial performance analysis.
		/// </summary>
		[AttributeLogicalNameAttribute("revenue")]
		public Money AnnualRevenue
		{
			get
			{
				return this.GetAttributeValue<Money>("revenue");
			}
			set
			{
				this.OnPropertyChanging("AnnualRevenue");
				this.SetAttributeValue("revenue", value);
				this.OnPropertyChanged("AnnualRevenue");
			}
		}
		
		/// <summary>
		/// Shows the annual revenue converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.
		/// </summary>
		[AttributeLogicalNameAttribute("revenue_base")]
		public Money AnnualRevenueBase
		{
			get
			{
				return this.GetAttributeValue<Money>("revenue_base");
			}
		}
		
		/// <summary>
		/// Type the number of shares available to the public for the account. This number is used as an indicator in financial performance analysis.
		/// </summary>
		[AttributeLogicalNameAttribute("sharesoutstanding")]
		public Nullable<int> SharesOutstanding
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("sharesoutstanding");
			}
			set
			{
				this.OnPropertyChanging("SharesOutstanding");
				this.SetAttributeValue("sharesoutstanding", value);
				this.OnPropertyChanged("SharesOutstanding");
			}
		}
		
		/// <summary>
		/// Select a shipping method for deliveries sent to the account's address to designate the preferred carrier or other delivery option.
		/// </summary>
		[AttributeLogicalNameAttribute("shippingmethodcode")]
		public Nullable<AccountShippingMethod> ShippingMethod
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("shippingmethodcode");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (AccountShippingMethod)(Enum.ToObject(typeof(AccountShippingMethod), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("ShippingMethod");
				if (value == null)
				{
					this.SetAttributeValue("shippingmethodcode", null);
				}
				else
				{
					this.SetAttributeValue("shippingmethodcode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("ShippingMethod");
			}
		}
		
		/// <summary>
		/// Type the Standard Industrial Classification (SIC) code that indicates the account's primary industry of business, for use in marketing segmentation and demographic analysis.
		/// </summary>
		[AttributeLogicalNameAttribute("sic")]
		public string SICCode
		{
			get
			{
				return this.GetAttributeValue<string>("sic");
			}
			set
			{
				this.OnPropertyChanging("SICCode");
				this.SetAttributeValue("sic", value);
				this.OnPropertyChanged("SICCode");
			}
		}
		
		/// <summary>
		/// Choose the service level agreement (SLA) that you want to apply to the Account record.
		/// </summary>
		[AttributeLogicalNameAttribute("slaid")]
		public EntityReference SLA
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("slaid");
			}
			set
			{
				this.OnPropertyChanging("SLA");
				this.SetAttributeValue("slaid", value);
				this.OnPropertyChanged("SLA");
			}
		}
		
		/// <summary>
		/// Last SLA that was applied to this case. This field is for internal use only.
		/// </summary>
		[AttributeLogicalNameAttribute("slainvokedid")]
		public EntityReference LastSLAApplied
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("slainvokedid");
			}
		}
		
		/// <summary>
		/// Shows the ID of the stage.
		/// </summary>
		[AttributeLogicalNameAttribute("stageid")]
		public Nullable<Guid> DeprecatedProcessStage
		{
			get
			{
				return this.GetAttributeValue<Nullable<Guid>>("stageid");
			}
			set
			{
				this.OnPropertyChanging("DeprecatedProcessStage");
				this.SetAttributeValue("stageid", value);
				this.OnPropertyChanged("DeprecatedProcessStage");
			}
		}
		
		/// <summary>
		/// Shows whether the account is active or inactive. Inactive accounts are read-only and can't be edited unless they are reactivated.
		/// </summary>
		[AttributeLogicalNameAttribute("statecode")]
		public Nullable<AccountState> State
		{
			get
			{
				OptionSetValue optionSet = this.GetAttributeValue<OptionSetValue>("statecode");
				if (optionSet != null)
				{
					return ((AccountState)(Enum.ToObject(typeof(AccountState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("State");
				if (value == null)
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("State");
			}
		}
		
		/// <summary>
		/// Select the account's status.
		/// </summary>
		[AttributeLogicalNameAttribute("statuscode")]
		public Nullable<AccountStatusReason> StatusReason
		{
			get
			{
				OptionSetValue optionSet = this.GetAttributeValue<OptionSetValue>("statuscode");
				if (optionSet != null)
				{
					return ((AccountStatusReason)(Enum.ToObject(typeof(AccountStatusReason), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("StatusReason");
				if (value == null)
				{
					this.SetAttributeValue("statuscode", null);
				}
				else
				{
					this.SetAttributeValue("statuscode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("StatusReason");
			}
		}
		
		/// <summary>
		/// Type the stock exchange at which the account is listed to track their stock and financial performance of the company.
		/// </summary>
		[AttributeLogicalNameAttribute("stockexchange")]
		public string StockExchange
		{
			get
			{
				return this.GetAttributeValue<string>("stockexchange");
			}
			set
			{
				this.OnPropertyChanging("StockExchange");
				this.SetAttributeValue("stockexchange", value);
				this.OnPropertyChanged("StockExchange");
			}
		}
		
		/// <summary>
		/// Number of users or conversations followed the record
		/// </summary>
		[AttributeLogicalNameAttribute("teamsfollowed")]
		public Nullable<int> TeamsFollowed
		{
			get
			{
				return this.GetAttributeValue<Nullable<int>>("teamsfollowed");
			}
			set
			{
				this.OnPropertyChanging("TeamsFollowed");
				this.SetAttributeValue("teamsfollowed", value);
				this.OnPropertyChanged("TeamsFollowed");
			}
		}
		
		/// <summary>
		/// Type the main phone number for this account.
		/// </summary>
		[AttributeLogicalNameAttribute("telephone1")]
		public string MainPhone
		{
			get
			{
				return this.GetAttributeValue<string>("telephone1");
			}
			set
			{
				this.OnPropertyChanging("MainPhone");
				this.SetAttributeValue("telephone1", value);
				this.OnPropertyChanged("MainPhone");
			}
		}
		
		/// <summary>
		/// Type a second phone number for this account.
		/// </summary>
		[AttributeLogicalNameAttribute("telephone2")]
		public string OtherPhone
		{
			get
			{
				return this.GetAttributeValue<string>("telephone2");
			}
			set
			{
				this.OnPropertyChanging("OtherPhone");
				this.SetAttributeValue("telephone2", value);
				this.OnPropertyChanged("OtherPhone");
			}
		}
		
		/// <summary>
		/// Type a third phone number for this account.
		/// </summary>
		[AttributeLogicalNameAttribute("telephone3")]
		public string TelephoneThree
		{
			get
			{
				return this.GetAttributeValue<string>("telephone3");
			}
			set
			{
				this.OnPropertyChanging("TelephoneThree");
				this.SetAttributeValue("telephone3", value);
				this.OnPropertyChanged("TelephoneThree");
			}
		}
		
		/// <summary>
		/// Select a region or territory for the account for use in segmentation and analysis.
		/// </summary>
		[AttributeLogicalNameAttribute("territorycode")]
		public Nullable<AccountTerritoryCode> TerritoryCode
		{
			get
			{
				var optionSet = this.GetAttributeValue<OptionSetValue>("territorycode");
				if (optionSet == null)
				{
					return null;
				}
				else
				{
					return (AccountTerritoryCode)(Enum.ToObject(typeof(AccountTerritoryCode), optionSet.Value));
				}
			}
			set
			{
				this.OnPropertyChanging("TerritoryCode");
				if (value == null)
				{
					this.SetAttributeValue("territorycode", null);
				}
				else
				{
					this.SetAttributeValue("territorycode", new OptionSetValue((int)value));
				}
				this.OnPropertyChanged("TerritoryCode");
			}
		}
		
		/// <summary>
		/// Choose the sales region or territory for the account to make sure the account is assigned to the correct representative and for use in segmentation and analysis.
		/// </summary>
		[AttributeLogicalNameAttribute("territoryid")]
		public EntityReference Territory
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("territoryid");
			}
			set
			{
				this.OnPropertyChanging("Territory");
				this.SetAttributeValue("territoryid", value);
				this.OnPropertyChanged("Territory");
			}
		}
		
		/// <summary>
		/// Type the stock exchange symbol for the account to track financial performance of the company. You can click the code entered in this field to access the latest trading information from MSN Money.
		/// </summary>
		[AttributeLogicalNameAttribute("tickersymbol")]
		public string TickerSymbol
		{
			get
			{
				return this.GetAttributeValue<string>("tickersymbol");
			}
			set
			{
				this.OnPropertyChanging("TickerSymbol");
				this.SetAttributeValue("tickersymbol", value);
				this.OnPropertyChanged("TickerSymbol");
			}
		}
		
		/// <summary>
		/// Total time spent for emails (read and write) and meetings by me in relation to account record.
		/// </summary>
		[AttributeLogicalNameAttribute("timespentbymeonemailandmeetings")]
		public string TimeSpentByMe
		{
			get
			{
				return this.GetAttributeValue<string>("timespentbymeonemailandmeetings");
			}
		}
		
		/// <summary>
		/// Choose the local currency for the record to make sure budgets are reported in the correct currency.
		/// </summary>
		[AttributeLogicalNameAttribute("transactioncurrencyid")]
		public EntityReference Currency
		{
			get
			{
				return this.GetAttributeValue<EntityReference>("transactioncurrencyid");
			}
			set
			{
				this.OnPropertyChanging("Currency");
				this.SetAttributeValue("transactioncurrencyid", value);
				this.OnPropertyChanged("Currency");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[AttributeLogicalNameAttribute("traversedpath")]
		public string DeprecatedTraversedPath
		{
			get
			{
				return this.GetAttributeValue<string>("traversedpath");
			}
			set
			{
				this.OnPropertyChanging("DeprecatedTraversedPath");
				this.SetAttributeValue("traversedpath", value);
				this.OnPropertyChanged("DeprecatedTraversedPath");
			}
		}
		
		/// <summary>
		/// Type the account's website URL to get quick details about the company profile.
		/// </summary>
		[AttributeLogicalNameAttribute("websiteurl")]
		public string Website
		{
			get
			{
				return this.GetAttributeValue<string>("websiteurl");
			}
			set
			{
				this.OnPropertyChanging("Website");
				this.SetAttributeValue("websiteurl", value);
				this.OnPropertyChanged("Website");
			}
		}
		
		/// <summary>
		/// Type the phonetic spelling of the company name, if specified in Japanese, to make sure the name is pronounced correctly in phone calls and other communications.
		/// </summary>
		[AttributeLogicalNameAttribute("yominame")]
		public string YomiAccountName
		{
			get
			{
				return this.GetAttributeValue<string>("yominame");
			}
			set
			{
				this.OnPropertyChanging("YomiAccountName");
				this.SetAttributeValue("yominame", value);
				this.OnPropertyChanged("YomiAccountName");
			}
		}
		
		public struct Fields
		{
			
			public static string Category = "accountcategorycode";
			
			public static string Classification = "accountclassificationcode";
			
			public static string AccountId = "accountid";
			
			public static string Id = "accountid";
			
			public static string AccountNumber = "accountnumber";
			
			public static string AccountRating = "accountratingcode";
			
			public static string AddressOneAddressId = "address1_addressid";
			
			public static string AddressOneAddressType = "address1_addresstypecode";
			
			public static string AddressOneCity = "address1_city";
			
			public static string AddressOne = "address1_composite";
			
			public static string AddressOneCountryRegion = "address1_country";
			
			public static string AddressOneCounty = "address1_county";
			
			public static string AddressOneFax = "address1_fax";
			
			public static string AddressOneFreightTerms = "address1_freighttermscode";
			
			public static string AddressOneLatitude = "address1_latitude";
			
			public static string AddressOneStreetOne = "address1_line1";
			
			public static string AddressOneStreetTwo = "address1_line2";
			
			public static string AddressOneStreetThree = "address1_line3";
			
			public static string AddressOneLongitude = "address1_longitude";
			
			public static string AddressOneName = "address1_name";
			
			public static string AddressOneZIPPostalCode = "address1_postalcode";
			
			public static string AddressOnePostOfficeBox = "address1_postofficebox";
			
			public static string AddressOnePrimaryContactName = "address1_primarycontactname";
			
			public static string AddressOneShippingMethod = "address1_shippingmethodcode";
			
			public static string AddressOneStateProvince = "address1_stateorprovince";
			
			public static string AddressPhone = "address1_telephone1";
			
			public static string AddressOneTelephoneTwo = "address1_telephone2";
			
			public static string AddressOneTelephoneThree = "address1_telephone3";
			
			public static string AddressOneUPSZone = "address1_upszone";
			
			public static string AddressOneUTCOffset = "address1_utcoffset";
			
			public static string AddressTwoAddressId = "address2_addressid";
			
			public static string AddressTwoAddressType = "address2_addresstypecode";
			
			public static string AddressTwoCity = "address2_city";
			
			public static string AddressTwo = "address2_composite";
			
			public static string AddressTwoCountryRegion = "address2_country";
			
			public static string AddressTwoCounty = "address2_county";
			
			public static string AddressTwoFax = "address2_fax";
			
			public static string AddressTwoFreightTerms = "address2_freighttermscode";
			
			public static string AddressTwoLatitude = "address2_latitude";
			
			public static string AddressTwoStreetOne = "address2_line1";
			
			public static string AddressTwoStreetTwo = "address2_line2";
			
			public static string AddressTwoStreetThree = "address2_line3";
			
			public static string AddressTwoLongitude = "address2_longitude";
			
			public static string AddressTwoName = "address2_name";
			
			public static string AddressTwoZIPPostalCode = "address2_postalcode";
			
			public static string AddressTwoPostOfficeBox = "address2_postofficebox";
			
			public static string AddressTwoPrimaryContactName = "address2_primarycontactname";
			
			public static string AddressTwoShippingMethod = "address2_shippingmethodcode";
			
			public static string AddressTwoStateProvince = "address2_stateorprovince";
			
			public static string AddressTwoTelephoneOne = "address2_telephone1";
			
			public static string AddressTwoTelephoneTwo = "address2_telephone2";
			
			public static string AddressTwoTelephoneThree = "address2_telephone3";
			
			public static string AddressTwoUPSZone = "address2_upszone";
			
			public static string AddressTwoUTCOffset = "address2_utcoffset";
			
			public static string AgingThirty = "aging30";
			
			public static string AgingThirtyBase = "aging30_base";
			
			public static string AgingSixty = "aging60";
			
			public static string AgingSixtyBase = "aging60_base";
			
			public static string AgingNinety = "aging90";
			
			public static string AgingNinetyBase = "aging90_base";
			
			public static string BusinessType = "businesstypecode";
			
			public static string CreatedBy = "createdby";
			
			public static string CreatedByExternalParty = "createdbyexternalparty";
			
			public static string CreatedOn = "createdon";
			
			public static string CreditLimit = "creditlimit";
			
			public static string CreditLimitBase = "creditlimit_base";
			
			public static string CreditHold = "creditonhold";
			
			public static string CustomerSize = "customersizecode";
			
			public static string RelationshipType = "customertypecode";
			
			public static string PriceList = "defaultpricelevelid";
			
			public static string Description = "description";
			
			public static string DoNotAllowBulkEmails = "donotbulkemail";
			
			public static string DoNotAllowBulkMails = "donotbulkpostalmail";
			
			public static string DoNotAllowEmails = "donotemail";
			
			public static string DoNotAllowFaxes = "donotfax";
			
			public static string DoNotAllowPhoneCalls = "donotphone";
			
			public static string DoNotAllowMails = "donotpostalmail";
			
			public static string SendMarketingMaterials = "donotsendmm";
			
			public static string Email = "emailaddress1";
			
			public static string EmailAddressTwo = "emailaddress2";
			
			public static string EmailAddressThree = "emailaddress3";
			
			public static string EntityImageId = "entityimageid";
			
			public static string ExchangeRate = "exchangerate";
			
			public static string Fax = "fax";
			
			public static string FollowEmailActivity = "followemail";
			
			public static string FTPSite = "ftpsiteurl";
			
			public static string Industry = "industrycode";
			
			public static string LastOnHoldTime = "lastonholdtime";
			
			public static string LastDateIncludedInCampaign = "lastusedincampaign";
			
			public static string MarketCapitalization = "marketcap";
			
			public static string MarketCapitalizationBase = "marketcap_base";
			
			public static string MarketingOnly = "marketingonly";
			
			public static string MasterID = "masterid";
			
			public static string Merged = "merged";
			
			public static string ModifiedBy = "modifiedby";
			
			public static string ModifiedByExternalParty = "modifiedbyexternalparty";
			
			public static string ModifiedOn = "modifiedon";
			
			public static string GDPROptout = "msdyn_gdproptout";
			
			public static string AccountName = "name";
			
			public static string NumberOfEmployees = "numberofemployees";
			
			public static string OnHoldTimeMinutes = "onholdtime";
			
			public static string OpenDeals = "opendeals";
			
			public static string OpenDealsLastUpdatedOn = "opendeals_date";
			
			public static string OpenDealsState = "opendeals_state";
			
			public static string OpenRevenue = "openrevenue";
			
			public static string OpenRevenueBase = "openrevenue_base";
			
			public static string OpenRevenueLastUpdatedOn = "openrevenue_date";
			
			public static string OpenRevenueState = "openrevenue_state";
			
			public static string OriginatingLead = "originatingleadid";
			
			public static string Owner = "ownerid";
			
			public static string Ownership = "ownershipcode";
			
			public static string OwningBusinessUnit = "owningbusinessunit";
			
			public static string OwningTeam = "owningteam";
			
			public static string OwningUser = "owninguser";
			
			public static string ParentAccount = "parentaccountid";
			
			public static string ParticipatesInWorkflow = "participatesinworkflow";
			
			public static string PaymentTerms = "paymenttermscode";
			
			public static string PreferredDay = "preferredappointmentdaycode";
			
			public static string PreferredTime = "preferredappointmenttimecode";
			
			public static string PreferredMethodOfContact = "preferredcontactmethodcode";
			
			public static string PreferredFacilityEquipment = "preferredequipmentid";
			
			public static string PreferredService = "preferredserviceid";
			
			public static string PreferredUser = "preferredsystemuserid";
			
			public static string PrimaryContact = "primarycontactid";
			
			public static string PrimarySatoriID = "primarysatoriid";
			
			public static string PrimaryTwitterID = "primarytwitterid";
			
			public static string Process = "processid";
			
			public static string AnnualRevenue = "revenue";
			
			public static string AnnualRevenueBase = "revenue_base";
			
			public static string SharesOutstanding = "sharesoutstanding";
			
			public static string ShippingMethod = "shippingmethodcode";
			
			public static string SICCode = "sic";
			
			public static string SLA = "slaid";
			
			public static string LastSLAApplied = "slainvokedid";
			
			public static string DeprecatedProcessStage = "stageid";
			
			public static string State = "statecode";
			
			public static string StatusReason = "statuscode";
			
			public static string StockExchange = "stockexchange";
			
			public static string TeamsFollowed = "teamsfollowed";
			
			public static string MainPhone = "telephone1";
			
			public static string OtherPhone = "telephone2";
			
			public static string TelephoneThree = "telephone3";
			
			public static string TerritoryCode = "territorycode";
			
			public static string Territory = "territoryid";
			
			public static string TickerSymbol = "tickersymbol";
			
			public static string TimeSpentByMe = "timespentbymeonemailandmeetings";
			
			public static string Currency = "transactioncurrencyid";
			
			public static string DeprecatedTraversedPath = "traversedpath";
			
			public static string Website = "websiteurl";
			
			public static string YomiAccountName = "yominame";
		}
	}
}
